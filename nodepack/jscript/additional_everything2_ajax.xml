<node>
  <type_nodetype>1786405</type_nodetype>
  <doctext>// before moving stuff from here into production in [Everything2 Ajax] change references to it from E2AJAX to e2.ajax.

E2AJAX = e2.ajax = jQuery.extend(e2.ajax,{

    ajaxNode : 1873513,

    ajaxUrl :'http://'+window.location.hostname+&quot;/index.pl&quot;,
    // hostname included for Guest User on non-canonical domain with canonical base element in html head

    updateNodelet: function(nodeletName, params, callback) {
        var nodeletID = nodeletName.toLowerCase().replace(/\W/g,'');
        if (params == null) {params = {};}
        e2.ajax.update(nodeletID,'updateNodelet',{ args: nodeletName, query: params }, 1, callback);
    },

	getLastMessage: function() {
	
	},

	privateMessage: function(recipient, msgText) {
		e2.ajax.sendMessage(&quot;/msg &quot;+recipient+&quot; &quot;+msgText);
	},

	sendMessage: function(msgText,checkmsg,callback) {
		if ((msgText.length ==0)&amp;&amp;(checkmsg == '')) {
			e2.ajax.update(&quot;chatterbox_chatter&quot;, &quot;showchatter&quot;, {}, 0);
			$('talk_button').replaceWith('&lt;input type=&quot;button&quot; value=&quot;talk&quot; onclick=&quot;updateTalk()&quot;&gt;');
		}
		else {
			data = {
				node_id: e2.ajax.ajaxNode,
				mode: &quot;message&quot;,
				deletelist: checkmsg,
				msgtext: msgText.replace( /[^ -~]/gm , function(x) { return &quot;&amp;#&quot; + x.charCodeAt(0) + &quot;;&quot; ; } )
			};
			myAjax = new Ajax.Request(e2.ajax.ajaxUrl,{method: 'get', parameters: data, requestHeaders: &quot;Thu, 1 Jan 1970 00:00:00 GMT&quot;, onComplete: callback});
		}


	},

	voteNode: function(node_vote, weight) {
		data = {node_id:  e2.ajax.ajaxNode,
			mode: &quot;vote&quot;
	
			};
		data[&quot;vote__&quot; + node_vote] = weight;
		$(&quot;voteinfo_&quot;+node_vote).select(&quot;.vote_buttons&quot;).first().update(&quot;Voting ...&quot;);
		myAjax = new Ajax.Request(e2.ajax.ajaxUrl,
			{
				method: 'get', 
				parameters: data, 
				onSuccess: function() {  e2.ajax.update(&quot;voteinfo_&quot;+node_vote, &quot;voteit&quot;, node_vote+&quot;,2&quot;, 0);} } );
	},

	bookmarkNode: function(node_bookmark) {
		data = {
			op : &quot;bookmark&quot;,
			node_id : node_bookmark
		};
		myAjax = new Ajax.Request(e2.ajax.ajaxUrl, {method: 'get', parameters: data});
	},

	coolNode: function (node_cool) {
		data = {
			op : &quot;cool&quot;,
			cool_id : node_cool
		};
		myAjax = new Ajax.Request(e2.ajax.ajaxUrl, {method: 'get', parameters: data});
	},
	
	createTitle: function(title) {
		data = {type : &quot;e2node&quot;, 
			op : &quot;new&quot;,
			node : title};
		myAjax = new Ajax.Request(e2.ajax.ajaxUrl, {parameters: data, onSuccess: function() {e2.ajax.titleCreated = 1;}});
	},

	createWriteup: function(parent_e2node, doctext, writeuptype) {
		data = {op: &quot;new&quot;,
			type: &quot;writeup&quot;,
			writeup_doctext: doctext,
			writeup_parent_e2node: parent_e2node,
			writeuptype: writeuptype
		};
		new Ajax.Request(e2.ajax.ajaxUrl, {parameters: data, method: &quot;post&quot;});
	},

	postWriteup: function(title, doctext, writeuptype) {
		e2.ajax.createTitle(title);
		Deferrer.defer(function() {e2.ajax.getNodeInfo(title,&quot;e2node&quot;,&quot;node_id&quot;);}, &quot;e2.ajax.titleCreated&quot;);
		Deferrer.defer(function() {e2.ajax.createWriteup(e2.ajax.parentNode, doctext, writeuptype);}, &quot;e2.ajax.parentNode&quot;);
	},

	getNodeInfo: function(nodeTitle, nodeType, field) {
		data = {node_id:  e2.ajax.ajaxNode,
			mode: &quot;getNodeInfo&quot;,
			type: nodeType,
			field: field,
			title: nodeTitle
		};
		myAjax = new Ajax.Request(e2.ajax.ajaxUrl,{method: &quot;get&quot;, parameters: data, onComplete: function(response) { e2.ajax.parentNode = response.responseText;} });
	},

	checkCools: function(){
		e2.ajax.checkList(&quot;coolsJSON&quot;, e2.ajax.coolOn, e2.ajax.coolOff, &quot;.cooled&quot;, &quot;cooled_&quot;);
	},

	checkMessages: function(){
		e2.ajax.checkList(&quot;showchatterJSON&quot;, e2.ajax.messageOn, e2.ajax.messageOff, &quot;.messaged&quot;, &quot;messaged_&quot;);
	},

	messageOn: function(id, content, position) {
		content = &quot;&lt;div class='messaged' id='messaged_&quot;+id+&quot;'&gt;&quot;+content+&quot;&lt;/div&gt;&quot;;
		e2.ajax.itemOn(id,'messaged_','chatterbox_chatter',content,'bottom');
	},

	messageOff: function(messaged_id) {
		e2.ajax.itemOff(messaged_id);
	},

	feedItemOff: function(id) {
		e2.ajax.itemOff(id);
	},

	feedItemOn: function(id, content, position) {
		content = &quot;&lt;div class='feeditem' id='feeditem_&quot;+id+&quot;' style='padding: .5em; margin-bottom: .2em'&gt;&quot;+content+&quot;&lt;/div&gt;&quot;;
		e2.ajax.itemOn(id,'feeditem_','feed_list',content,'top');
	},

	checkFeedItems: function(){
		e2.ajax.checkList(&quot;userFeedJSON&quot;, e2.ajax.feedItemOn, e2.ajax.feedItemOff, &quot;.feeditem&quot;, &quot;feeditem_&quot;);
	},

	addFeedItem: function(doctext) {
		data = {
			type : &quot;feeditem&quot;,
			node_id : e2.ajax.ajaxNode,
			title: &quot;feeditem&quot;,
			op : &quot;new&quot;,
			doctext : doctext
		};
		myAjax = new Ajax.Request(e2.ajax.ajaxUrl, {
			parameters: data, 
			onSuccess: 
				function() {
					e2.ajax.checkFeedItems(); $('new_feed_item').value = '';
				}
		});
	},

	deleteFeedItem: function(item_id) {
		data = {
			mode : &quot;deleteFeedItem&quot;,
			node_id : e2.ajax.ajaxNode,
			feeditem_nodeid : item_id
		};
		myAjax = new Ajax.Request(e2.ajax.ajaxUrl, {
			parameters: data, 
			onSuccess:
				function() {
					e2.ajax.checkFeedItems();
				}
		});
		
	}
});</doctext>
  <node_id>2024790</node_id>
  <title>Additional Everything2 Ajax</title>
</node>
