<node>
  <doctext>[%
use XML::Simple;
use LWP::Simple;

use Digest::MD5 qw(md5_hex);

my $xmlin = XML::Simple-&gt;new(
    RootName =&gt; undef,
    ForceArray =&gt; 1,
    XMLDecl =&gt; 1,
);

my $patchids_ref = $xmlin -&gt; XMLin(get('http://'.($Everything::CONF-&gt;environment eq &quot;production&quot; ? '' : 'dev1.' ).
	'everything2.com/node/ticker/imported+patches'));

my $import_status  = getId(getNode(
	($Everything::CONF-&gt;environment eq &quot;production&quot; ? 'production-imported' : 'implemented'),'status'));

foreach my $patch_id( @{$patchids_ref -&gt; {patch_id}}){
  my $imported_patch = getNodeById($patch_id);
  $imported_patch -&gt; {cur_status} = $import_status;
  updateNode($imported_patch,-1);
}

my $production_status = getId(getNode(($Everything::CONF-&gt;environment eq &quot;production&quot; ?
	'production-ready' : 'production-implemented' ),'status'));

my @patches =
  getNodeWhere({'cur_status'=&gt;$production_status},'patch','createtime');

my @xmlPatches;
foreach my $patch (@patches){
  my %data;
  my $targetNode = getNodeById( $patch -&gt; {'for_node'} );
  my $targetNodeType = getNodeById ( $targetNode -&gt; {'type_nodetype'} );
  my $patchCode = $targetNode -&gt; { $patch -&gt; {'field'} };

  $data{'for_node'} = $patch -&gt; {'for_node'};
  $data{'for_node_nodetype'} = $targetNodeType -&gt; {'title'};
  $data{'for_node_title'} = $targetNode -&gt; {'title'};
  $data{'field'} = $patch -&gt; {'field'};
  $data{'purpose'} = $patch -&gt; {'purpose'};
  $data{'instructions'} = $patch -&gt; {'instructions'};
  $data{'author'} = getNodeById($patch -&gt; {author_user}) -&gt; {'title'};
  $data{'patch_id'} = $patch -&gt; {'patch_id'};

  #Remember that an applied patch like a production-ready patch will have its
  #code field swapped with the target node's.
  $data{'code'} = [ $patchCode ]; 
  $data{'target_hash'} = md5_hex($patch -&gt; {'code'} );
  push @xmlPatches, \%data ;
}

# For reason behind options, see http://perldesignpatterns.com/?XmlSimple
my $xmls = XML::Simple-&gt;new( 
    RootName =&gt; undef, 
    KeepRoot =&gt; 1, 
    ForceArray =&gt; 1,
    ForceContent =&gt; 1,
);

my $xml = $xmls-&gt;XMLout(
   {
     'e2patchset' =&gt;
     { 'patch' =&gt; \@xmlPatches }
   }
);

return $xml;

%]</doctext>
  <type_nodetype>1252389</type_nodetype>
  <title>patch exporter</title>
  <node_id>2016425</node_id>
</node>
