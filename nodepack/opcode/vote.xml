<node>
  <type_nodetype>415056</type_nodetype>
  <node_id>444189</node_id>
  <title>vote</title>
  <code>return unless $$USER{votesleft};
return if isSuspended($USER, &quot;vote&quot;);
return if $APP-&gt;isGuest($USER);
my @params = $query-&gt;param;
my $defID = getId(getNode('definition','writeuptype')) || 0;

my $UID = getId($USER) || 0;

my $oldXP = $$USER{experience};
my $prev_uid = 0;
my $numTimes=0;
my $VSETTINGS = getVars(getNode('vote settings', 'setting'));
my $countPlus=0;
my $countMinus=0;

foreach (@params) {
  next unless /^vote\_\_(\d+)$/;

  my $N = $1;
  my $val = $query-&gt;param($_);
  next unless ($val eq '1' or $val eq '-1');

  getRef($N);

  next unless $N;
  next unless $$N{type}{title} eq 'writeup' ;
  next if $$N{author_user} == $UID;
  next if $$N{wrtype_writeuptype}==$defID;

  if ( $APP-&gt;isUnvotable($N) ) {
    htmlcode('logWarning',getId($N).',vote: attempt on disallowed node: '.$val.' from '.$UID);
    next;
  }

  #N-Wing
  if ($$N{author_user}==$prev_uid) {
    ++$numTimes;
    if ($val&gt;0) {
      ++$countPlus;
    }
    elsif ($val&lt;0) {
      ++$countMinus;
    }
  }
  else {
    $prev_uid = $$N{author_user};
  }

  castVote(getId($N), $USER, $val, 0, $VSETTINGS);


  htmlcode('achievementsByType','vote,'.$$USER{user_id});
  htmlcode('achievementsByType','reputation,'.$$N{author_user});


  last unless $$USER{votesleft};
}

#N-Wing
if ($numTimes) {
  ++$numTimes;
  htmlcode('logWarning',',vote: multiple ('.$numTimes.') votes ('.$countPlus.'+  '.$countMinus.'-) for same person: '.$prev_uid);
}


</code>
</node>
