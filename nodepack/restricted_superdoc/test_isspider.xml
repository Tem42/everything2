<node>
  <type_nodetype>13</type_nodetype>
  <doctext>&lt;p&gt;This can be used by developers to test &lt;a href=[% urlGen({'node'=&gt;'isSpider','type'=&gt;'htmlcode'}); %]&gt;isSpider (htmlcode)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
[%
my $UID = $$USER{user_id};
my $isAdmin = exists $HTMLVARS{'group_gods'}{$UID};
my $isCE = $isAdmin || exists $HTMLVARS{'group_content editors'}{$UID};

my $str = '';
$str .= 'current UA: ' . $ENV{HTTP_USER_AGENT} . '&lt;br&gt;';

return $str . 'You must be an admin to test this.' unless $isAdmin;


$str .= htmlcode('openform','');
$str .= 'HTTP_USER_AGENT: ' . $query-&gt;textfield('test_useragent');

$str .= htmlcode('closeform','');


return $str;
%]
&lt;/p&gt;

&lt;p&gt;
[%
my $UID = $$USER{user_id};
my $isAdmin = exists $HTMLVARS{'group_gods'}{$UID};
my $isCE = $isAdmin || exists $HTMLVARS{'group_content editors'}{$UID};
return '' unless $isAdmin;

my $origTestUserAgent = $query-&gt;param('test_useragent');
if( (!defined $origTestUserAgent) || length($origTestUserAgent)==0 ) {
	return '';
}

#it is probably safe to pass anything to isSpider, but just be safe for now until security is checked
my $testUserAgent = $origTestUserAgent;
$testUserAgent =~ tr/A-Za-z0-9\/\-+._();: \\//cd;

my $str = '';

if($origTestUserAgent ne $testUserAgent) {
	$str .= 'Test user agent string had at least one invalid character for testing purposes.';
	$str .= ' (If you know what you are doing and it is safe, the RE in this tester code can be updated.)' if $isAdmin;
	return $str;
}

#$str .= 'current UA: ' . $ENV{HTTP_USER_AGENT} . '&lt;br&gt;';
$str .= 'test UA: ' . $testUserAgent . '&lt;br&gt;';

my $realUserAgent = $ENV{HTTP_USER_AGENT};
$ENV{HTTP_USER_AGENT} = $testUserAgent;
my $isSpiderResult = htmlcode('isSpider','');
$ENV{HTTP_USER_AGENT} = $realUserAgent;

$str .= 'isSpider: ' . $isSpiderResult;

return $str;
%]
&lt;/p&gt;
</doctext>
  <node_id>1935041</node_id>
  <title>test isSpider</title>
</node>
