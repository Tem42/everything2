<node>
  <title>OldMinerian Ban Tester</title>
  <doctext>&lt;h2&gt;Env:&lt;/h2&gt;
[%

my $env_str = &quot;&lt;p&gt;&quot;;

for my $env_key (keys %ENV) {

   $env_str .= &quot;$env_key : $ENV{$env_key}&lt;br&gt;&quot;

}

$env_str .= &quot;&lt;/p&gt;&quot;;

return $env_str;

%]

&lt;h2&gt;Ban test:&lt;/h2&gt;
[%

my $str = '';

my $addr = $ENV{HTTP_X_FORWARDED_FOR} || $ENV{REMOTE_ADDR} || undef;
my $name = &quot;StinkfistEulogy&quot;;

# No need to escape IPs if we just use prepare properly
my $blacklistCheckSQL = &lt;&lt;SQLEND;

  select ipblacklist_id
    from ipblacklist
    where 
      ipblacklist_ipaddress = ?

SQLEND

# We use eval to prevent errors in prepare() from causing error messages the page
my $cursor = eval { $DB-&gt;{dbh}-&gt;prepare($blacklistCheckSQL, $addr) };
my $errorMessage = &quot;&quot;;

# If $@ is true after an eval, an error was thrown, so we do nothing
unless( $@ ){
	if($cursor-&gt;execute()) {
		my $ROW = $cursor-&gt;fetchrow_hashref();
			if($$ROW{ipblacklist_id}){
				debugLog('attempted create user ['.$APP-&gt;encodeHTML($name,1).'] from blacklisted IP.');
				$errorMessage=&quot;We're sorry, but we can't accept new user signups from this IP address.&quot;;
			}
		$cursor-&gt;finish();
	}
}

$str.= &quot;&lt;h2 class='error_message'&gt;$errorMessage&lt;/h2&gt;&quot; if $errorMessage;

return $str;

%]
</doctext>
  <node_id>1990808</node_id>
  <type_nodetype>13</type_nodetype>
</node>
