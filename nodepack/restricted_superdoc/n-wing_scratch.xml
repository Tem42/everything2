<node>
  <type_nodetype>13</type_nodetype>
  <doctext>&lt;p&gt;this contains my working version version of [Everything User Search], originally copied Saturday, June 30, 2007&lt;/p&gt;

&lt;p&gt;the new feature I'm working on adding is to allow the user to filter by writeup type; the new htmlcodes do most of the work: [selectWriteupTypes] creates the HTML form elements, and [selectWriteupTypesResults] converts the user selection into something easy for the code to use&lt;/p&gt;

&lt;hr&gt;

[{openform}]

&lt;p&gt;
default test:&lt;br /&gt;
[{selectWriteupTypes:test}]&lt;br /&gt;
TODO: determine result&lt;br /&gt;
[%
htmlcode('selectWriteupTypesResults','test,0,sql');
%]
&lt;/p&gt;

&lt;!--
&lt;p&gt;
omit &quot;any&quot; and &quot;other&quot; items, omit &quot;not&quot;:&lt;br /&gt;
[%
return '';
#[ { selectWriteupTypes:testnothing,7 } ]
%]
TODO: determine result
&lt;/p&gt;
--&gt;

[{closeform}]

&lt;hr&gt;



&lt;p&gt;
This is where you can search for all the writeups contributed by any user.
Just enter the user name and select the order for the search.
The hypertexted writeup will bring you to that &lt;em&gt;individual&lt;/em&gt; writeup.
The &quot;(full)&quot; option will bring you to the entire e2node.
&lt;/p&gt;

[{openform}]

[% 
my @friends = (
	'lawnjart', 'clampe', 'dem bones', 'Jet-Poop', 'WickerNipple', 'dannye', 'sensei', 'jessicapierce', 'junkpile', 'Lord Brawl', 'ToasterLeavings', 'wharfinger', 'Lometa', 'Rancid_Pickle', 'riverrun', 'JayBonci', 'Quizro', 'Demeter', 'ideath', 'ophie', 'dann', 'Evil Catullus', 'Mr. Hotel', 'Roninspoon', 'wertperch', 'JerboaKolinowski', 'Apatrix', 'anthropod', 'Professor Pi', 'Igloowhite', 'iceowl', 'panamaus', 'creases', 'sneff', 'sid', 'Oolong', 'Teiresias', 'ryano', 'aneurin', 'Wiccanpiper', 'avalyn', 'TheDeadGuy', 'Excalibre', 'DejaMorgana', 'spiregrain', 'The Debutante', 'LaggedyAnne', 'paraclete', 'Junkill', 'XWiz', 'Timeshredder', $$USER{title}
);
my $friend = $query-&gt;param('usersearch');

$friend ||= $friends[rand(@friends)];
$query-&gt;textfield('usersearch', $friend);
# 2007-04-29 Apatrix // Removed thefez, ailie, knifegirl, yossarian, tes, coby, donfreenut, Halspal, nate, pingouin, N-Wing, discofever, Uberfetus; renamed Cletus the Foetus; added aneurin, Wiccanpiper, avalyn, TheDeadGuy, Excalibre, DejaMorgana, haze, GrouchyOldMan, spiregrain, The Debutante, LaggedyAnne, paraclete, Junkill, XWiz, Timeshredder
%]

Order By:
[%
#N-Wing converted this from FormMenu to plain old CGI so items could be in a logical order

#this sets the ordering of items in the combo box
my $choices = [
	'createtime DESC', 'createtime ASC',
	'title ASC', 'title DESC',
	'reputation DESC', 'reputation ASC',
	'wrtype_writeuptype ASC', 'wrtype_writeuptype DESC',
	'length(title) ASC', 'length(title) DESC',
	'RAND()',
];

#use Everything::FormMenu;
#my $orderMenu = new Everything::FormMenu();
#my $orderdata = {
my $labels = {
	'createtime DESC' =&gt; 'Age, Newest First',
	'createtime ASC' =&gt; 'Age, Oldest First',
	'title ASC' =&gt; 'Title, Forwards (...012...ABC...)',
	'title DESC' =&gt; 'Title, Backwards (...ZYX...210...)',
	'reputation DESC' =&gt; 'Reputation, Highest First',
	'reputation ASC' =&gt; 'Reputation, Lowest First',
	'wrtype_writeuptype ASC' =&gt; 'Type (person, thing, idea, place, ...)',
	'wrtype_writeuptype DESC' =&gt; 'Type (..., place, idea, thing, person)',
	'length(title) ASC' =&gt; 'Title Length, Shortest First',
	'length(title) DESC' =&gt; 'Title Length, Longest First',
	'RAND()' =&gt; 'doRman (Random)',
};

#$orderMenu-&gt;addHash($orderdata);

return $query-&gt;hidden('filterhidden') .
#$orderMenu-&gt;writePopupHTML($query, 'orderby','createtime DESC')
$query-&gt;popup_menu('orderby', $choices, 'createtime DESC', $labels)
;
%]

[{closeform}]
[%

my $us = $query-&gt;param('usersearch'); #user's title to find WUs on
my $orderby = $query-&gt;param('orderby');

my $orderdata = {
	'createtime DESC'=&gt;1,#'Newest First',
	'createtime ASC'=&gt;1,#'Oldest First',
	'title ASC'=&gt;1,#'By Title',
	'title DESC'=&gt;1,#'By Title Reverse',
	'reputation DESC'=&gt;1,#'Highest Reputation First',
	'reputation ASC'=&gt;1,#'Lowest Reputation First',
	'wrtype_writeuptype ASC'=&gt;1,#'Writeup Type (person, thing, idea, place)',
	'wrtype_writeuptype DESC'=&gt;1,#'Writeup Type (place, idea, thing, person)',
	'length(title) ASC'=&gt;1,#'Short Titles First',
	'length(title) DESC'=&gt;1,#'Long Titles First',
	'RAND()'=&gt;1,
};
#if(exists $HTMLVARS{group_gods}{$$USER{node_id}}) {	#sort by title length; is this useful?
#$$orderdata{'length(title) ASC'}=1;
#$$orderdata{'length(title) DESC'}=1;
#}

return '' unless($orderby);
$orderby = '' unless exists $$orderdata{$orderby};
#NOTE:  we must CHECK to make sure orderby is one of 
#our valid options, otherwise a user could potentially
#execute arbitrary SQL -- VERY BAD

$orderby ||= 'title ASC';

#quit if no user given to get info on
return 'It helps to give a user\'s nick.' unless $us;

#quit if invalid user given
my $user = getNode($us,'user');
return 'It seems that the user &quot;'.$us.'&quot; doesn\'t exist... how very, very strange... (Did you type their name correctly?)' unless(defined $user);

my $str = '';
#constants setup
my $uid = getId($user) || 0;	#lowercase = user searching on
my $UID = $$USER{node_id} || 0; #uppercase = user that is viewing
my $isRoot = exists $HTMLVARS{'group_gods'}{$UID};
my $isMe = ($uid == $UID) &amp;&amp; ($uid!=0);
my $rep = $isMe || $isRoot;
my $isEd = $rep || (exists $HTMLVARS{'group_content editors'}{$UID});

#quit for special bots
return 'Are you really looking for almost all the words in the English language?' if $$user{title} eq 'Webster 1913';
return '&lt;p align=&quot;center&quot;&gt;&lt;big&gt;&lt;big&gt;&lt;strong&gt;G r o w l !&lt;/strong&gt;&lt;/big&gt;&lt;/big&gt;' if ($$user{title} eq 'EDB');

#we'll show extra information, so explain it
if($isEd || $rep) {
	$str .= 'A writeup that was created with the &quot;&lt;em&gt;(Don\'t display in &quot;New Writeups&quot;)&lt;/em&gt;&quot; box checked has an &quot;H&quot; in the &quot;H&quot; column (for &lt;strong&gt;h&lt;/strong&gt;idden). A writeup that has been marked for destruction (that is, it will soon be deleted) has an &quot;X&quot; in the &quot;X&quot; column.&lt;br /&gt;&lt;br /&gt;';
}


#load writeup information


#database setup
my $dbh = $DB-&gt;getDatabaseHandle();
return 'Oh, no! Unable to get database handle!' unless $dbh;
my $qh;	#query handle
my $typeID = getId(getType('writeup')) || 0;

#filtering
my $filter='';	#SQL query
my $filterUI = '';	#filter display
my $filterHidden = $query-&gt;param('filterhidden');
if($filterHidden =~ /^([012])$/) { $filterHidden=$1; } else { $filterHidden=0; }
if($filterHidden &amp;&amp; ($isEd || $isMe)) {
	$filter .= ' AND' if length($filter);
	$filter .= ' notnew' . ($filterHidden eq '1' ? '=' : '!=') . '0';
	$filterUI .= ', ' if length($filterUI);
	$filterUI .= 'created '.($filterHidden eq '1' ? 'not hidden' : 'hidden');
} else {
	$filterHidden=0;
}
$filter = ' AND'.$filter if length($filter);

#determine WUs selected user authored
unless(length($filter)) {
	$qh = $dbh-&gt;prepare('SELECT COUNT(*) FROM node WHERE author_user='.$uid.' AND type_nodetype='.$typeID);
} else {
	$qh = $dbh-&gt;prepare('SELECT COUNT(*) FROM node,writeup WHERE author_user='.$uid.' AND type_nodetype='.$typeID.' AND writeup.writeup_id=node.node_id'.$filter);
}
$qh-&gt;execute();
my ($totalWUs) = $qh-&gt;fetchrow();
$qh-&gt;finish();

return linkNode($user) . ' has no writeups'.$filterUI.'.' unless $totalWUs;

#figure out which WUs we're looking at
my $NUMSHOW = 50;	#number to show at a time
my $startRow = ($query-&gt;param('count')) ? $query-&gt;param('count') : 0;
if($startRow=~/^(\d+)$/) { $startRow=$1; } else { $startRow=0; }
my $max = ($startRow+$NUMSHOW &lt; $totalWUs)? $startRow+$NUMSHOW : $totalWUs;

#load in only writeups we're currently looking at
$qh = $dbh-&gt;prepare(
	'SELECT * FROM node,writeup WHERE node.author_user='.$uid.
	' AND node.type_nodetype='.$typeID.
	' AND writeup.writeup_id=node.node_id'.
	$filter.
	' ORDER BY '.$orderby.
	' LIMIT '.$startRow.','.$NUMSHOW
);
$qh-&gt;execute();	#gets current WUs and their info
my @allWUInfo;
while(my $r=$qh-&gt;fetchrow_hashref) {
	push(@allWUInfo, $r);
}
$qh-&gt;finish();


#done with getting writeup info, the rest is just display
#(except for special cases, like showing what is killed)

#generates a sorting link with the same settings as is current, with the exception of the given values, which override the defaults
#params:
#	$disp - what to display
#	$startNum - starting number
#	$params - hash ref of override link
local *genLink = sub {
	my($disp,$startNum,$params)=@_;
	$disp ||= '???';
	$params ||= {};

	$$params{'orderby'} ||= $query-&gt;param('orderby') || 'createtime DESC';
	$$params{'usersearch'} ||= $us;
	($$params{'filterhidden'} = $filterHidden || 0) unless exists $$params{'filterhidden'};
	$$params{'count'} = $startNum if ((defined $startNum) &amp;&amp; ($startNum!=0));

	$$params{'node_id'}=$NODE-&gt;{node_id};
	my $linky = '&lt;a href='.urlGen($params).'&gt;'.$disp.'&lt;/a&gt;';

	$linky = '&amp;#91;'.$linky.'&amp;#93;' if (
		($$params{'orderby'} eq $orderby) &amp;&amp;
		($$params{'filterhidden'} eq $filterHidden) &amp;&amp;
		($$params{'usersearch'} eq $us) &amp;&amp;
		!$startNum
	);
	return $linky;
};

#generates a heading sort up/down choice
local *genSortHeading = sub {
	my ($disp1,$disp2, $orderField, $backwards) = @_;
	$backwards ||= 0;
	my $sort1 = $orderField . ' ' . ($backwards ? 'DESC' : 'ASC');
	my $sort2 = $orderField . ' ' . ($backwards ? 'ASC' : 'DESC');
	return genLink($disp1,0,{'orderby'=&gt;$sort1}) . '/' . genLink($disp2,0,{'orderby'=&gt;$sort2});
};

#header
if($isEd || $isMe) {
	$str .= 'Filter by hidden creation: ' . genLink('hidden and not hidden',0,{'filterhidden'=&gt;0}) . ', ' . genLink('only not hidden',0,{'filterhidden'=&gt;1}). ', ' . genLink('only hidden',0,{'filterhidden'=&gt;2}) ;
	$str .= &quot;\n&lt;/p&gt;&lt;p&gt;\n&quot;;
}
$str .= ($totalWUs==1 ? 'This writeup was' : 'These '.$totalWUs.' writeups '.$filterUI.' were all') . ' written by ' . linkNode($user, ($isMe?'you':0), {lastnode_id=&gt;0}) . &quot;:&lt;/p&gt;&lt;p&gt;\n&quot;;
$str .= '&lt;table border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;0&quot;&gt;'.
	&quot;\n&lt;tr&gt;&lt;th&gt;full/C!&lt;/th&gt;&quot;.
	'&lt;th align=&quot;left&quot;&gt;Writeup Title (type)&lt;/th&gt;';
$str .= '&lt;th colspan=&quot;2&quot; align=&quot;center&quot;&gt;Rep&lt;/th&gt;' if $rep;
$str .= '&lt;th&gt;H&lt;/th&gt;&lt;th&gt;X&lt;/th&gt;' if $isEd;
$str .= '&lt;th align=&quot;center&quot;&gt;Create Time&lt;/th&gt;';
$str .= &quot;&lt;/tr&gt;\n&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&quot;;

#$str .= '&lt;td align=&quot;left&quot;&gt;&lt;small&gt;'.linkNode($NODE,'forwards',{'orderby'=&gt;'title ASC', 'usersearch'=&gt;$us}).'/'.linkNode($NODE,'backwards',{'orderby'=&gt;'title DESC', 'usersearch'=&gt;$us}).'&lt;/small&gt;&lt;/td&gt;';
#$str .= '&lt;td colspan=&quot;2&quot; align=&quot;center&quot;&gt;&lt;small&gt;'.linkNode($NODE,'inc',{'orderby'=&gt;'reputation ASC', 'usersearch'=&gt;$us}).'/'.linkNode($NODE,'dec',{'orderby'=&gt;'reputation DESC', 'usersearch'=&gt;$us}).'&lt;/small&gt;&lt;/td&gt;' if $rep;
#$str .= '&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;' if $isEd;
#$str .= '&lt;td align=&quot;center&quot;&gt;&lt;small&gt;'.linkNode($NODE,'oldest',{'orderby'=&gt;'createtime ASC', 'usersearch'=&gt;$us}).'/'.linkNode($NODE,'newest',{'orderby'=&gt;'createtime DESC', 'usersearch'=&gt;$us}).' first&lt;/small&gt;&lt;/td&gt;';

$str .= '&lt;td align=&quot;left&quot;&gt;&lt;small&gt;'.genSortHeading('forwards','backwards', 'title',0).'&lt;/small&gt;&lt;/td&gt;';
$str .= '&lt;td colspan=&quot;2&quot; align=&quot;center&quot;&gt;&lt;small&gt;'.genSortHeading('inc','dec', 'reputation',0).'&lt;/small&gt;&lt;/td&gt;' if $rep;
$str .= '&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;' if $isEd;
$str .= '&lt;td align=&quot;center&quot;&gt;&lt;small&gt;'.genSortHeading('oldest','newest', 'createtime',0).' first&lt;/small&gt;&lt;/td&gt;';

$str .= &quot;&lt;/tr&gt;\n&quot;;


#prepare for loop
my $nr = getId(getNode('node row', 'superdoc'));
my $kuid;
my $drn=0;	#display row number - for row coloring
my $wuid;	#current WU's ID

#loop through WUs, and show their info
foreach my $wu (@allWUInfo) {

	$wuid = getId($wu);

	$str .= '&lt;tr';
	$str .= ' class=&quot;oddrow&quot; bgcolor=&quot;#bbbbff&quot;' unless ($drn%2);
	$str .= '&gt;';

	$str .= '&lt;td nowrap&gt;('. linkNode($$wu{parent_e2node}, 'full', {lastnode_id=&gt;0}).')';
	$str .= &quot; &lt;strong&gt;$$wu{cooled}C!&lt;/strong&gt;&amp;nbsp;&quot; if $$wu{cooled};
	$str .= '&lt;/td&gt;';

	$str .= '&lt;td align=&quot;left&quot;&gt;' . linkNode($wu, $$wu{title}, {lastnode_id=&gt;0}) . '&lt;/td&gt;';

	if($rep) {
		my $r = $$wu{reputation} || 0;

		#N-Wing TODO? do this correctly, using 2 queries (although a bit slower)
		my ($votescast) = $DB-&gt;sqlSelect('count(*)', 'vote', 'vote_id='.$wuid);
		my $p = ($votescast + $r)/2;
		my $m = ($votescast - $r)/2;
		$str .= '&lt;td&gt;'.$r.'&lt;/td&gt;&lt;td&gt;&lt;small&gt;+'.$p.'/-'.$m.'&lt;/small&gt;&lt;/td&gt;';

	}

	if($isEd) {
		$str .= '&lt;td&gt;' . ($$wu{notnew} ? 'H' : '').'&lt;/td&gt;&lt;td&gt;';
		$kuid = $DB-&gt;sqlSelect('linkedby_user', 'weblog', &quot;weblog_id=$nr AND to_node=$wuid&quot;) || 0;
		$str .= ($kuid ? 'X' : '') . '&lt;/td&gt;';
	}

	$str .= '&lt;td nowrap align=&quot;right&quot;&gt;&lt;small&gt;'.htmlcode('parsetimestamp', &quot;$$wu{createtime}&quot;)
               .&quot;&lt;/small&gt;&lt;/td&gt;&lt;/tr&gt;\n&quot;;

	++$drn;
}


my $num = ($NUMSHOW &lt;= $totalWUs - $max)? $NUMSHOW:$totalWUs-$max;
$str .= '&lt;tr&gt;&lt;td align=&quot;left&quot; colspan=&quot;3&quot;&gt;';

# Generate the jump values
my @jumps = (50, 100, 500, 1000);	# add more if you want
my %jumpprev;
my %jumpnext;

foreach my $jump (@jumps) {
	$jumpprev{$jump} = $startRow - $jump;
	$jumpnext{$jump} = $startRow + $jump;
}

my $brel = &quot;&lt;br /&gt;\n&quot;;

#$str .= '&lt;a href=';
#$str .= urlGen({node_id =&gt; getId($NODE), count=&gt;0, usersearch=&gt;$us, orderby=&gt;$orderby });
#$str .= &quot;&gt;First $NUMSHOW&lt;/a&gt;&lt;br /&gt;&quot;;
$str .= genLink('First '.$NUMSHOW, 0).$brel;

foreach my $jumpinc (@jumps) {
	my $jump = $jumpprev{$jumpinc};
	if($jump &gt;= 0) {
#		$str .= '&lt;a href=';
#		$str .= urlGen({node_id =&gt; getId($NODE), count =&gt; $jump, usersearch =&gt; $us, orderby =&gt; $orderby });
#		$str .= &quot;&gt;$jump-&quot; . ($jump+$NUMSHOW) . &quot;&lt;/a&gt;&lt;br&gt;\n&quot;;
		$str .= genLink($jump.'-'.($jump+$NUMSHOW), $jump).$brel;
	}
}

$str .= &quot;&lt;/td&gt;\n&quot;;
$str .= '&lt;td align=&quot;right&quot; colspan=&quot;4&quot;&gt;';

if($totalWUs &gt; $NUMSHOW) {
#	$str .= '&lt;a href=';
#	$str .= urlGen({node_id =&gt; getId($NODE), count =&gt; $totalWUs-$NUMSHOW, usersearch =&gt; $us, orderby =&gt; $orderby });
#	$str .= &quot;&gt;Last $NUMSHOW&lt;/a&gt;&lt;br /&gt;&quot;;
	$str .= genLink('Last '.$NUMSHOW, $totalWUs-$NUMSHOW).$brel;
}

foreach my $jumpinc (@jumps) {
	my $jump = $jumpnext{$jumpinc};
	if($jump &lt; $totalWUs) {
#		$str .= '&lt;a href=';
#		$str .= urlGen({node_id =&gt; getId($NODE), count =&gt; $jump, usersearch =&gt; $us, orderby =&gt; $orderby });
#		$str .= &quot;&gt;$jump-&quot; . ($jump+$NUMSHOW) . &quot;&lt;/a&gt;&lt;br /&gt;\n&quot;;
		$str .= genLink($jump.'-'.($jump+$NUMSHOW), $jump).$brel;
	}
}

$str .= &quot;&lt;/td&gt;\n&quot;;
$str .= &quot;&lt;/tr&gt;&lt;/table&gt;\n&quot;;

$str;
%]</doctext>
  <node_id>1375941</node_id>
  <title>N-Wing scratch</title>
</node>
