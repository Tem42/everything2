<node>
  <type_nodetype>13</type_nodetype>
  <doctext>[{changeroom}]
[%

use Time::HiRes;
my @start = Time::HiRes::gettimeofday;
my $timeStr;
my $timeCount = 1;

my $str;
my $wherestr;

if($USER-&gt;{in_room})
{
  $wherestr.=' room_id='.int($USER-&gt;{in_room});
} elsif (!getNodeById($USER-&gt;{in_room})) {
  $USER-&gt;{in_room} = 0;
}

my $UID = $$USER{node_id};
my $isRoot = exists $HTMLVARS{'group_gods'}{$UID};
my $isCE = $isRoot || exists $HTMLVARS{'group_content editors'}{$UID};
my $isEdev = exists $HTMLVARS{'group_edev'}{$UID};
my $isNinja = htmlcode('isinUsergroup',$UID.',1336287');

unless($isRoot || $$VARS{infravision}) {
	$wherestr.=' AND ' if $wherestr;
	$wherestr.='visible=0';
}

my $showActions = $$VARS{showuseractions} ? 1 : 0;

my @doVerbs;
my @doNouns;
if($showActions) {
@doVerbs = (
	'eating', 'watching', 'stalking', 'filing',
	'noding', 'amazed by', 'tired of', 'crying for',
	'thinking of', 'fighting', 'bouncing towards',
	'fleeing from', 'diving into', 'wishing for',
	'skating towards', 'playing with',
	'upvoting', 'learning of', 'teaching',
	'getting friendly with', 'frowned upon by',
	'sleeping on', 'getting hungry for', 'touching',
	'beating up',
	''	#leave this blank one in, so the verb is sometimes omitted
);
@doNouns = (
	'a carrot', 'some money', 'EDB', 'nails', 'some feet',
	'a balloon', 'wheels', 'soy', 'a monkey', 'a smurf',
	'an onion', 'smoke', 'the birds', 'you!', 'a flashlight',
	'hash', 'your speaker', 'an idiot', 'an expert', 'an AI',
	'the human genome', 'upvotes', 'downvotes',
	'their pants', 'smelly cheese', 'a pink elephant',
	'teeth', 'a hippopotamus', 'noders', 'a scarf',
	'your ear', 'killer bees', 'an angst sandwich'
);
}

my $showRoots = 1;
my $showContentEds = 1;
my $showDevs = $isEdev;

my $newbielook = $isRoot || $isCE;

my $powStructLink = '&lt;a href='.urlGen({'node'=&gt;'The Power Structure of Everything2', 'type'=&gt;'superdoc'}) . ' style=&quot;text-decoration: none;&quot; ';
my $linkRoots = $powStructLink . 'title=&quot;e2gods&quot;&gt;+&lt;/a&gt;';
# April fools -- or is it?
my $linkNinjas = $powStructLink . 'title=&quot;ninjagirls&quot;&gt;@&lt;/a&gt;';
#old-fashioned editors were indicated with a +
my $linkCEs = $powStructLink . 'title=&quot;Content Editors&quot;&gt;$&lt;/a&gt;';
my $linkDevs = $showDevs ? ( '&lt;a href='.urlGen({'node'=&gt;'edev', 'type'=&gt;'usergroup'}) . ' style=&quot;text-decoration: none;&quot; title=&quot;edev&quot;&gt;%&lt;/a&gt;' ) : 0;
my $linkBorged = '&lt;a href='.urlGen({'node'=&gt;'E2 FAQ: Chatterbox', 'type'=&gt;'superdoc'}) .' style=&quot;text-decoration: none;&quot; title=&quot;borged!&quot;&gt;&amp;#216;&lt;/a&gt;';

my $csr = $DB-&gt;sqlSelectMany('*', 'room', $wherestr, 'order by experience DESC');
#my $csr = $DB-&gt;sqlSelectMany('*', 'room', $wherestr, 'order by rand()');
#my $csr = $DB-&gt;sqlSelectMany('*', 'room', $wherestr, 'order by (numwriteups * merit) DESC');


#N-Wing steals JB's room topic thing, and uses it for users
my $userInfo = getVars(getNodeById(1177941)) || 0; #hard-coded ID for speed to ('User Info','setting')

my $num = 0;
my $sameUser;	#if the user to show is the user that is loading the page
my $userID;	#only get member_user from hash once
my $n;	#nick
my $is1337 = ($userID == 220 || $userID == 322);	#nate and hemos

my $ignorelist = $DB-&gt;sqlSelectMany('ignore_node', 'messageignore', 'messageignore_id='.$UID);
  
my @list;
while(my ($u) = $ignorelist-&gt;fetchrow())
{
  push @list, $u;
}

local *in_an_array = sub {
  my $needle = shift;
  my @haystack = @_;

  for (@haystack) {
    return 1 if $_ eq $needle;
  }
  return 0;
};

while(my $U = $csr-&gt;fetchrow_hashref())
{
  $num++;
  $userID = $$U{member_user};
  $sameUser = $UID==$userID; #integer test fast
  next if in_an_array($userID, @list) &amp;&amp; (!$isRoot);
  my $nameLink = linkNode($userID, $n=$$U{nick}, {lastnode_id=&gt;0});
  $nameLink = '&lt;strong&gt;'.$nameLink.'&lt;/strong&gt;' if $sameUser || $is1337;

  my $flags='';
  if($showRoots &amp;&amp; exists $HTMLVARS{'group_gods'}{$userID}) {
    $flags .= $linkRoots;
  }

  if($newbielook &amp;&amp; !($is1337)) {
    my $getTime = $DB-&gt;sqlSelect(&quot;datediff(now(),createtime)+1 as difftime&quot;,&quot;node&quot;,&quot;node_id=&quot;.$userID.&quot; having difftime&lt;31&quot;);

    if ($getTime) {
      if ($getTime&lt;=3) {
        $flags.='&lt;strong&gt;'.$getTime.'&lt;/strong&gt;';
      }
      else {
        $flags.=$getTime;
      }
    }
  }

  if($showContentEds &amp;&amp; exists $HTMLVARS{'group_content editors'}{$userID}) {
    $flags .= $linkCEs;
  }

  if($isNinja) {
    $flags .= $linkNinjas;
  }

  if($showDevs &amp;&amp; exists $HTMLVARS{'group_edev'}{$userID}) {
    $flags .= $linkDevs;
  }
  $flags .= $linkBorged if $$U{borgd}; #yes, no 'e' in 'borgd'
  if($$U{visible}) {
    $flags.='&lt;font color=&quot;#ff0000&quot;&gt;i&lt;/font&gt;';
  }

  if($$U{room_id} != 0 and $$USER{in_room} == 0)
  {
    my $rm = getNodeById($$U{room_id});
    $flags.='&lt;a href='.urlGen({'node_id' =&gt; $$U{room_id}}).' title=&quot;in room: '.$$rm{title}.'&quot; style=&quot;text-decoration: none;&quot;&gt;~&lt;/a&gt;';
  }

  $flags = ' &amp;nbsp;[ &lt;big&gt;' . $flags . '&lt;/big&gt; ]' if $flags;

  if($showActions &amp;&amp; !$sameUser &amp;&amp; (0.02 &gt; rand())) {
    $nameLink.=' &lt;small&gt;is ' . $doVerbs[int(rand(@doVerbs))] . ' ' . $doNouns[int(rand(@doNouns))] . '&lt;/small&gt;';
  }

  $n =~ tr/ /_/;
  if($userInfo &amp;&amp; exists $$userInfo{$n}) {
    $nameLink .= '&lt;small&gt;'.$$userInfo{$n}.'&lt;/small&gt;';
  }

  $str .= $nameLink . $flags . '&lt;br /&gt;';
}
$csr-&gt;finish;

# Apatrix 20080817 - commented out because both exceptions are no longer admins.
#if ($$USER{node_id} == 1312198 or $$USER{node_id} == 1122144) {
#  $timeStr = 'Elapsed - '.$timeCount.': ' . Time::HiRes::tv_interval(\@start, [ Time::HiRes::gettimeofday ]) . ' s&lt;br /&gt;';
#  $timeCount++;
#  $str .= $timeStr;
#}

#jay's topic idea.  Our slow cruel descent into IRC
my $topicsetting;
my $topic = '';

unless(($$VARS{topicCbox})||($$VARS{hideTopic})) {
  $topicsetting = getVars(getNodeById(1149799)); #hard coded id for speed ('Room Topics','setting')

  if(exists($$topicsetting{$$USER{in_room}})) {
    $topic = $$topicsetting{$$USER{in_room}};

    $topic = '&lt;hr width=&quot;99%&quot; /&gt;'.$topic if $$VARS{topicSeparator};
    $topic = '&lt;small&gt;'.parseLinks($topic).'&lt;/small&gt;&lt;br /&gt;&lt;hr width=&quot;100&quot; /&gt;';
  }
}

return '&lt;em&gt;There are no noders in this room.&lt;/em&gt;' unless $num;

my $intro = 'Your fellow noders ('.$num.'): ';
$intro.='&lt;small&gt;in '.linkNode($$USER{in_room}).'&lt;/small&gt;&lt;br /&gt;' if $$USER{in_room};
$intro.='&lt;br&gt;';

return $topic . $intro . $str;
%]

&lt;hr&gt;&lt;!-- ------------------------------ --&gt;&lt;hr&gt;

[{openform}]
&lt;p&gt;[{rearrangenodelets:nodelets,test nodelets,1}]&lt;/p&gt;
[{closeform}]
Quick Reference Test is Brawl's nodelet sandbox. Use at own risk.
</doctext>
  <node_id>1080591</node_id>
  <title>Brawl's Delirium</title>
</node>
