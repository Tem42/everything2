<node>
  <type_nodetype>13</type_nodetype>
  <title>Mass IP Blacklister</title>
  <doctext>&lt;div style=&quot;width:600px&quot;&gt;
&lt;p&gt;This page manages the IP addresses which are barred from &lt;strong&gt;creating new accounts&lt;/strong&gt;.  Except for very extreme circumstances, we don't block pageloads as [Guest User].&lt;/p&gt;

&lt;p&gt;This tool should be used to block access at the IP level based on externally maintained blacklists, until we implement a less hacky solution. - [Oolong[user]]&lt;/p&gt;
&lt;/div&gt;

[%
my $str;
### Remove an IP from the blacklist if requested
if(my $idToRemove = $query-&gt;param(&quot;remove_ip_block&quot;)){
	
	$idToRemove =~ s/(\\g|;|&quot;|'|`|\s)//g; 
	my $blacklistHash = $DB-&gt;sqlSelectHashref(&quot;ipblacklist_ipaddress&quot;,
		&quot;ipblacklist&quot;,&quot;ipblacklist_id = $idToRemove&quot;
	);
	
	my $removeFromBlacklistSQL = &quot;delete from ipblacklist where ipblacklist_id = \&quot;$idToRemove\&quot;;&quot;;

	eval { $DB-&gt;{dbh}-&gt;do($removeFromBlacklistSQL) };
	if( $@ ){
		return &quot;There was an error adding this block to the database: &quot;
		.$DB-&gt;{dbh}-&gt;errstr();
	}else{
                $APP-&gt;securityLog($NODE, $USER, &quot;$$USER{title} removed $$blacklistHash{ipblacklist_ipaddress} from the IP blacklist.&quot;);
		return &quot;The IP \&quot;$$blacklistHash{ipblacklist_ipaddress}\&quot; was successfully removed from the blacklist.&quot;;
	}

}

### Add an IP to the blacklist if requested
if($query-&gt;param(&quot;add_ip_block&quot;)){
	my $ipList = $query-&gt;param(&quot;bad_ips&quot;);
	$ipList =~ s/\s*\n\s*/NEXT/g;
	$ipList =~ s/(\\g|;|&quot;|'|`|\s)//g; 
	my @ipsToAdd = split( 'NEXT', $ipList );

	return &quot;You must list IPs to block.&quot; unless @ipsToAdd;
	
	my $blockReason = $query-&gt;param(&quot;block_reason&quot;);
	$blockReason =~ s/(\\g|;|&quot;|'|`)//g;
	return &quot;You must give a reason to block these IPs.&quot; unless $blockReason;
	$str.=&quot;&lt;ol&gt;\n&quot;;
	foreach my $ipToAdd ( @ipsToAdd ) {
		next unless( $ipToAdd );
		my $addBlacklistSQL = &quot;insert into ipblacklist (ipblacklist_user, ipblacklist_ipaddress, ipblacklist_comment) values (\&quot;$$USER{user_id}\&quot;,\&quot;$ipToAdd\&quot;,\&quot;$blockReason\&quot;);&quot;;
		eval { $DB-&gt;{dbh}-&gt;do($addBlacklistSQL) };
	
		if( $@ ){
			$str.= &quot;&lt;li&gt;There was an error adding this block to the database: &quot;
			.$DB-&gt;{dbh}-&gt;errstr().&quot;&lt;/li&gt;&quot;;
		}else{
                        $APP-&gt;securityLog($NODE, $USER, &quot;$$USER{title} added $ipToAdd to the IP blacklist: \&quot;$blockReason.\&quot;&quot;);
			$str.= &quot;&lt;li&gt;The IP \&quot;$ipToAdd\&quot; was successfully added to the blacklist.&lt;/li&gt;\n&quot;;
		}
	}
	$str.=&quot;&lt;/ol&gt;&quot;;

}
return $str;
%]



&lt;h3&gt;Blacklist IPs (one per line)&lt;/h3&gt;

[%
my $bad_ips = $query-&gt;param(&quot;bad_ips&quot;) || '';

return $query-&gt;start_form(-method=&gt;'post')
.$query-&gt;hidden('node_id', getId($NODE))
.'&lt;div&gt;&lt;strong&gt;IP Addresses&lt;/strong&gt;&lt;br /&gt;'
.$query-&gt;textarea(-name=&gt;'bad_ips', -default=&gt;$bad_ips, -rows=&gt;20, -columns=&gt;40)
.'&lt;/div&gt;&lt;br /&gt;'
.'&lt;div&gt;&lt;strong&gt;Reason&lt;/strong&gt;&lt;br /&gt;'
.$query-&gt;textfield('block_reason', '', 50)
.'&lt;/div&gt;&lt;br /&gt;'
.$query-&gt;submit('add_ip_block', 'Please blacklist these IPs.')
.$query-&gt;end_form;
%]
[{blacklistedIPs}]</doctext>
  <node_id>2007188</node_id>
</node>
