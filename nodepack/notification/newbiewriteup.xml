<node>
  <type_nodetype>1930710</type_nodetype>
  <description>a new user posts a writeup</description>
  <hourLimit>336</hourLimit>
  <invalid_check>use DateTime;
use DateTime::Format::Strptime;
my $dateParser = new DateTime::Format::Strptime(
  	pattern =&gt; '%F %T',
  	locale  =&gt; 'en_US',
  );
my $target_wu = getNodeById($$args{writeup_id});
my $isDraft = $$target_wu{type}{title} eq &quot;draft&quot;;
my $notifyPublishTime = $dateParser-&gt;parse_datetime($$args{publish_time});
my $writeupPublishTime = $dateParser-&gt;parse_datetime($$target_wu{publishtime});
# Tack an extra few seconds since there's a race between
#  writeup publish and notification being added, and they
#  presently occur in reverse order
$notifyPublishTime-&gt;add( seconds =&gt; 10) if defined $notifyPublishTime;
my $isOld = $notifyPublishTime ?
   DateTime-&gt;compare( $notifyPublishTime, $writeupPublishTime ) &lt; 0
   : 0
   ;
my $isInvalid = !$target_wu || $isDraft || $isOld;
return $isInvalid;
</invalid_check>
  <node_id>2016463</node_id>
  <title>newbiewriteup</title>
  <code>my $author_link = getNodeById($$args{author_id}) ?
  linkNode($$args{author_id})
  : &quot;(who has been unpersoned) &quot;
  ;

my $wu_link = getNodeById($$args{writeup_id}) ?
  &quot;titled &quot; . linkNode($$args{writeup_id})
  : &quot; which has since been removed&quot;
  ;


return &quot;A new user, &lt;b&gt;$author_link&lt;/b&gt;, posted a writeup $wu_link.&quot;;
</code>
</node>
