<node>
  <type_nodetype>4</type_nodetype>
  <node_id>2035530</node_id>
  <title>canseedraft</title>
  <code>return 0 if $APP-&gt;isGuest($USER);

my ($N, $editCheck) = @_;
getRef $N;

return 1 if $$USER{node_id} == $$N{author_user};

# we may not have a complete node. Get needed info
unless ($$N{publication_status}){
	($$N{publication_status}, $$N{collaborators}) = $DB -&gt; sqlSelect(
		'publication_status, collaborators',
		'draft',
		&quot;draft_id = $$N{node_id}&quot;
	);
}

return 0 if $editCheck &amp;&amp; !$$N{collaborators};

my $status = getNodeById($$N{publication_status});
return 0 if !$status || $$status{type}{title} ne 'publication_status';

my $isEditor = $APP-&gt;isEditor($USER);

my %equivalents = (
	nuked =&gt; 'private'
	, removed =&gt; $isEditor ? 'public' : 'private'
	, review =&gt; 'findable'
);

$status = $equivalents{$$status{title}} || $$status{title};

return 0 if $status eq 'private' and
	!$$N{collaborators} || $editCheck;

return 0 if $DB -&gt; sqlSelect('acctlock', 'user', &quot;user_id=$$N{author_user}&quot;);

unless ($editCheck){
	return 1 if $status eq 'public' and
		$$NODE{title} ne 'Findings:' || $$NODE{type}{title} ne 'superdoc';

	return 1 if $status eq 'findable';
}

# shared draft or edit check. Check if this user can see/edit
my @collab_names = split ',', $$N{collaborators};
my $UG;

foreach (@collab_names){
	$_ =~ s/^\s*|\s*$//g;
	return 1 if lc($_) eq lc($$USER{title}) or lc($_) eq 'everybody';
	if ($UG = getNode($_, 'usergroup')){
		my %collab_ids;
		\@collab_ids{ map $_-&gt;{node_id}, @{Everything::selectNodegroupFlat($UG)} };
 			return 1 if exists $collab_ids{$$USER{node_id}};
	}
}
return 0;
</code>
</node>
