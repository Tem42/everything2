<node>
  <type_nodetype>4</type_nodetype>
  <delegated>1</delegated>
  <node_id>675041</node_id>
  <title>rearrangenodelets</title>
  <code>#  allows users to select nodelets and their order
#  usage: [{rearrangenodelets:nodelets,default nodelets}]
#  first parameter:  user variable which stores the comma delimited list of selected node_id's ie $$VARS{nodelets}
#  second parameter: nodeletgroup which contains nodelets a user can choose from
#  optional third parameter: send form controls only, not an entire form

return if( $APP-&gt;isGuest($USER) );
my($varsfield,$nodeletgroup,$formoff)=@_;
return 'Missing parameter.' unless $varsfield &amp;&amp; $nodeletgroup;

my $i = undef;
my @selected = ();
my $prefix = 'nodeletedit';

if ($query -&gt; param($prefix)){
	my $id = undef;
	foreach (grep /^$prefix\d+/, $query-&gt;param()){
		push(@selected, $id) if ($id=$query -&gt; param($_)) &amp;&amp; !grep(/^$id$/, @selected);
	}
	$$VARS{nodelets} = join ',', @selected;
}else{
	@selected = split ',', $$VARS{nodelets};
}

my %names = ('0'=&gt;'(none)');
my @ids = (@{ getNode($nodeletgroup,'nodeletgroup')-&gt;{group} });
foreach(@ids,@selected){ # include @selected in case user has a non-standard nodelet selected
	$names{$_} ||= getNodeById($_)-&gt;{title};
}
@ids = sort { lc($names{$a}) cmp lc($names{$b}) } keys %names; # keys to include non-standard

my @menus = ();
for ($i=1;$selected[$i-1];$i++){
	push @menus, $query -&gt; popup_menu(-name =&gt; $prefix.$i, values =&gt; \@ids,
	labels =&gt; \%names, default =&gt; $selected[$i-1], force=&gt;1);
}

for($i;$ids[$i];$i++){
	push @menus, $query -&gt; popup_menu(-name =&gt; $prefix.$i, values =&gt; \@ids,
	labels =&gt; \%names, default =&gt; '0', force=&gt;1);
}

my $str = $query-&gt;hidden(-name =&gt; $prefix, value=&gt;1).qq'&lt;ul id=&quot;rearrangenodelets&quot;&gt;&lt;li&gt;\n'.
	join(&quot;&lt;/li&gt;\n&lt;li&gt;&quot;, @menus).&quot;&lt;/li&gt;&lt;/ul&gt;\n&quot;;

return $str if $formoff;
return htmlcode('openform').$str.htmlcode('closeform');
</code>
</node>
