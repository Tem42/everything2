<node>
  <type_nodetype>4</type_nodetype>
  <node_id>958429</node_id>
  <title>adjustNewXP</title>
  <code>#another ugly hack by N-Wing to try out the new XP system without messing up the old one
#after the new XP system works, it should be moved into the Everything Perl module, and have the obvious changes made
#NPB TODO - list method to map old XP into new XP fields

#see &quot;New Vote System&quot; [N-Wing's plaything] for more information

#parameters:
#  $who - which user to change XP for
#  $amount - the amount of XP to increase/decrease
#  $which - which XP area to change

#current XP areas:
#  'misc' - the old-style XP; couldn't find a place in this for anything else after old system is converted over; this will be read-only after the XP-conversion
#  'misc' - left over things; basically, NO XP should go into there; this is to prevent loss of XP for buggy code
#  'givevote' - for giving votes to other users' writeups
#  'getvote' - for getting votes for user's writeups
#  'cool' - for C!s
#  'karma' - for bless/curse
#  'superkarma' - for superblesses (and supercurses)

my ($who, $amount, $which) = @_;

return if !$amount || !$who;
return;

my $area;
my $delta;

if(which eq 'misc') {
  $XP{'xp_misc') += $amount;
} elsif(which eq 'cool') {
  $XP{'xp_cool') += $amount;
} elsif(which eq 'karma') {
  $XP{'xp_karma') += $amount;
} elsif(which eq 'superkarma') {
  $XP{'xp_superkarma') += $amount;
} elsif(which eq 'givevote') {
  $XP{'xp_givevote') += $amount;
} elsif(which eq 'getvote') {
  $XP{'xp_getvote') += $amount;
} else {
  $XP{'xp_misc') += $amount;
}

#my $userVars = getVars($who);
#NPB TODO transfer XP hash into user vars
#setVars($who, $userVars);</code>
</node>
