<node>
  <type_nodetype>4</type_nodetype>
  <node_id>1895704</node_id>
  <title>selectWriteupTypesResults</title>
  <code>my ($listName, $bitOptions, $returnType) = @_;
$listName = 'multiplewriteuptypes' unless $listName;
$bitOptions |= 0;

#updated: 2007-07-03(2) (Tuesday, July 3, 2007)

#after a user chooses multiple writeup types (see selectWriteupTypes), this
#converts the various CGI parameters into something more easily used
#
#example usage: Everything User Search

#parameters (same as in selectWriteupTypes):
#	listName: CGI scrolling list name
#	bitOptions:
#		1 = omit &quot;(all)&quot; option
#		2 = omit &quot;(others)&quot; option
#		4 = omit &quot;not&quot; option

#return:
#	type of value returned in $HTMLVARS{wrtype_writeuptype} depends upon returnType;
#	after function returns, access value by doing:
#
#		#'sql'
#		#something like TODO EXAMPLE
#		my $sqlWhereSection = $HTMLVARS{wrtype_writeuptype};
#
#		#'ids'
#		#something like TODO EXAMPLE
#		my @databaseIDs = @{ $HTMLVARS{wrtype_writeuptype} };
#
#		#'param'
#		#something like TODO EXAMPLE
#		my $partialURL = $HTMLVARS{wrtype_writeuptype};
#
#	'ids' - database IDs of selected items returned, 'all' and 'other' are special cases
#	'sql' - partial selection in SQL WHERE clause
#		returns undef if the selection would be useless (example: choosing only the &quot;all&quot; selection)
#		if useful, selection already has () placed around it
#		safe: result can be directly entered in HTML stringw (selection on numeric types, and the user can not manually enter anything that is invalid)
#	'param' - value that can be embedded in URL
#		example use: only showing some of selection, and links created to show more of selection
#

my $key = 'wrtype_writeuptype';	#only the same as in writeup dbtable so one less thing to remember
delete $HTMLVARS{$key} if exists $HTMLVARS{$key};	#don't want old values accidently returned

my $chooseInverse = $query-&gt;param($listName.'_inverse');
if(!defined $query-&gt;param($listName)) {
	#no CGI params given, so nothing to do
	return;
}
my @explicitlySelected = $query-&gt;param($listName);



#TODO




my $s = '';

$s .= ($chooseInverse ? 'inverse mode' : 'normal mode') . '&lt;ul&gt;
';
foreach(@explicitlySelected) {
	$s .= '&lt;li&gt;'.$_.'&lt;/li&gt;
';
}
$s .= '&lt;/ul&gt;';

$s;
</code>
</node>
