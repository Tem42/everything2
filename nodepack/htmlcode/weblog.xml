<node>
  <type_nodetype>4</type_nodetype>
  <node_id>458113</node_id>
  <title>weblog</title>
  <code>return htmlcode( 'legacyweblog' , @_ ) unless ( htmlcode( 'isZen' ) ) ;
my ( $interval, $log_id, $remlabel, $hideLinker, $skipFilterHTML, $listOnly ) = @_ ;

$log_id ||= getId( $NODE ) ;
$interval ||= 5 ;
$listOnly ||= 0 ;

my $endat = $interval ;
if ($query &amp;&amp; $query-&gt;param( 'nextweblog' )) {
	$endat = $query-&gt;param( 'nextweblog' );
}
my $offset = ( $endat == $interval ? '' : ' OFFSET '.( $endat - $interval ) ) ;

my $csr = $DB-&gt;sqlSelectMany(
	'weblog_id, to_node, linkedby_user, linkedtime' ,
	'weblog' ,
	&quot;weblog_id=$log_id AND removedby_user=0&quot; ,
	&quot;ORDER BY linkedtime DESC LIMIT $interval$offset&quot; ) ;

my %weblogspecials ;

$weblogspecials{ getloggeditem } = sub {
	my ( $L ) = @_ ;
	my $N = getNodeById( $L-&gt;{ to_node } ) ;
	# removed nodes/de-published drafts:
	return &quot;Can't get node id &quot;.$L-&gt;{ to_node } unless $N and $$N{type}{title} ne 'draft';
	$_[0] = { %$N , %$L } ; # $_[0] is a hashref from a DB query: no nodes harmed
	return '' ;
} ;

return &quot;&lt;ul&gt;\n&quot;.htmlcode( 'show content' , $csr , '&lt;li&gt; getloggeditem, title, byline' , %weblogspecials ).
	&quot;\n&lt;/ul&gt;&quot; if $listOnly eq '1' ;

my $instructions = 'getloggeditem, title, byline, date' ;
my $uid = getId( $USER ) ;
my $canRemove = $APP-&gt;isAdmin($USER) ;
my $isCE = $canRemove || $APP-&gt;isEditor($USER) ;
$canRemove ||= ( $$USER{ node_id } ==
	getVars( getNode( 'usergroup owners' , 'setting' ) ) -&gt; { $$NODE{ node_id } } ) ;

# linkedby: 0=show (default), 1=CE can see, 2=root can see, 3 or anything else=nobody can see
# BUG: 2 -&gt; owner can see if CE even if not root
if( !defined $hideLinker ) {
	$hideLinker = 0 ;
} elsif ( !( ( $hideLinker =~ /^(\d)$/ ) &amp;&amp; ( ( $hideLinker = $1 ) &lt;= 3 ) ) ) {
	$hideLinker = 3;
}
--$hideLinker if $isCE ;
--$hideLinker if ( $canRemove ) ;

unless ( $hideLinker &gt; 0 ) {
	$instructions .= ', linkedby' ;
	$weblogspecials{ linkedby } = sub {
		my $N = shift ;
		return '&lt;div class=&quot;linkedby&quot;&gt;linked by '.linkNode( $$N{linkedby_user}, '', {lastnode_id =&gt;0} ).'&lt;/div&gt;'
			unless $$N{linkedby_user}==$$N{author_user} ;
		return '' ;
	} ;
}

$remlabel ||= &quot;remove&quot;;
if ( $canRemove ) {
	$instructions .= ', remove' ;
	eval( q|$weblogspecials{ remove } = sub {
		my $N = shift ;
		return '&lt;a class=&quot;remove&quot; href='
		. urlGen( { node_id =&gt; $$N{ weblog_id }, source =&gt; $$N{ weblog_id } , to_node =&gt; $$N{ to_node } ,
			op =&gt; 'removeweblog' } )
			. '&gt;'.'|.$remlabel.q|'.'&lt;/a&gt;' ;
	}|);
}
$instructions .= ( $skipFilterHTML ne '1' ? ', content' : ', unfiltered' ) ;

my $str = htmlcode( 'show content' , $csr , $instructions , %weblogspecials ) ;
my $isolder = $DB-&gt;sqlSelect( 'linkedtime' , 'weblog' ,
	&quot;weblog_id=$log_id AND removedby_user=0&quot; , &quot;ORDER BY linkedtime DESC LIMIT 1 OFFSET $endat&quot; ) ;

if ( $offset or $isolder ) {
	$str .= '&lt;div class=&quot;morelink&quot;&gt;' ;
	$str .= linkNode( $NODE, '&lt;- newer', { nextweblog =&gt; $endat - $interval } ) if $offset ;
	$str .= ' | ' if $offset and $isolder ;
	$str .= linkNode( $log_id , 'older -&gt;' , { nextweblog =&gt; $endat + $interval } ) if $isolder ;
	$str .= '&lt;/div&gt;' ;
}

&quot;&lt;div class=\&quot;weblog\&quot;&gt;\n$str\n&lt;/div&gt;&quot; ;</code>
</node>
