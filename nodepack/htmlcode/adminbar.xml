<node>
  <type_nodetype>4</type_nodetype>
  <node_id>26</node_id>
  <title>adminbar</title>
  <code>return if $APP-&gt;isGuest($USER);

my $disp = $query-&gt;param('displaytype');
my @nodes;
my $str;

my $CLONER = 418271; #hard-coded node cloner superdoc
my $PARAMS = {
	'srcnode_id' =&gt; $$NODE{node_id}, 
	'node_id' =&gt; $CLONER,
	'newname' =&gt; 'NEWNAME',
};

my $url = urlGen($PARAMS);
my $useTitle = $$NODE{title};
$useTitle =~ s/\&quot;/\\&quot;/g;
my $script = &quot;
&lt;script language=\&quot;javascript\&quot;&gt;
&lt;!--
function cloneNode() {
  var newname = prompt(\&quot;Cloning node: \\\&quot;$useTitle \\\&quot;; Enter a new name:\&quot;, \&quot;\&quot;);

  if(newname) {
    var url = $url;
    
    url = url.replace(/NEWNAME/, newname);
    url = url.replace(/ /g, \&quot;+\&quot;);
    parent.location = url;
  }
}
// --&gt;
&lt;/script&gt;&quot;;

$str = $script;

$disp ||= 'display';

# This will recurse up the nodetype inheritance hierarchy
# and find the appropriate display and edit pages for this
# node.
#
# this seems good for eCore, but why not just hardcode display and edit here? Do we have any other displaytypes available? - ktj 4.20.06
# push @nodes, getPages($NODE);

my @displays;
push @displays, 'display';
push @displays, 'edit';



foreach my $display (@displays) {
	if ($disp eq $display){
		$str .= $display . ' ';
	} else {
		next if ($display eq 'edit' and not canUpdateNode($USER, $NODE));
		$str .= linkNode($NODE, $display, {displaytype =&gt; $display}) . ' ';
	}
}



$str .= &quot;&lt;a href='javascript: cloneNode();'&gt;clone&lt;/a&gt;&quot;;

#jb says: This is for me to make it easier to do clientdevstuff

$str .= &quot; &quot;.linkNode($NODE, &quot;xmltrue&quot;, {&quot;displaytype&quot; =&gt; &quot;xmltrue&quot;});
$str .= &quot; &quot;.linkNode($NODE, &quot;help&quot;, {&quot;displaytype&quot; =&gt; &quot;help&quot;});

# If a group editor is open, add a link to add this node to
# the group.  We will need to check if the nodegroup has
# a restriction on what nodetypes can be in the group.
# jb says: this is kinda messy, so we're removing it
# 2.21.2002
#if ($$VARS{group}) {
#	my $GR = $DB-&gt;getNodeById($$VARS{group}, 'light');
#
#	if(canUpdateNode($USER, $GR))
#	{
#		$str .= &quot;&lt;SCRIPT language=\&quot;javascript\&quot;&gt;
#	function updateGroup() {
#	window.open('&quot; .
#		urlGen({node_id =&gt; $$VARS{group},
#			displaytype =&gt; 'editor',
#			add =&gt; getId ($NODE)}, &quot;noquotes&quot;) .
#		&quot;','&quot;. $$VARS{group} .&quot;',
#		'');	
#	}
#&lt;/SCRIPT&gt;
#&lt;A href=\&quot;javascript:updateGroup()\&quot;&gt;add to &amp;quot;$$GR{title}&amp;quot;&lt;/a&gt;&quot;;
#	}
#}
#
#
my $title = $$NODE{title};
$title =~ s/\&quot;/\'/gs;

$str.=&quot;\n&lt;SCRIPT language=\&quot;javascript\&quot;&gt;
       function confirmDelete(){
          if(confirm(\&quot;Delete '$title'?\&quot;)){
		parent.location=&quot; .
		urlGen({node_id=&gt;getId($NODE),op=&gt;'nuke'}) .
		&quot;; }
        }
       &lt;/SCRIPT&gt;\n
	&lt;a href='javascript: confirmDelete();'&gt;delete&lt;/a&gt;&quot; 
			if(canDeleteNode($USER, $NODE));                                                        
                               
&quot;&lt;div id='adminbar'&gt;$str&lt;/div&gt;&quot;;</code>
</node>
