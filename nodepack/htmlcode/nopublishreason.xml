<node>
  <type_nodetype>4</type_nodetype>
  <node_id>2036363</node_id>
  <title>nopublishreason</title>
  <code># find any reasons for a user not being able to post a writeup (to an e2node)
# second argument is optional.
# returns text of reason, existing writeup, or ''

my ($user, $E2N) = @_;
$user ||= $USER;
getRef $user;
getRef $E2N if $E2N;

if( $APP-&gt;isGuest($USER) ){
	return parseLinks('[login[superdoc]|Log in] or [create a new user[superdoc]|register]
		to write something here or to contact authors.');
}

# unverified email address:

return parseLinks('You need to [verify your email account[superdoc]] before you can publish writeups.')
	if isSuspended($user, 'email');

# already has a writeup here:

my @group = @{ $$E2N{group} } if $E2N and $$E2N{group};
foreach (@group){
	getRef($_);
	return $_ if $$_{author_user} == $$user{node_id};
}

# no more checks if author has an editor-approved a draft for this node:
my $linktype = getId(getNode 'parent_node', 'linktype');
return '' if $E2N &amp;&amp; $DB -&gt; sqlSelect(
	'food' # 'food' is the editor
	, 'links JOIN node ON from_node=node_id'
	, &quot;to_node=$$E2N{node_id} AND linktype=$linktype AND node.author_user=$$user{node_id}&quot;);

my $notMe = ($$user{node_id} ne $$USER{node_id});

# user on forbiddance:

my $userlock = $DB-&gt;sqlSelectHashref('*', 'nodelock', &quot;nodelock_node=$$user{user_id}&quot;);
$userlock = {} if !$userlock &amp;&amp; isSuspended($user, 'writeup');

return ($notMe ? 'User is' : 'You are')
	.' currently not allowed to publish writeups. '
	.parseLinks($$userlock{nodelock_reason}) if $userlock;

# node is locked:

my $nodelock = $DB-&gt;sqlSelectHashref('*', 'nodelock', &quot;nodelock_node=$$E2N{node_id}&quot;) if $E2N;
return '' unless $nodelock;

return 'This node is locked. '
	.parseLinks($$nodelock{nodelock_reason}
	.($notMe ? '' : '&lt;p&gt;If you feel you have something to add to this node, attach your
	[Drafts[superdoc]|draft] to it and request review by an
	[Content Editors[usergroup]|editor].&lt;/p&gt;'));
</code>
</node>
