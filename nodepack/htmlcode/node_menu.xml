<node>
  <type_nodetype>4</type_nodetype>
  <node_id>176006</node_id>
  <title>node_menu</title>
  <code>my ($field, @VALUES) = @_;
my @idlist;
my %items;
my @TYPES;


$field or return;
my ($fieldname, $type) = split /\_/, $field;
my ($name) = $$NODE{type}{title} .'_'. $field;

#if no explicit types, use the field name to determine
@VALUES or push @VALUES, $type;

foreach (@VALUES)
{
  next if ($_ eq 'user');
	if(/^-/)
	{
		# If one of the types is in the form of
		# -name_value, we need to split it apart
		# and store it.	
		my ($name, $value);
		$_ =~ s/^-//;
		
		($name, $value) = split '_', $_;
		push @idlist, $value;
		$items{$value} = $name;

		undef $_;  # This is not a type	
	}
	else
	{
		my $TYPE = $DB-&gt;getType($_); 
		push @TYPES, $TYPE if(defined $TYPE); #replace w/ node refs
	}
}

my $NODELIST = $DB-&gt;selectNodeWhere({ type_nodetype =&gt; \@TYPES }, &quot;&quot;, &quot;title&quot;) if @TYPES;

foreach my $N (@$NODELIST) {
	$N = $DB-&gt;getNodeById($N, 'light');
	my $id = getId $N;
	push @idlist, $id;
	$items{$id} = $$N{title};
}

# The default thing to select
my $SELECT = $$NODE{$field};

if(not defined $items{&quot;0&quot;})
{
	# We have no value for zero, make it default if current value is not in menu
	$items{&quot;0&quot;} = $items{$SELECT} ? 'none' : ' ' ;
	unshift @idlist, &quot;0&quot;;
}

$query-&gt;popup_menu($name, \@idlist, $SELECT, \%items);
</code>
</node>
