<node>
  <type_nodetype>4</type_nodetype>
  <node_id>539558</node_id>
  <title>uploaduserimage</title>
  <code>use POSIX qw(strftime);
use Net::Amazon::S3;
use File::Copy;
use Image::Magick; 

my ($field) = @_;

return if isSuspended($NODE,&quot;homenodepic&quot;);

my $aws_access_key_id = $Everything::CONF-&gt;{s3}-&gt;{homenodeimages}-&gt;{access_key_id};
my $aws_secret_access_key = $Everything::CONF-&gt;{s3}-&gt;{homenodeimages}-&gt;{secret_access_key};

my $s3 = Net::Amazon::S3-&gt;new(
      {   aws_access_key_id     =&gt; $aws_access_key_id,
          aws_secret_access_key =&gt; $aws_secret_access_key,
          retry                 =&gt; 1,
      }
);
my $bucket = $s3-&gt;bucket($Everything::CONF-&gt;{s3}-&gt;{homenodeimages}-&gt;{bucket});

my $str ='';
my $image = Image::Magick -&gt; new(); 
my $name = $field.'_file';
my $tmpfile = '/tmp/everythingimage' . int(rand(10000)); 

my $sizelimit = 800000;
my $maxWidth = 200;
$maxWidth = 400 if (($APP-&gt;getLevel($NODE)&gt;4)||(isGod($USER)));
my $maxHeight = 400;
$maxHeight = 800 if (($APP-&gt;getLevel($NODE)&gt;4)||(isGod($USER)));


$sizelimit = 1600000 if (isGod($USER));

my $fname;
if ($fname = $query-&gt;upload($name)) { #recent change to CGI.pm

  my $basename = $$NODE{title};
  $basename =~ s/\W/_/gs;
  my $imgname = $basename;
  
  ref $query-&gt;uploadInfo($fname) eq &quot;HASH&quot; or return &quot;Image upload failed. If this persists, contact an administrator.&quot;;
  my $content = $query-&gt;uploadInfo($fname)-&gt;{'Content-Type'};
  unless ($content =~ /(jpeg|jpg|gif|png)$/) {
     return &quot;this doesn't look like a jpg, gif or png!&quot; 
  } 
  $imgname .= '.'.$1;
  $tmpfile .= '.'.$1;

  my $size;
  {
     my $buf;
     $buf = join ('', &lt;$fname&gt;);
     $size = length($buf);
     if($size &gt; $sizelimit)
     {
        return &quot;your image is too big.  The current limit is $sizelimit bytes&quot;;
     }

     open OUTFILE, &quot;&gt;$tmpfile&quot;;
     print OUTFILE $buf;
     close OUTFILE;
  }

  $str.=$image-&gt;Read($tmpfile);
  my ($width, $height)=$image-&gt;Get('width', 'height'); 
  my $proportion=1;
  my $resizing=0;
  if ($width&gt; $maxWidth) {
    $proportion=$maxWidth/$width;
    $resizing=1;
  }
  if ($height&gt; $maxHeight) {
    if (($maxHeight/$height)&lt;$proportion) {
      $proportion=$maxHeight/$height; 
    }
    $resizing=1;
  }
  if ($resizing==1) {
    $width=$width*$proportion;
    $height=$height*$proportion;

    $image-&gt;Resize(width=&gt;$width,  height=&gt;$height, filter=&gt;&quot;Lanczos&quot;);
    $image-&gt;Write($tmpfile); 
  }
  undef $image;

  unless( $bucket-&gt;add_key_filename($basename,$tmpfile, { content_type =&gt; $content} ) )
  {
     return &quot;Image upload failed on REST call. Try again in a few&quot;;
  }

  $$NODE{$field} = &quot;/$basename&quot;;
  $DB-&gt;updateNode ($NODE, $USER);
  
  $DB-&gt;getDatabaseHandle()-&gt;do('replace newuserimage set newuserimage_id='.getId($NODE));

  unlink($tmpfile);


  $str.=&quot;$size bytes received!  Make sure to SHIFT-reload on your user page, if you see the old image.&quot;;
} else {
  $str.=&quot;&lt;small&gt;the rules are simple: only upload jpgs, gifs, and pngs. &quot;. ($sizelimit/1000).&quot;k max.  
  Big images will be resized to $maxWidth pixels across, or $maxHeight tall.  We &lt;strong&gt;will&lt;/strong&gt; take away this privilege if what you post is copyrighted or
    obscene - &quot;.linkNodeTitle('be cool')
.'&lt;/small&gt;';


  $str.=$query-&gt;filefield($name);
}
$str;</code>
</node>
