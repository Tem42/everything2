<node>
  <type_nodetype>4</type_nodetype>
  <node_id>2036304</node_id>
  <title>parentdraft</title>
  <code># choose an e2node to be the parent of a draft
# optionally, publish the draft to it as a writeup

my $N = shift || $NODE;
getRef $N;
return '&lt;div class=&quot;error&quot;&gt;Not a draft.&lt;/div&gt;' unless $$N{type}{title} eq 'draft';

my $publish = undef; $publish = 1 if lc($query -&gt; param('parentdraft')) eq 'publish';

my $wrap = sub{ $query -&gt; div({id =&gt; &quot;draftstatus$$N{node_id}&quot;, class =&gt; 'parentdraft'}
	, $_[0]
	.htmlcode('openform')
	.$query -&gt; submit(
		-name =&gt; 'cancel',
		value =&gt; 'Cancel'.($publish ? ' publication' : ''),
		class =&gt; &quot;ajax draftstatus$$N{node_id}:setdraftstatus:$$N{node_id}&quot;)
	.'&lt;/form&gt;'
	.$query -&gt; script({type =&gt; 'text/javascript'}
		, &quot;parent.location='#draftstatus$$N{node_id}';&quot;
	)
)};

my ($str, $publishAs) = (undef,undef);

if ($publish){
	# check the user is allowed to post writeups
	$str = htmlcode('nopublishreason', $USER);
	return &amp;$wrap(&quot;&lt;h3&gt;Draft cannot be published&lt;/h3&gt;&lt;p&gt;$str&lt;/p&gt;&quot;) if $str;

	# check if the draft meets minimal formal requirements
	my $userLevel = $APP-&gt;getLevel($USER);

	unless ($$N{doctext} =~ /\S/){
		$str = '&lt;p&gt;No content.&lt;/p&gt;';

	}elsif($$N{doctext} =~ /\[(http\:\/\/(?:\w+\.)?everything2\.\w+)/i or
		!$userLevel &amp;&amp; $$N{doctext} !~ /\[(?!http:).+]/){

		$str = &quot;&lt;p&gt;&lt;strong&gt;Do not&lt;/strong&gt; use the external link format to link
			to other pages on this site (&amp;#91;$1...&amp;#93;).&lt;/p&gt;&quot;
			if $1;

		$str = '&lt;p&gt;You may have read '
			.linkNode(getNode('E2 Quick Start', 'e2node'))
			.' a little too quickly.
			&lt;/p&gt;
			&lt;p&gt;Writeups on Everything2 should include '
			.linkNode(getNode('Links on Everything2','e2node'),'links')
			.' to other pages on the site. You can make an on-site link like this: &amp;#91;'
			.linkNode(getNode('hard link','e2node'))
			.'&amp;#93; or like this: &amp;#91;'
			.linkNode(getNode('pipe link','e2node'),'link one thing|show another')
			.'&amp;#93;. This way, each writeup is integrated with the rest of the site
			and new and old works can complement each other.
			&lt;/p&gt;
			&lt;p&gt;You can also link to other websites like this: &amp;#91;http://example.com|external link&amp;#93;,
			but external links do not help to integrate a writeup into Everything2.
			&lt;/p&gt;'
			.$str;
	}

	return &amp;$wrap(&quot;&lt;h3&gt;Draft not ready for publication&lt;/h3&gt;$str&quot;) if $str;

	$publishAs = $query -&gt; param('publishas') if $userLevel
		and $query -&gt; param('publishas')
		and htmlcode('canpublishas', $query -&gt; param('publishas')) == 1;

	$publishAs = getNode($publishAs, 'user') if $publishAs;
}

# Can publish/choose parent
# work out which e2nodes to offer based on title...

my $title = $query -&gt; param('title');
if ($title){
	$title = cleanNodeName($title);
	$query -&gt; param('title', $title);
}else{
	$title = $$N{title};
	# remove number/writeuptype from end of title (user can put it back later if they really want it)
	$title =~ s/ \($1\)$// if $title =~ / \(([\w\d]+)\)$/ and $1 eq int($1) || getNode($1, 'writeuptype');
}

# ...existing parent...

my $linktype = getId(getNode 'parent_node', 'linktype');
my $parent = $DB -&gt; sqlSelect(
	'to_node', 'links', &quot;from_node=$$N{node_id} AND linktype=$linktype&quot;);

# ... and choice last time around
my $e2node = $query -&gt; param('writeup_parent_e2node');

my @existing = ();
my $newoption = 1;

unless ($e2node){
	# no choice made yet. The user chooses an e2node from:
	# 1. the draft's current parent
	# 2. the e2node whose title matches this draft
	# 3. e2nodes found with a search on the title
	# 4. a new e2node with this draft's title
	
	push @existing, getNodeById($parent) if $parent;

	my $nameMatch = getNode($title, 'e2node', 'light');
	push @existing, $nameMatch if $nameMatch and $$nameMatch{node_id} != $parent;

	$newoption = 0 if $nameMatch;
	$nameMatch = getId $nameMatch;
	
	if ($newoption or !$publish &amp;&amp; $parent){
	# if no existing e2node with this title, or if changing existing parent, look for similar
		my $e2type = getId(getType('e2node'));
		my @findings = @{$APP-&gt;searchNodeName($title, [$e2type], 0, 1)}; # without soundex
		@findings = @{$APP-&gt;searchNodeName($title, [$e2type], 1, 1)} unless @findings; # with soundex

		push @existing, map($_ &amp;&amp; $$_{type_nodetype} == $e2type &amp;&amp;  # there's a bug in searchNodeName...
			$$_{node_id} != $parent &amp;&amp; $$_{node_id} != $nameMatch ? $_: (), @findings);
		@existing = @existing[0..24] if @existing &gt; 25; # enough is enough
	}

}elsif(int $e2node){
	# user has chosen an existing e2node (not 'new')
	$newoption = 0;
	push @existing, getNodeById($e2node);
}

# radio buttons for multiple options, hidden control if only one
my %prams = (name =&gt; 'writeup_parent_e2node');
unless ($newoption + scalar @existing == 1){
	$prams{type} = 'radio';
	$prams{checked} = 'checked';
}else{
	# no choice:
	$prams{type} = 'hidden';
	($e2node, $title) = $newoption ? ('new', $title)
		: ($existing[0]-&gt;{node_id}, $existing[0]-&gt;{title});
}

# provide e2node options: to choose existing, create new, or both

$str = htmlcode('openform')
	.qq'&lt;fieldset class=&quot;draftstatus&quot;&gt;&lt;legend&gt;Choose destination&lt;/legend&gt;'
	.$query -&gt; hidden('draft_id', $$N{node_id})
	.$query -&gt; hidden('title', $title);

$str .= $query -&gt; h3(
		($publish ? 'Publish under' : 'Attach to').' existing title (e2node):'
	)
	.$query -&gt; ul({class =&gt; 'findings'}
		, join('',
			, map($query -&gt; li(
				$query -&gt; input({value =&gt; $$_{node_id}, %prams})
				.' '
				.linkNode($_)
				.(delete $prams{checked} ? '' : '')
			), @existing)
		)
	)
	if @existing;

$str .= $query -&gt; h3('Create a new page (e2node) with this title:')
	.$query -&gt; ul({class =&gt; 'findings'}
		, $query -&gt; li($query -&gt; label(
			$query -&gt; input({value =&gt; 'new', %prams})
			.' '
 			.$query -&gt; escapeHTML($title)
		))
	)
	if $newoption;


# provide buttons

my $ajaxTrigger = 1; # we normally want to submit this form with ajax

unless ($publish &amp;&amp; $e2node){
	# attach only or multiple options:
	# we have to wait until there's only one option before offering
	# to publish so setwriteuptype can set type/hidden

	$str .= $query -&gt; p($query -&gt; submit('choose', 'Choose'));

}else{
	# publishing and only one option/user has chosen: see if this user can publish here:
	my $nopublish = undef; $nopublish = htmlcode('nopublishreason', $publishAs || $USER, $e2node)
		unless $e2node eq 'new'; # the user has already been checked

	unless ($nopublish){
		# no reason not to allow publication
		# error report if tried to publish already and failed nonetheless:
		$str .= parseLinks(&quot;&lt;p&gt;Publication failed: please try again,
			and if it still doesn't work, please contact an [Content Editors|editor].&lt;/p&gt;&quot;)
			if $query -&gt; param('op') eq 'publishdraft';

		$str .= '&lt;p&gt;'
			.htmlcode('setwriteuptype', $N, $title)
			.'&lt;/p&gt;&lt;p&gt;'
			.$query -&gt; submit('publish',  'Publish')
			.'&lt;/p&gt;
			&lt;input type=&quot;hidden&quot; name=&quot;op&quot; value=&quot;publishdraft&quot;&gt;';
		
		$ajaxTrigger = 0; # we want to go to the e2node

	}else{
		# known reason why this user can't publish this draft here
		$publish = 0;
		$str .= '&lt;h3&gt;Your draft cannot be published at &lt;i&gt;'
		.$query -&gt; escapeHTML($title)
		.'&lt;/i&gt;:&lt;/h3&gt;
		&lt;p&gt;';

		if (UNIVERSAL::isa($nopublish,'HASH')){
			$str .= linkNodeTitle(&quot;${title}[by &quot;
			.($publishAs ? &quot;$$publishAs{title}]|$$publishAs{title} has&quot; : &quot;$$USER{title}]|You have&quot;)
			.' a writeup there already.');

		}else{
			$str .= $nopublish;
			my $options = undef; $options = &quot;Attach this draft to '&quot;
				.$query -&gt; escapeHTML($title)
				.&quot;'&quot;
				unless $e2node =~ /\D/
					or $parent == $e2node;

			my $review = getId(getNode 'review', 'publication_status');
			$options .= ($options ? ' and request review of it' : 'Request review of this draft').''
				unless $$N{publication_status} == $review;

			$str .= '&lt;/p&gt;&lt;p&gt;'
				.$query -&gt; hidden(
					-name =&gt; 'draft_publication_status',
					-value =&gt; $review,
				)
				.$query -&gt; submit('attach', $options)
				if $options;
		}

		$str .= '&lt;/p&gt;';
	}
}

$str .= $query -&gt; hidden('parentdraft') if $publish;
$str .= htmlcode('canpublishas') if $publishAs;

$str .= $query -&gt; hidden(
	-name =&gt; 'ajaxTrigger',
	value =&gt; 1,
	class =&gt; &quot;ajax draftstatus$$N{node_id}:&quot;
		.($publish ? 'parentdraft:' : 'setdraftstatus:').$$N{node_id}
	) if $ajaxTrigger;

return &amp;$wrap(
	&quot;$str&lt;/fieldset&gt;&lt;/form&gt;&quot;
	.htmlcode('openform')
	.'&lt;fieldset&gt;&lt;legend&gt;Try a different title&lt;/legend&gt;&lt;p&gt;'
	.$query -&gt; hidden('parentdraft')
	.$query -&gt; hidden('publishas')
	.$query -&gt; hidden(
		-name =&gt; 'ajaxTrigger',
		value =&gt; 1,
		class =&gt; &quot;ajax draftstatus$$N{node_id}:parentdraft:$$N{node_id}&quot;
	)
	.$query -&gt; textfield(
		-name =&gt; 'title',
		value =&gt; $title,
		size =&gt; 80
	)
	.$query -&gt; submit('search','Search')
	.'&lt;/p&gt;&lt;/fieldset&gt;&lt;/form&gt;'
);
</code>
</node>
