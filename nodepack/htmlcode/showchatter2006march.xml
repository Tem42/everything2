<node>
  <type_nodetype>4</type_nodetype>
  <node_id>1796238</node_id>
  <title>showchatter2006March</title>
  <code>#this is showchatter (htmlcode) as it was on Friday, March 31, 2006
#before N-Wing started messing with it for flag appearance (on the left) and AFD


#originally in [chatterbox] (nodelet)
#return &quot;jaybonci is working on this. if you need to find me, msg me on slashnet.&quot; unless $USER-&gt;{title} eq &quot;jaybonci&quot;;

return 'If you '.linkNode(getNode('Create A New User','superdoc'),'get a (&lt;strong&gt;free&lt;/strong&gt;) account',{lastnode_id=&gt;0}).', you can talk here.' if getId($USER) == $HTMLVARS{guest_user};

if($$VARS{publicchatteroff}) {
	if($query-&gt;param('RemoveEarPlugs') eq '1') {
		delete $$VARS{publicchatteroff};
	} else {
		return '&lt;p&gt;&lt;em&gt;your earplugs are in ('.linkNode($NODE,'remove them',{'RemoveEarPlugs'=&gt;1}).')&lt;/em&gt;&lt;/p&gt;';
	}
}
#we need to delete old stuff too
my $str;
my $wherestr = 'for_user=0 and unix_timestamp(now())-unix_timestamp(tstamp) &lt; 300';
$wherestr.=' and room='.$$USER{in_room} unless ($$VARS{omniphonic});

my $csr = $DB-&gt;sqlSelectMany('*', 'message', $wherestr, 'order by tstamp');

my $lines;
my @msgs;
while(my $MSG = $csr-&gt;fetchrow_hashref) {
	$lines++;
	push @msgs, $MSG;
}
if($lines &gt;= 20) {
	@msgs = splice(@msgs, -20);
}

my $UID = getId($USER) || 0;
my $isEDev = exists $HTMLVARS{group_edev}{$UID};

my $aid;	#message's author's ID
my $flags;
my $userLink;
my $text;
my $maxLen = htmlcode('chatterSplit');

my $ignorelist = $DB-&gt;sqlSelectMany('ignore_node', 'messageignore', 'messageignore_id='.$UID);
  
my @list;
while (my ($u) = $ignorelist-&gt;fetchrow) {
	push @list, $u;
}

local *in_an_array = sub {
my $needle = shift;
my @haystack = @_;

for (@haystack) {
return 1 if $_ eq $needle;
}
return 0;
};


foreach my $MSG (@msgs) {
	$aid = $$MSG{author_user} || 0;
      next if in_an_array($aid,@list);

#N-Wing AFD2004
#sometimes make displayed text of same user show something else
my $doAFD2004 = 0; #change this to 0 to easily disable AFD 2004 code
if( $doAFD2004 &amp;&amp; ($$USER{node_id}==$aid) &amp;&amp; (rand(100)&lt;3) ) {
my @otherSayings = (
'/me is a monkey', '/me likes jumping', '/me is seeing things',
'/me loves the taste of fresh floppy disks',
'/me loves [EDB]',
'Woah, eating [pizza] older than 8 days old is *not* a good idea!',
'I just love April Fool\'s Day', 'Be like a tree and [leave|go away]!',
'Mommy makes me mash my M and Ms.', 'Everybody, please downvote me!',
'Testing, 1, 2, 3... hello? Is this mic on?',
'Is Server Error! on your home node a bad thing?',
'I just love this site! I\'m going to donate $1000 as soon as possible!',
'/me drools for a living', '/me thinks you are all wimps',
'IMPORTANT: Please downvote my writeups!',
'Does anybody think I\'m too old?', 'My user name is ['.$$USER{title}.'].',
'How is someone else saying something for me?',
'I like cheese. I smell like cheese.',
'I have nothing more to say. (Except for [everything|this], of course.)',
'[Dep] said &quot;I didn\'t type that.&quot;',
'Go ahead, make my [night].',
'I don\'t like nuclear power plants. They taste too salty.',
'It is still April Fool\'s Day in some parts of the world. Yay!'
);
if($isEDev) {
push(@otherSayings, 'If I look at [showchatter] (htmlcode), I can see what is going on here.');
push(@otherSayings, '#$@%* Am I cursing, or reading Perl?');
}
$text = $otherSayings[int(rand(@otherSayings))];
} else {
#end N-Wing AFD2004


	$text = $$MSG{msgtext};


} #N-Wing AFD2004


#	$text =~ s/(\S{25})/$1 /g;
#	$text =~ s/(\S{$maxLen})/$1 /go if $maxLen;	#FIXME look though links and don't split across link targets
	$text =~ s/\&lt;/\&amp;lt\;/g;
	$text =~ s/\&gt;/\&amp;gt\;/g;

	if($$MSG{room} != $$USER{in_room}) {
		if($$MSG{room}) {
			my $R = getNodeById($$MSG{room});
			$str.='('.linkNode($R, $$R{abreviation}).')';
		} else {
			$str.='(out)';
		}
	}
	$text = parseLinks($text);


        
        # Split the chatter, but not in tags or entities.
        #$text = htmlcode('messageSplit', $text, $maxLen);

	#N-Wing/wharfinger spending way too much time on a stupid thing ...
	#change *stuff* into HTML bold, /stuff/ into italics
#	if($text =~ /^\/me .*/) {
#		$text =~ s/(\/)([\w\* ]+)(\/)/&lt;\/i&gt;$2&lt;i&gt;/g;
#		$text =~ s/(\*)([\w\/\&lt;\&gt; ]+)(\*)/&lt;\/i&gt;&lt;strong&gt;$2&lt;\/strong&gt;&lt;i&gt;/g;
#	}else{
#		$text =~ s/(\/)([\w\* ]+)(\/)/&lt;i&gt;$2&lt;\/i&gt;/g;
#		$text =~ s/(\*)([\w\/\&lt;\&gt; ]+)(\*)/&lt;strong&gt;$2&lt;\/strong&gt;/g;
#        }

	#  Oh ye of HTML entities, even unto malformed ones: Your 
	# tricks are no match for my '1337 regex skillz.
	#$text =~ s/(\.| |\&amp;nbsp;?)+$/./;

	#do \n stuff, but since this is easy to abuse, only let certain people do it
	$text =~ s/\s+\\n\s+/&lt;br \/&gt;/g if exists $HTMLVARS{group_gods}{$aid};

	$userLink = linkNode( $aid, undef, {'lastnode_id'=&gt;0});
	# Make bones and nate look impressive.
	$userLink =~ s/^(.*)$/&lt;strong&gt;$1&lt;\/strong&gt;/ if ($aid == 220 );

	if($$VARS{powersChatter}) {
		$flags = '';
		if(exists $HTMLVARS{group_gods}{$aid}) {
			$flags .= '@';
		} elsif(exists $HTMLVARS{'group_content editors'}{$aid}) {
			$flags .= '$';
		}
		$flags .= '%' if $isEDev &amp;&amp; exists $HTMLVARS{group_edev}{$aid};
		if(length($flags)) {
			$flags = '&lt;small&gt;'.$flags.'&lt;/small&gt; ';
			$str .= $flags;
		}
	}

#	#dem bones doesn't like emotion faces
#	if($aid==282) {
#		my @faces = (':)', ':(', '=)', '=(', ':P', ':-/', 'X-)', ':-X', ':-)', ':-(', '^_^', ':O', '8)', '8(', '8-)', '8-(', '8*)', '0_0', '@:-)', '&lt;big&gt;Boo!&lt;/big&gt;', 'I like cheese! :)');
#		$text .= ' ' . $faces[int(rand(@faces))];
#	}

#	$text .= ',' unless $text =~ /[\.\!\?\,]$/;
#	$text .= ' ';
#	$text .= ('eh?', 'huh?', 'ah', 'oh', 'ack!', 'ouch', 'hey', 'boo!', 'argh!', '&lt;code&gt;argv**&lt;/code&gt;', 'I like cheese!')[int(rand(11))];

	if ( $text =~ /^\/me (.*)/ ) {
		$str .= '&lt;i&gt;' . $userLink . ' ' . $1 . '&lt;/i&gt;';
        # What do you mean, \me's code is broken? -- eien_meru
        } elsif ( $text =~ /^\/me\'s (.*)/ ) {
                $str .= '&lt;i&gt;' . $userLink . '\'s ' . $1 . '&lt;/i&gt;';
	} else {
		$str .= '&amp;lt;' . $userLink . '&amp;gt; ' . $text;
	}
	$str.=&quot;&lt;br /&gt;\n&quot;;
}


if(not $lines) {
	#my $EDB = int(rand(100));
        my $EDB = 100;
	my $response = '&lt;i&gt;and all is quiet...&lt;/i&gt;';

	if($EDB&lt;25) {
		my @borgspeak = (
		'grrrrr...', '/me hungry!', '/me smells blood',
		&quot;$$USER{title} looks tasty.&quot;,
		'&lt;i&gt;you feel its eyes watching you&lt;/i&gt;',
		'/me is watching you',
		'/me coughs politely and eats your soul',
		'/me tries to bite your toe',
		'/me starts eating your hair',
		'/me whispers the names of forgotten demons in your ear',
		&quot;mmmm $$USER{title} food&quot;
		);

		$response = $borgspeak[int(rand(@borgspeak))];

		my $edblink = linkNodeTitle('EDB');
		if($response =~ /\/me/) {
			$response =~ s/\/me /&lt;i&gt;$edblink /;
			$response .= '&lt;/i&gt;';
		} else {
			$response = &quot;&amp;lt;$edblink&amp;gt;&quot; . $response;
		}
	}

	return $response;
}

$str;</code>
</node>
