<node>
  <type_nodetype>4</type_nodetype>
  <delegate_to></delegate_to>
  <node_id>1868932</node_id>
  <title>zenwriteups</title>
  <code>my ($isLogs) = @_;

my $UID = $$USER{user_id} || $Everything::CONF-&gt;{system}-&gt;{guest_user} ;
my $limit = $$VARS{ num_newwus } || ($APP-&gt;isGuest($USER) ? 15 : 12);
my $cansee = $APP-&gt;isEditor($USER);

use JSON;

my $nltext = getNode(&quot;New Writeups Feeder&quot;, 'nodelet') -&gt; {nltext};
return &quot;&lt;em&gt;No writeups&lt;/em&gt;&quot; if $nltext eq &quot;&quot;;

my @newwus = @{from_json($nltext)};

my $noHidden = !$isLogs;
$noHidden = $noHidden &amp;&amp; $$VARS{nw_nojunk} if $cansee;

my ($repthreshold, $abominations) = ('none', undef);
if (!$cansee or $$VARS{nw_nojunk} or $isLogs){
	if (exists $$VARS{repThreshold}) {
		$repthreshold = $$VARS{repThreshold} || 0; # ecore stores 0 as ''
	} elsif (exists $Everything::CONF-&gt;{writeuplowrepthreshold}) {
		$repthreshold = $Everything::CONF-&gt;{writeuplowrepthreshold} || 0;
	}
	
        $abominations-&gt;{$_} = 1 foreach(split(',', $$VARS{unfavoriteusers}));
}

my $count = undef;
my @wus = ();
foreach (@newwus){
	next if $noHidden &amp;&amp; $$_{notnew} or
		$repthreshold ne 'none' &amp;&amp; $$_{reputation} &lt; $repthreshold or
		exists $abominations-&gt;{$$_{author_user}} or
		$isLogs &amp;&amp; !$$_{islog};
	push @wus, $_;
	#last if !$$_{notnew} || $isLogs;
        last if  ++$count &gt;= $limit;
}

my $instructions = '&lt;li' ;
my %newwuspecials = () ;

unless($APP-&gt;isGuest($USER)){

	my $sql = &quot;SELECT vote_id
		FROM vote
		WHERE voter_user=$UID
		AND vote_id in (&quot;
		.join(',', map($_-&gt;{writeup_id}, @wus))
		.')';

	my $votes = undef;
	$votes-&gt;{$_} = 1 foreach(@{$dbh -&gt; selectcol_arrayref($sql)});

	$instructions .= ' class=&quot;&amp;extraclasses&quot;' ;
	$newwuspecials{extraclasses} = sub{
		my $N = shift ;
		my $str = ''; # it remembers if you don't do this
		$str .= ' hasvoted' if exists $votes-&gt;{$$N{writeup_id}} ;
		$str .= ' mine' if $$N{author_user} == $UID ;
		$str .= ' wu_hide' if $$N{notnew} ;
		$str ;
	};
}

$instructions .= '&gt;parenttitle, type, byline' ;

if ($cansee &amp;&amp; !$isLogs){
	$instructions .= ', editorstuff';

	my $ajax = &quot;ajax newwriteups:updateNodelet:New+Writeups&quot; ;

	$newwuspecials{editorstuff} = sub {
		my $N = shift ;
		# reputation warning
		my ( $rep ) = $$N{ reputation } ;
		my $str = ( $rep &lt; 0 ? &quot;R:$rep &quot; : '' ).'&lt;span class=&quot;hide&quot;&gt;(' ;
		# flag if hiddden from New Writeups and control to hide/unhide
		$str .= $$N{ notnew } &gt; 0 ?
			'H: '
			.linkNode($NODE, 'un-h!', {
				op =&gt; 'unhidewriteup' ,
            	hidewriteup =&gt; $N -&gt; {writeup_id},
				-title =&gt; 'unhide this writeup',
				-class =&gt; $ajax})
			:
			linkNode($NODE, 'h?', {
				op =&gt; 'hidewriteup' ,
            	hidewriteup =&gt; $N -&gt; {writeup_id},
				-title =&gt; 'hide this writeup',
				-class =&gt; $ajax});
		$str .= ')&lt;/span&gt;' ;
	    $str .= ' (X)' if $$N{nuked} &amp;&amp; !$$N{restored};
	    $str .= ' (R)' if $$N{restored};
 		qq'&lt;span class=&quot;admin&quot;&gt;$str&lt;/span&gt;' ;
	} ;
}

'&lt;ul class=&quot;infolist&quot;&gt;' .
	htmlcode('show content' , \@wus , $instructions , %newwuspecials) .
'&lt;/ul&gt;' ;</code>
</node>
