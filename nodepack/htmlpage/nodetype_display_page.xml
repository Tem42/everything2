<node>
  <parent_container>1854175</parent_container>
  <pagetype_nodetype>1</pagetype_nodetype>
  <page>&lt;p&gt;&lt;a href=[%
urlGen({
'node'=&gt;'List Nodes of Type',
'type'=&gt;'superdoc',
'setvars_ListNodesOfType_Type'=&gt;$$NODE{node_id}
#'chosen_type'=&gt;$$NODE{title},
});
%]&gt;List Nodes of Type&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Authorized Readers&lt;/strong&gt;: [{listgroup:readers_user}]
[{displayInherited:readers_user}]
&lt;p&gt;&lt;strong&gt;Authorized Creators&lt;/strong&gt;: [{listgroup:writers_user}]
[{displayInherited:writers_user}]
&lt;p&gt;&lt;strong&gt;Authorized Deleters&lt;/strong&gt;: [{listgroup:deleters_user}]
[{displayInherited:deleters_user}]

[%
if(isGroup($NODE)) { 
	'&lt;p&gt;&lt;strong&gt;Restricted Nodetypes&lt;/strong&gt;: ';
}
%]

&lt;p&gt;&lt;strong&gt;Restrict Duplicates&lt;/strong&gt; (identical titles):
[%
if($$NODE{restrictdupes} == -1) {
	'parent';
} else {
	$$NODE{restrictdupes} ? 'Yes':'No';
}
%]
[{displayInherited:restrictdups}]
&lt;p&gt;&lt;strong&gt;Verify edits to maintain security&lt;/strong&gt;:
[%
$$NODE{verify_edits} ? 'Yes':'No';
%]


[%
my $plural = '';
my $str = '';

if (exists $$NODE{sqltable}) {
	my $tableList = $$NODE{sqltable};
	my @tables = split /,/, $tableList;
	$plural = 's' if scalar @tables &gt; 1;
	$str .= join ', ', map { linkNode(getNode($_, 'dbtable')); } @tables;
} else {
	$str .=  '&lt;i&gt;none&lt;/i&gt;';
}
return &quot;&lt;p&gt;&lt;strong&gt;Sql Table$plural&lt;/strong&gt;: $str&quot;
%]
[{displayInherited:sqltable}]
&lt;p&gt;&lt;strong&gt;Extends Nodetype:&lt;/strong&gt;
[%
linkNode ($$NODE{extends_nodetype}) if ($$NODE{extends_nodetype});
%]
&lt;p&gt;&lt;strong&gt;Relevant pages:&lt;/strong&gt;&lt;br /&gt;

[%
my $str = '&lt;ul&gt;
' ;
my @pages;

push @pages, getPages($NODE);

foreach (@pages) { $str .= '&lt;li&gt;' .linkNode($_) . '&lt;/li&gt;
'; }
$str . '&lt;/ul&gt;
' ;
%]

&lt;p&gt;&lt;strong&gt;Active Maintenances:&lt;/strong&gt;&lt;br /&gt;
[%
my $str = '&lt;ul&gt;
' ;

my (@maints) = getNodeWhere ({maintain_nodetype=&gt;getId($NODE)}, getType('maintenance'));

return '&lt;em&gt;no maintenance functions&lt;/em&gt;' unless @maints;

foreach (@maints) {$str .= '&lt;li&gt;'.linkNode($_).'&lt;/li&gt;
'; }
$str . '&lt;/ul&gt;' ;
%]
</page>
  <node_id>75</node_id>
  <type_nodetype>5</type_nodetype>
  <displaytype>display</displaytype>
  <title>nodetype display page</title>
  <mimetype></mimetype>
</node>
