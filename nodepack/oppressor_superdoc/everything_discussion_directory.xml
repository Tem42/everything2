<node>
  <type_nodetype>1144104</type_nodetype>
  <doctext>&lt;p&gt;This page is deprecated. Please use [usergroup discussions] instead.&lt;/p&gt;

&lt;!--
&amp;lt;style type=&quot;text/css&quot;&amp;gt;
&amp;lt;!--
th {
	text-align: left;
}
--&amp;gt;
&amp;lt;/style&amp;gt;

&amp;lt;p&amp;gt;
The &quot;restricted&quot; column shows who may view/add to a discussion.
&amp;lt;/p&amp;gt;

&amp;lt;!-- &amp;#91;%
# return '&amp;lt;p&amp;gt;&quot;Restricted&quot; discussions are limited to &quot;gods&quot; only. This superdoc shows them (and the &quot;restricted&quot; column, and this paragraph too) only for &quot;gods&quot;. &amp;lt;/p&amp;gt;' if ( isGod( $USER ) );
'';
%&amp;#93; --&amp;gt;

&amp;lt;p&amp;gt;
&amp;lt;table&amp;gt;
&amp;lt;tr bgcolor=&quot;#dddddd&quot;&amp;gt;
&amp;lt;th class=&quot;oddrow&quot; width=&quot;200&quot; colspan=&quot;2&quot;&amp;gt;title&amp;lt;/th&amp;gt;
&amp;lt;th class=&quot;oddrow&quot; width=&quot;80&quot;&amp;gt;restricted&amp;lt;/th&amp;gt;
&amp;lt;th class=&quot;oddrow&quot; width=&quot;80&quot;&amp;gt;author&amp;lt;/th&amp;gt;
&amp;lt;th class=&quot;oddrow&quot; width=&quot;100&quot;&amp;gt;created&amp;lt;/th&amp;gt;
&amp;lt;th class=&quot;oddrow&quot; width=&quot;100&quot;&amp;gt;last updated&amp;lt;/td&amp;gt;
&amp;lt;!--th width=&quot;100&quot;&amp;gt;type&amp;lt;/th--&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;#91;% 
my $uid = getId($USER);
my $isRoot = exists $HTMLVARS{group_gods}{$uid};
my $isCE = $isRoot || exists $HTMLVARS{'group_content editors'}{$uid};
my @types = qw( debate );
foreach(@types) {
	$_ = getId(getType($_));
}

#gets a node given the ID
#this caches nodes between hits, so it doesn't hurt to get 1 group a zillion times
#note: this may be completely pointless if E2 caches things anyway, but I don't have much faith in that :-|
#returns undef if unable to get a node
#created: 2001.11.27.n2; updated: 2001.11.27.n2
#author: N-Wing
my %ids;
local *getNodeFromID = sub {
	my $nid = $_&amp;#91;0&amp;#93;;
	return undef unless (defined $nid) &amp;amp;&amp;amp; ($nid=~/^\d+$/);

	#already known, return it
	return $ids{$nid} if exists $ids{$nid};

	#unknown, find that
	my $N = getNodeById($nid);
	return undef unless defined $N;
	return $ids{$nid}=$N;
};

local *in_an_array = sub {
my $needle = shift;
my @haystack = @_;

for (@haystack) {
return 1 if $_ eq $needle;
}
return 0;
};


my $csr=$DB-&amp;gt;sqlSelectMany(&quot;root_debatecomment&quot;, &quot;debatecomment&quot;,&quot;1&quot;,&quot;ORDER BY debatecomment_id DESC&quot;);
my @nodes;
while (my $temprow = $csr-&amp;gt;fetchrow_hashref) {
       my $N = getNodeById($temprow-&amp;gt;{root_debatecomment});
       push @nodes, $N if ($N &amp;amp;&amp;amp; !in_an_array($N,@nodes));
}

my $str;
my $restrictGroup;
foreach my $n (@nodes) {
	$n = getNodeById( $$n{ 'node_id' } );
	my ($user)  = getNodeById( $$n{author_user} );
	my $created = $$n{ createtime };

	# Maybe we should have some sympathy for brits, who write dates
	# backwards? Nahh...
# You will now, as you've given brits keys to the code. Let's make it ISO, and keep the time display...

	$created =~ s/^(&amp;#91;0-9&amp;#93;+)-(&amp;#91;0-9&amp;#93;+)-(&amp;#91;0-9&amp;#93;+).*$/$1\-$2\-$3/;
	$created =~ s/(^|\/)0/$1/;

	my $latest = getNodeById($DB-&amp;gt;sqlSelect(&quot;MAX(debatecomment_id)&quot;, &quot;debatecomment&quot;, &quot;root_debatecomment=$$n{node_id}&quot;));
        my $latesttime = $latest-&amp;gt;{createtime};
        $latesttime ||= &quot;&amp;lt;em&amp;gt;(none)&amp;lt;/em&amp;gt;&quot;;
#        $latesttime =~ s/^(&amp;#91;0-9&amp;#93;+)-(&amp;#91;0-9&amp;#93;+)-(&amp;#91;0-9&amp;#93;+).*$/$2\/$3\/$1/;
#        $latesttime =~ s/(^|\/)0/$1/;
        $latesttime ||= &quot;&amp;lt;em&amp;gt;(none)&amp;lt;/em&amp;gt;&quot;;

	$restrictGroup = $$n{restricted} || 923653;	#ugly backwards-
	$restrictGroup = 114 if $restrictGroup==1;	#compatiblity hack
	$restrictGroup = getNodeFromID($restrictGroup);

	next unless Everything::isApproved($USER, $restrictGroup);

	$str .= # (
		'&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;' .
		linkNode( $n, 0, { lastnode_id=&amp;gt;0 } ) .
		'&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;small&amp;gt;(' .
#		'(&amp;lt;a href=&quot;/index.pl?node_id=' . $$n{ 'node_id' } . '&amp;amp;displaytype=compact&quot;&amp;gt;compact&amp;lt;/a&amp;gt;) ' .
		linkNode($n,'compact',{lastnode_id=&amp;gt;0,displaytype=&amp;gt;'compact'}).
		')&amp;lt;/small&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;small&amp;gt;' .
#		# I always hate people who use nested ternaries, especially without 
#		# indenting. I'm a bad boy...
#		( $isRoot ? ( ( $$n{ 'restricted' } ) ? '&amp;lt;td&amp;gt;super-duper power people&amp;lt;/td&amp;gt;' : '&amp;lt;td&amp;gt;wimps&amp;lt;/td&amp;gt;' ) : '' ) .
		linkNode($restrictGroup,0,{lastnode_id=&amp;gt;0}) .
		'&amp;lt;/small&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;' .
		linkNode( $$user{ 'node_id' },0,{lastnode_id=&amp;gt;0}) .
		'&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;' .
		#$$n{ createtime } .
		$created .
		'&amp;lt;/td&amp;gt;' .
                '&amp;lt;td&amp;gt;'.$latesttime.'&amp;lt;/td&amp;gt;'.
		# '&amp;lt;td&amp;gt;&amp;lt;small&amp;gt;' . $$n{type}{title} .
		# '&amp;lt;/small&amp;gt;&amp;lt;/td&amp;gt;' .
		'&amp;lt;/tr&amp;gt;'
	;
#	); # unless ( $$n{ 'restricted' } &amp;amp;&amp;amp; !$isRoot );
}
$str;
%&amp;#93;
&amp;lt;/table&amp;gt;

&amp;lt;!--&amp;#91;%
# We put a little create-debate form here for convenience. 
# If we decide to let editors and/or others (edev, for example) 
# create debates, this will be very handy then, because they 
# don't get the dandy pick-a-nodetype creation interface that 
# gods get.
%&amp;#93;--&amp;gt;

&amp;#91;%
my $str = '';

#new restrict check for any usergroup
my $UID = getId($USER);
my $createDebate = 0;
my @allowed = ('gods', 'content editors');
foreach my $item ( @allowed ) {
 $item='group_'.$item;
 $createDebate=1 if (exists $HTMLVARS{$item}{$UID});
}

if ( $createDebate ) {
$str .= '
&amp;lt;hr /&amp;gt;
&amp;lt;s&amp;gt;Pick a Fight&amp;lt;/s&amp;gt;&amp;lt;b&amp;gt;Create a New Debate:&amp;lt;/b&amp;gt;&amp;lt;br /&amp;gt;
&amp;lt;form method=&quot;post&quot;&amp;gt;
&amp;lt;input type=&quot;hidden&quot; name=&quot;op&quot; value=&quot;new&quot;&amp;gt;
&amp;lt;input type=&quot;hidden&quot; name=&quot;type&quot; value=&quot;debate&quot;&amp;gt;
&amp;lt;input type=&quot;hidden&quot; name=&quot;displaytype&quot; value=&quot;edit&quot;&amp;gt;
&amp;lt;input type=&quot;hidden&quot; name=&quot;debate_parent_debatecomment&quot; value=&quot;0&quot;&amp;gt;
&amp;lt;input type=&quot;text&quot; size=&quot;50&quot; maxlength=&quot;64&quot; name=&quot;node&quot; value=&quot;&quot;&amp;gt;&amp;lt;br /&amp;gt;';
if ( isGod( $USER ) ) {
$str.='&amp;lt;input type=&quot;checkbox&quot; name=&quot;debate_restricted&quot; value=&quot;114&quot;&amp;gt;Restrict access to gods only&amp;lt;br /&amp;gt;';
}
$str.='&amp;lt;input type=&quot;submit&quot; value=&quot;Create Debate&quot;&amp;gt;
&amp;lt;/form&amp;gt;
';
#FIXME: give group name instead
}

$str;
%&amp;#93;

&amp;lt;br /&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;Bug reports go to &amp;#91;kthejoker&amp;#93;.&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;
--&gt;</doctext>
  <node_id>1158427</node_id>
  <title>Everything Discussion Directory</title>
</node>
