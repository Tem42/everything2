<node>
  <type_nodetype>14</type_nodetype>
  <doctext>[%

return &quot;&lt;p&gt;If you had an account, you could send messages.&lt;/p&gt;&quot;
	if $APP-&gt;isGuest($USER);

# options
my $str = &quot;(Also see: [Message Inbox])&quot;
	.htmlcode('openform', 'message_outbox_form')
	.'&lt;input type=&quot;hidden&quot; name=&quot;op&quot; value=&quot;message_outbox&quot;&gt;'
	.$query -&gt; hidden('perpage')
	.$query-&gt;hidden('sexisgood','1')	#so auto-VARS changing works
	.$query -&gt; fieldset(
		$query -&gt; legend('Options')
		.'Show only archived/unarchived messages: '
			.htmlcode('varsComboBox', 'msgoutboxUnArc,0, 0,all, 1,unarchived, 2,archived')
	);

my $spyon = $query -&gt; param('spy_user');

my $isRoot = $APP-&gt;isAdmin($USER);
my $bots = getVars(getNode('bot inboxes', 'setting')) if $isRoot or $spyon;
my $grandtotal;


# show alternate user account's messages
my $spystring = '';
if ($isRoot) {

	my @names = sort {lc($a) cmp lc($b)} keys(%$bots);
	unshift @names, $$USER{title};

	$spystring = $query -&gt; label(
		'Message Outbox for: '
		.$query -&gt; popup_menu(
			-name =&gt; 'spy_user'
			, values =&gt; \@names
	));
}

my $authoruser = 0;
if ($spyon) {
	my $u = getNode($spyon, 'user');
	if ($u){
		my $okUg = getNode($$bots{$$u{title}}, 'usergroup');
		$authoruser = $u if $okUg and $DB -&gt; isApproved($USER, $okUg);

	}elsif($isRoot){
		$spystring .= '&lt;small&gt;&quot;'
			.$query-&gt;escapeHTML($spyon)
			.'&quot; is not a user&lt;/small&gt;';
	}
}

$str .= $query -&gt; p($spystring) if $spystring;
$authoruser = ($authoruser || $USER) -&gt; {node_id};

# start building SQL WHERE string
my $sqlWhere = &quot;author_user=$authoruser&quot;;

#show archived/unarchived things
$sqlWhere .= (
	'' # default is no filtering
	, ' AND archive=0'
	, ' AND archive!=0'
)[$$VARS{msgoutboxUnArc}];

my $showFilters = (
	''
	, ' unarchived'
	, ' archived'
)[$$VARS{msgoutboxUnArc}];

$grandtotal ||= $DB -&gt; sqlSelect(&quot;count(*)&quot;,&quot;message_outbox&quot;,&quot;author_user=$authoruser&quot;);

# provoke jump to last page:
$query -&gt; param('page', 1000000000) unless $query -&gt; param('page');

# get messages
my ($csr, $paginationLinks, $totalmsgs, $firstmsg, $lastmsg) = htmlcode(
	'show paged content'
	, 'message_outbox.*'
	, &quot;message_outbox &quot;
	, &quot;$sqlWhere&quot;,
	, 'ORDER BY message_id
		LIMIT 100' # can be overridden by 'perpage' parameter
	, 0 # no instructions, so it doesn't 'show' but returns cursor
	, noform =&gt; 1 # 'go to page' box not wrapped in form
);

# display
my $colHeading = '&lt;tr&gt;&lt;th align=&quot;left&quot;&gt;delete&lt;/th&gt;&lt;th&gt;send time&lt;/th&gt;
	&lt;th colspan=&quot;2&quot; align=&quot;right&quot;&gt;&amp;#91;un&amp;#93;Archive&lt;/th&gt;&lt;/tr&gt;';


$str .= &quot;$paginationLinks
	&lt;table&gt;
	$colHeading&quot; if $totalmsgs;

while (my $MSG = $csr-&gt;fetchrow_hashref){
	my $text = $$MSG{msgtext};

	# TODO-MSG-OUTBOX : This needs further consideration
	# Don't escape HTML for anyone since we're displaying the stored, pre-rendered &quot;you sent X to user Y&quot; text
	# don't escape HTML for bots
	# unless ($$bots{$$touser{title}} eq 'Content Editors') {
	#	$text = escapeAngleBrackets($text);
	#	$text = parseLinks($text,0,1);
	#	$text =~ s/\[/&amp;#91;/g; # no spare [s for page parseLinks
	# }
	$text =~ s/\s+\\n\s+/&lt;br&gt;/g; # replace literal '\n' with HTML breaks

	# delete box
	$str.= qq'&lt;tr class=&quot;privmsg&quot;&gt;&lt;td&gt;'
		.$query -&gt; checkbox(
			-name =&gt; 'deletemsg_'.$$MSG{message_id}
			, value =&gt; 'yup'
			, valign =&gt; 'top'
			, label =&gt; ''
			, class =&gt; 'delete'
		)
		.'&lt;/td&gt;';

	# time sent
	my $t = $$MSG{tstamp};
	$str .= '&lt;td&gt;&lt;small&gt;&amp;nbsp;'
		.substr($t,0,4).'.'.substr($t,5,2).'.'.substr($t,8,2)
		.'&amp;nbsp;at&amp;nbsp;'.substr($t,11,2).':'.substr($t,14,2)
		.'&lt;/small&gt;&lt;/td&gt;';

	# message text
	$str .= &quot;&lt;td&gt; $text&lt;/td&gt;&quot;;

	# archive box
	$str .= '&lt;td&gt;&lt;tt&gt;'.($$MSG{archive}?'A':'&amp;nbsp;').'&lt;/tt&gt;'
		.$query -&gt; checkbox(
			-name =&gt; ($$MSG{archive} ? 'un' : '').&quot;archive_$$MSG{message_id}&quot;
			, value =&gt; 'yup'
			, label =&gt; ''
			, class =&gt; 'archive'
		).&quot;&lt;/td&gt;&quot;;

    # close table row
	$str .=  &quot;&lt;/tr&gt;\n&quot;;

}

# summary report
unless ($totalmsgs
		|| $$VARS{msgoutboxUnArc} == 2 # archived only	
		|| $authoruser != $$USER{node_id}){
	#no messages showing
	$showFilters = &quot;&lt;em&gt;You may feel lonely.&lt;/em&gt;
		&lt;small&gt;(But you do have $grandtotal sent messages all together)&lt;/small&gt;&quot;
		if $grandtotal;
}else{
	$str .= $colHeading if $lastmsg - $firstmsg &gt; 10;
	$str .= '&lt;/table&gt;' if $totalmsgs;

	$totalmsgs ||= 'no';
	$showFilters =~ s/messages/message/ if $totalmsgs == 1;
	$showFilters = ($authoruser == $$USER{node_id} ? 'You have '
			: linkNode($authoruser).' has ')
		.$totalmsgs
		.$showFilters
		.' sent messages';
	$showFilters .= &quot;. ($grandtotal all together)&quot; if $totalmsgs != $grandtotal;
}

$str .= $query -&gt; p($showFilters);

# form manipulation buttons
$str .= $paginationLinks.$query -&gt; p(
	$query-&gt;reset('Clear All')
	.q! 
	&lt;input type=&quot;button&quot; value=&quot;Delete All&quot;
		onclick=&quot;$('.delete').each(function(){this.checked=true;});&quot;&gt;
	&lt;input type=&quot;button&quot; value=&quot;Archive All&quot;
		onclick=&quot;$('.archive&amp;#91;name^=archive]').each(function(){this.checked=true;});&quot;&gt;
	&lt;input type=&quot;button&quot; value=&quot;Unarchive All&quot;
		onclick=&quot;$('.archive&amp;#91;name^=unarchive]').each(function(){this.checked=true;});&quot;&gt;!
);

# TODO-MSG-OUTBOX : Consider adding back a send message area here (currently removed, would need it's own html form)

$str.' '
	.$query-&gt;submit('message_outbox update', 'submit')
	.$query-&gt;end_form();

%]</doctext>
  <node_id>2108999</node_id>
  <title>Message Outbox</title>
</node>