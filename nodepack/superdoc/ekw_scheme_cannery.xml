<node>
  <type_nodetype>14</type_nodetype>
  <doctext>[%
# 2/8/2002
# wharfinger

return '&lt;p&gt;&lt;b&gt;This does not work for the Guest User account.&lt;/b&gt;&lt;/p&gt;'
    if ( $$USER{'node_id'} == $HTMLVARS{'guest_user'} );

# This getting and setting of $VARS values could stand 
# to be generalized off into htmlcodes. 

my $goofy = '';

local *repl_cb = sub {
    my ( $name, $value ) = @_;
    if ( $name =~ /^(text|bg|alink|oddrow|logoborder|logomaintext|vlink|logoaccenttext|link|logobackground|logo|text|heading|mono)(color|size|font){0,2}$/ ) {
        $$VARS{ 'ekw_' . $name } = $value;
    } else {
        $goofy .= &quot;&lt;dd&gt;&quot; . $name . &quot;&lt;/dd&gt;\n&quot;;
    }
};

# Buzz through the string, stuffing appropriate values 
# into $VARS.
my $oldsettings  = $query-&gt;param( 'oldsettings' ) || '';

if ( $oldsettings eq 'restore' ) {
    if ( defined $$VARS{ '_ekw_undo' } ) {
        $query-&gt;param( 'input', $$VARS{ '_ekw_undo' } );
    } else {
        return '&lt;p&gt;&lt;b&gt;Can\'t restore old settings; none saved.&lt;/b&gt;&lt;/p&gt;';
    }
} elsif ( $oldsettings eq 'backup' || ! defined $$VARS{ '_ekw_undo' } ) {
    # Back up old settings for undo if the user explicitly 
    # requests it, or if it's never been done for that user.
    $$VARS{ '_ekw_undo' } = htmlcode( 'getvarsvalues', 'ekw_' );
} elsif ( $oldsettings eq 'swap' &amp;&amp; defined $$VARS{ '_ekw_undo' } ) {
    # Swap current and backup.
    my $oldsave = $$VARS{ '_ekw_undo' };
    $$VARS{ '_ekw_undo' } = htmlcode( 'getvarsvalues', 'ekw_' );
    $query-&gt;param( 'input', $oldsave );
}

if ( defined( $query-&gt;param( 'input' ) ) ) {
    # Remove all old ekw VARS.
    my $str = '';
    my $var = '';
    for $var ( keys( %$VARS ) ) {
        if ( $var =~ /^ekw_/ ) {
            delete $$VARS{ $var };
        }
    }

    my $input = $query-&gt;param( 'input' );

    # Maybe instead of rejecting values that are too 
    # long, we accept anything and then truncate when 
    # we stick it in $VARS in the callback.
    $input =~ s/ekw_([a-z]+)=\&quot;([a-zA-Z0-9 ,#\.\-]{1,96})\&quot;;/repl_cb($1,$2)/ge;
}

if ( $goofy ) {
    return &quot;&lt;dl&gt;&lt;dt&gt;&lt;b&gt;Invalid property names:&lt;/b&gt;&lt;/dt&gt;\n&quot; . $goofy . &quot;&lt;/dl&gt;&quot;;
} else {
    return '';
}
%]

&lt;p&gt;These are your ekw settings. You can copy and paste them
and change them. When you click the &quot;submit&quot; button below, 
they will be updated. That means that you can paste the 
settings into your homenode and somebody else can copy them 
into here and try them out. It also means that that other 
user can make a backup copy of his or her own settings in 
case yours prove to be repulsive (yeah, I know &lt;em&gt;all&lt;/em&gt; 
about you and your bad taste, [%$$USER{'title'}%]). &lt;/p&gt;

&lt;p&gt;If you're wondering what this is about, &quot;ekw settings&quot; 
are a user's personal color and font preferences for the E2 
ekw Theme. &lt;/p&gt;

&lt;p&gt;If you have any requests, please [About ekw Theme|RTFFAQ]
first. Thanks. 
&lt;/p&gt;

[%
my $str = '&lt;p&gt;&lt;b&gt;Previous settings:&lt;/b&gt; ';
$str .= linkNode( $$NODE{ 'node_id' }, 
                  'Save', 
                  { 'oldsettings' =&gt; 'backup' } ) . &quot; &quot;;

if ( defined $$VARS{ '_ekw_undo' } ) {
    $str .= linkNode( $$NODE{ 'node_id' }, 
                      'Restore', 
                      { 'oldsettings' =&gt; 'restore' } ) . &quot; &quot;;
    $str .= linkNode( $$NODE{ 'node_id' }, 
                      'Swap saved and current', 
                      { 'oldsettings' =&gt; 'swap' } ) . &quot; &quot;;
}
$str . &quot;&lt;/p&gt;\n&quot;;
%]

[{openform}]
&lt;textarea wrap=&quot;virtual&quot; name=&quot;input&quot; cols=&quot;40&quot; rows=&quot;16&quot;&gt;[%

return '' if ( $$USER{'node_id'} == $HTMLVARS{'guest_user'} );

if ( defined $query-&gt;param( 'input' ) ) {
    $query-&gt;param( 'input' );
} else {
    htmlcode( 'getvarsvalues', 'ekw_' );
}%]
&lt;/textarea&gt;
[{closeform}]

&lt;br /&gt;&lt;br /&gt;

&lt;p&gt;Values must be in the form 
&lt;tt&gt;ekw_(&amp;#91;a-z&amp;#93;+)=\&quot;(&amp;#91;a-zA-Z0-9 ,#\.\-&amp;#93;{1,96})\&quot;;&lt;/tt&gt;, 
if you're hep with regular expressions. In plain English it's like 
this: &lt;/p&gt;
&lt;pre&gt;
    name=&quot;value&quot;;
&lt;/pre&gt;
&lt;p&gt;...where the name has to start with &quot;ekw_&quot;, and the value 
can be any series of up to ninety-six letters, numbers, spaces, 
commas, pound signs, periods, and hyphens. It doesn't matter 
much what appears between one &lt;tt&gt;name=&quot;value&quot;;&lt;/tt&gt; pair and 
the next. We just search the string for things like that and 
ignore the rest. &lt;/p&gt;

&lt;p&gt;No, it doesn't just blindly assign arbitrary values to 
arbitrary &lt;tt&gt;$VARS&lt;/tt&gt; things. Don't be ridiculous. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;For the comfort and convenience of our nerdier users:&lt;/b&gt;&lt;/p&gt;

&lt;table cellspacing=&quot;2&quot; cellpadding=&quot;1&quot; border=&quot;0&quot;&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt&gt;ekw_alinkcolor&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;Active link color&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt&gt;ekw_bgcolor&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;Page background color&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt&gt;ekw_headingfont&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;Page title font&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt&gt;ekw_linkcolor&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;Inactive, unvisited link color&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt&gt;ekw_logoaccenttext&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;The color of the &quot;2&quot; in the E2 logo&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt&gt;ekw_logobackground&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;The color of the logo background&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt&gt;ekw_logoborder&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;The color of the border around the logo&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt&gt;ekw_logofont&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;The font used in the logo&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt&gt;ekw_logofontsize&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;Size of font in logo&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt&gt;ekw_logomaintext&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;Color of &quot;Everything&quot; in the E2 logo&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt&gt;ekw_monofontsize&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;The size of text in &lt;tt&gt;tt&lt;/tt&gt; and &lt;tt&gt;pre&lt;/tt&gt; tags&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt&gt;ekw_oddrowcolor&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;The color used for odd-numbered rows in [ENN], New Writeups, etc.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt&gt;ekw_textcolor&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;The color of ordinary page text&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt&gt;ekw_textfont&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;The font used for ordinary page text&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt&gt;ekw_textfontsize&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;The size of the ordinary page text font&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt&gt;ekw_vlinkcolor&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;The color used for visited links&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;


&lt;br /&gt;&lt;br /&gt;


&lt;p&gt;&lt;i&gt;Bug reports and &lt;strong&gt;verifiable&lt;/strong&gt; accounts of 
alien abduction go to [N-Wing] or [kthejoker].&lt;/i&gt;&lt;/p&gt;


</doctext>
  <node_id>1251586</node_id>
  <title>ekw Scheme Cannery</title>
</node>
