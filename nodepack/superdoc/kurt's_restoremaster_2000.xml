<node>
  <type_nodetype>14</type_nodetype>
  <doctext>It...  it...  it...  it...
&lt;p&gt;
[%
  return &quot;Nothing to see here...&quot;;
  my $str = &quot;&quot;;

  #return &quot;&quot;;
  my $dbh = $DB-&gt;getDatabaseHandle();
  my $c = $dbh-&gt;prepare(&quot;Select node_id, title from tomb where killa_user = 329 &quot;);
  $c-&gt;execute();


  while (my ($nid, $title) = $c-&gt;fetchrow())
  {
     my $csec = $dbh-&gt;prepare(&quot;select seclog_time from seclog where seclog_details = &quot; . $dbh-&gt;quote(&quot;$title (id: $nid) was raised from its tomb&quot;));
     $csec-&gt;execute();
     my ($sectime) = $csec-&gt;fetchrow();
     if ($sectime &gt; 0)
     {
       $str .= &quot;$nid already restored at $sectime &lt;br&gt;&quot;;
     }
     else 
     {
#       $str .= &quot;$nid (id: $title) was raised from its tomb : $nid &lt;br&gt;&quot;;
#     }
#  }

#  return $str; 

#  my $nid = $query-&gt;param(&quot;olde2nodeid&quot;);
  return &quot;huh?&quot; unless $nid;

  use Data::Dumper;
  #return Data::Dumper-&gt;Dump([$DB-&gt;getNodetypeTables(getType('writeup'))]);
  my $burialground = &quot;tomb&quot;;
  my $tomb = $DB-&gt;sqlSelectHashref(&quot;*&quot;,$burialground,&quot;node_id=$nid&quot;);
  my $nodeproto = eval(&quot;my &quot;.$tomb-&gt;{data});
 
  return &quot;ACK! nodeproto failed!&quot; unless $nodeproto;
  #return join &quot;&lt;br&gt;&quot;, keys %$nodeproto;
  #return Data::Dumper-&gt;Dump([$nodeproto]);
  
  #return &quot;Got: &quot;.getNodeById($$tomb{type_nodetype})-&gt;{title};
  my $typetables = $DB-&gt;getNodetypeTables($tomb-&gt;{type_nodetype});
  return &quot;ACK! no typetables!&quot; unless $typetables;
  push @$typetables, &quot;node&quot;;
  #return Data::Dumper-&gt;Dump([$typetables]);


  foreach my $table (@$typetables)
  {
    $str.=&quot;TABLE: $table&lt;br&gt;&quot;;
    my @fields = $DB-&gt;getFieldsHash($table);
    #$str.= Data::Dumper-&gt;Dump([@fields]);
    my $insertref = {};
    foreach(@fields)
    {
       my $field = $$_{Field};
       $insertref-&gt;{$field} = $$nodeproto{$field};
       $insertref-&gt;{$field} ||=  $$tomb{$field};
       $insertref-&gt;{$field} ||= 0;
       $insertref-&gt;{&quot;$table&quot;.&quot;_id&quot;} = $nid;
  
       $DB-&gt;sqlDelete($table,&quot;$table&quot;.&quot;_id=$nid&quot;);
       $DB-&gt;sqlInsert($table, $insertref);
    }
    $str.= Data::Dumper-&gt;Dump([$insertref]);
  }
  #return $str;
  my $N = getNodeById($nid);
  $DB-&gt;sqlInsert('seclog', {'seclog_user' =&gt; $$USER{node_id}, 'seclog_node' =&gt; $$NODE{node_id}, 'seclog_details' =&gt; &quot;$$N{title} (id: $$N{node_id}) was raised from its $burialground&quot;});
  $DB-&gt;{cache}-&gt;incrementGlobalVersion($N);
  if ($N)
  {
    $str .= &quot;Inserted $nid&lt;br&gt;&lt;br&gt; as &quot;.linkNode($N).&quot;&lt;Br&gt;&quot;;
  }
  else
  {
    $str .= &quot;Ressurection failed on $nid&lt;br&gt;&quot;;
  }  
  #(Data::Dumper-&gt;Dump([getNodeById($nid)]));

}
}

return $str;
%]</doctext>
  <node_id>1668580</node_id>
  <title>Kurt's RestoreMaster 2000</title>
</node>
