<node>
  <doctext>&lt;p align=&quot;right&quot;&gt;&lt;small&gt;See also [Usergroup discussions]&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;If you are a member of one of these groups, you can view messages sent to the group.&lt;/p&gt;

&lt;p&gt;
[%
my $uID = getId($USER);
return 'You must login to use this feature.' if $APP-&gt;isGuest($USER);
my $isRoot = $APP-&gt;isAdmin($USER);

my $str = '';
$str .= 'You can edit the usergroups that have messages archived at &lt;a href='.urlGen({'node'=&gt;'usergroup message archive manager','type'=&gt;'restricted_superdoc'}).'&gt;usergroup message archive manager&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;' if $APP-&gt;isAdmin($USER);
my $NL = &quot;\n&quot;;
my $BRN = &quot;&lt;br /&gt;\n&quot;;

#groups that archive
$str .= 'To view messages sent to a group, choose one of the following groups. You can only see the messages if the group has the feature enabled, and you\'re a member of the group.'.$BRN.'choose from: ';
{
my @G;
#groups sorted case insensitive

my $ks = $APP-&gt;getNodesWithParameter('allow_message_archive');

foreach my $ug (@$ks)
{
        $ug = getNodeById($ug);
        next unless $ug;
        push @G, linkNode($NODE,$ug-&gt;{title},{viewgroup =&gt; $ug-&gt;{title} });
}

$str .= join(', ',@G).'&lt;/p&gt;&lt;p&gt;'.$NL;
}

#find usergroup we're showing
my $UG = $query-&gt;param('viewgroup');
return $str unless length($UG);
$UG = getNode($UG, 'usergroup');
return 'There is no such usergroup.' unless $UG;
$str .= $query-&gt;hidden('viewgroup',$$UG{title});	#so form works
my $groupLink = linkNode($UG,0,{lastnode_id=&gt;0});
return 'You aren\'t a member of '.$groupLink.', so you can\'t view the group\'s messages.' unless Everything::isApproved($USER, $UG);
$str .= 'Viewing messages for group '.$groupLink.': '.$BRN;
my $ugID = getId($UG);
return $str.'Ack! Unable to find group ID!' unless $ugID;

#archiving allowed?
return $str.'This group doesn\'t archive messages.' unless $APP-&gt;getParameter($UG, &quot;allow_message_archive&quot;);


#misc. variable/database setup
my $UID = getId($USER);
my $MSG;
my $numMsg;
my $LIMITS = 'for_user='.$ugID.' AND for_usergroup='.$ugID;


#copy selected messages to self
$str .= htmlcode('varcheckboxinverse','ugma_resettime,Keep original send date').' (instead of using &quot;now&quot; time)'.$BRN;
$numMsg=0;	#using now to keep track of number of msgs copied
foreach($query-&gt;param) {
	if($_ =~ /^cpgroupmsg_(\d+)$/) {
		$MSG = $DB-&gt;sqlSelectHashref('*','message','message_id='.$1);
		next unless $MSG;
		#already checked if user is in group, so only need to make
		#sure message is a group-archived one
		next unless ($$MSG{for_user}==$ugID) &amp;&amp; ($$MSG{for_usergroup}==$ugID);
		++$numMsg;
		delete $$MSG{message_id};
		delete $$MSG{tstamp} if $$VARS{ugma_resettime};
		$$MSG{for_user}=$UID;
		$DB-&gt;sqlInsert('message', $MSG);
	}
}
$str .= '(Copied '.$numMsg.' group message'.($numMsg==1?'':'s').' to self.)'.$BRN if $numMsg;


#find range of messages to show
($numMsg) = $DB-&gt;sqlSelect('COUNT(*)', 'message', $LIMITS);
my $MAXSHOW = $query-&gt;param('max_show')||25; #maximum number of messages to show at a time
my $startDefault = $numMsg-$MAXSHOW;	#default to show most recent messages
$startDefault = 0 if $startDefault&lt;0;
my $showStart = defined $query-&gt;param('startnum') ? $query-&gt;param('startnum') : $startDefault;
if($showStart =~ /^(\d+)$/) {
	$showStart = $1;
	$showStart = $startDefault if $showStart &gt; $startDefault;
} else {
	$showStart = $startDefault;
}
$str .= $query-&gt;hidden('startnum',$showStart);	#so form works

#get messages
my $csr = $DB-&gt;sqlSelectMany('*', 'message', $LIMITS, 'ORDER BY tstamp,message_id LIMIT '.$showStart.','.$MAXSHOW);
return $str.'Ack! Unable to get messages!' unless $csr;
my @MSGS;
while(my $MSG = $csr-&gt;fetchrow_hashref) {
	push(@MSGS, $MSG);
}
$csr-&gt;finish();

my $numShow = scalar(@MSGS);
$str .= 'Showing '.$numShow.' message'.($numShow==1?'':'s').' (number '.($showStart+1).' to '.($showStart+$numShow).') out of a total of '.$numMsg.'.'.$BRN if $numShow;

#show messages
$str .= '&lt;table border=&quot;0&quot;&gt;'.$NL.'&lt;tr&gt;&lt;th&gt;# cp&lt;/th&gt;&lt;th&gt;author&lt;/th&gt;&lt;th&gt;time&lt;/th&gt;&lt;th&gt;message&lt;/th&gt;'.$NL;
my $TD = '&lt;td valign=&quot;top&quot;&gt;';
my $a;
my $name;
my $jsName;
my $t;
my $text;
my $msgCount = $showStart;
foreach $MSG (@MSGS) {

	$str .= '&lt;tr&gt;';

	#message number / copy to self
	$str .= $TD.'&lt;small&gt;&lt;small&gt;'. ++$msgCount .'&lt;/small&gt;&lt;/small&gt;&lt;input type=&quot;checkbox&quot; name=&quot;cpgroupmsg_'.$$MSG{message_id}.'&quot; value=&quot;copy&quot; /&gt;&lt;/td&gt;'; #query-&gt;checkbox adds a new line, which makes our table not look as nice

	#name
	$a=$$MSG{author_user}||0;
	if($a) { $a=getNodeById($a) || 0; }
	$name=$a ? $$a{title} : '';
	$name =~ tr/ /_/;
	$name = encodeHTML($name);
	$jsName = $name;
	$jsName =~ s/'/\\'/g;
	$str .= $TD.'&lt;small&gt;';
	$str .= '(&lt;a href=&quot;javascript:replyToCB(\''.$jsName.'\'&quot;&gt;r&lt;/a&gt;) ' if $$VARS{showmessages_replylink};
	$str .= $a ? linkNode($a,$name,{lastnode_id=&gt;0}) : '?';
	$str .= '&lt;/small&gt;&lt;/td&gt;';

	#date/time
	$t = $$MSG{tstamp};
	$str .= $TD.'&lt;small style=&quot;font-family: Andale Mono, sans-serif;&quot;&gt;';
#the MySQL upgrade makes date/time show in a more human readable format
#keeping old code, in case something changes later
	$str .= $t;
#	$str .= substr($t,0,4).'.'.substr($t,4,2).'.'.substr($t,6,2);
#	$str .= ' &amp;nbsp;';
#	$str .= substr($t,8,2).':'.substr($t,10,2).':'.substr($t,12,2);
	$str .= '&lt;/small&gt;&lt;/td&gt;';

	#message
	$text = $$MSG{msgtext};
	$text =~ s/&lt;/&amp;lt;/g;
	$text =~ s/&gt;/&amp;gt;/g;
#if($$USER{title} eq 'N-Wing') {
#$text =~ s/\[/&amp;#91;/g;
#$text =~ s/]/&amp;#93;/g;
#}
	$text =~ s/\s+\\n\s+/&lt;br \/&gt;/g;
	$text = parseLinks($text);
	$text =~ s/\[/&amp;#91;/g;	#can't have [ in final text (even in links), because everything is parsed for links *again*, which can cause bad display
	$str .= $TD.$text.'&lt;/td&gt;';

	$str .= '&lt;/tr&gt;'.$NL;
}
$str .= '&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;checking the box in the &quot;cp&quot; column will &lt;strong&gt;c&lt;/strong&gt;o&lt;strong&gt;p&lt;/strong&gt;y the message&amp;#91;s&amp;#93; to your private message box&lt;/td&gt;&lt;/tr&gt;'.$NL.'&lt;/table&gt;'.$NL;

#link to first/prev/next/last messages

if($numMsg&gt;scalar(@MSGS)) {

	#generates link to this node, starting at the given message number
	#arguments: ('link display','starting number')
	local *genLink = sub {
		my ($t,$sn) = @_;
		$t ||= 'start at '.($sn+1);
		$sn=0 if $sn&lt;0;
		return linkNode($NODE, $t, {viewgroup=&gt;$$UG{title}, startnum=&gt;$sn, lastnode_id=&gt;0});
	};

	my @jumps;
	my $s;
	my $limitL;
	my $limitU;

	$s = 'first '.$MAXSHOW;
	if($showStart!=0) {
		$limitU = $MAXSHOW&lt;$numMsg ? $MAXSHOW : $numMsg;
		$s.=' (1-'.$limitU.')';
		push(@jumps, genLink($s,0));
	} else {
		push(@jumps, $s);
	}

	$s = 'previous';
	if($showStart&gt;0) {
		$limitL = $showStart-$MAXSHOW;
		$limitL = 1 if $limitL&lt;1;
		$limitU = $limitL+$MAXSHOW;
		$limitU = $numMsg if $limitU&gt;$numMsg;
		$s.=' ('.$limitL.'-'.($limitU-1).')';
		push(@jumps, genLink($s,$showStart-$MAXSHOW));
	} else {
		push(@jumps, $s);
	}

	push(@jumps, '&lt;strong&gt;current ('.($showStart+1).'-'.($showStart+$numShow).')&lt;/strong&gt;');

	if($showStart &lt; $startDefault) {
		$limitU = $showStart+$MAXSHOW+$MAXSHOW;
		$limitU = $numMsg if $limitU&gt;$numMsg;
		$limitL = $limitU - $MAXSHOW + 1;
		$limitL = 1 if $limitL&lt;1;
		$limitL = $startDefault+1 if $limitL&gt;($startDefault+1);
		$s='next ('.$limitL.'-'.$limitU.')';
		push(@jumps, genLink($s,$limitL-1));
	} else {
		push(@jumps, 'next');
	}

	$s = 'last '.$MAXSHOW;
	if($showStart&lt;$startDefault) {
		$s .= ' ('.($startDefault+1).'-'.$numMsg.')';
		push(@jumps, genLink($s,$startDefault));
	} else {
		push(@jumps, $s);
	}

	$str .= '&amp;#91; '.join(' &amp;#93; &amp;nbsp; &amp;#91; ',@jumps).' &amp;#93;'.$BRN;
}

htmlcode('openform','').$str.$BRN.htmlcode('closeform','');
%]
&lt;/p&gt;

&lt;p align=&quot;right&quot;&gt;&lt;small&gt;(bugs to [N-Wing])&lt;/small&gt;&lt;/p&gt;</doctext>
  <node_id>1199723</node_id>
  <title>usergroup message archive</title>
  <type_nodetype>14</type_nodetype>
</node>
