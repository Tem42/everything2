<node>
  <node_id>1854411</node_id>
  <type_nodetype>14</type_nodetype>
  <doctext>[%

return &quot;This page will allow you to customize your view of the site if you sign up for an account.&quot; if ($APP-&gt;isGuest($USER));


my $str = &quot;&quot;;

my $nodeType = 1854352; #Stylesheet nodetype

my $choicelist = [
	'0','(no sorting)',
	'nameA','title, ascending (ABC)',
	'nameD','title, descending (ZYX)',
	'createA','create time, ascending (oldest first)',
	'createD','create time, descending (newest first)',
];
my $opt = 'sort order: ';
$opt .= htmlcode('varsComboBox','ListNodesOfType_Sort',0,@$choicelist);

$opt .= 'only show things (' . $query-&gt;checkbox('filter_user_not',0,1,'not') . ') written by ' . $query-&gt;textfield('filter_user') . '&lt;br&gt;';

if(defined($query-&gt;param('clearVandalism'))) {
	delete($$VARS{customstyle});
}


if(length($$VARS{userstyle})) {
	$str .= &quot;\n&lt;p&gt;What's your style? Currently &quot;.linkNode($$VARS{userstyle}).&quot;.&lt;/p&gt;&quot;;
}
$str .= &quot;\n&lt;p&gt;A selection of popular stylesheets can be found at [Theme Nirvana]; below is a list of every stylesheet ever submitted here.&lt;/p&gt;&quot;;

if(length($$VARS{customstyle})) {
	$str.='&lt;p&gt;Note that you have customised your style using the [style defacer], which is going to affect the formatting of any stylesheet you choose. '.linkNode($NODE,'Click here to clear that out',{clearVandalism=&gt;'true'}).' if that\'s not what you want. If you want to create a whole new stylesheet, visit [the draughty atelier].&lt;/p&gt;';
}
else {
	$str.=&quot;&lt;p&gt;You can customise your stylesheet at the [style defacer] or, if you're feeling brave, create a whole new stylesheet at [the draughty atelier].&lt;/p&gt;&quot;;
}
$str .= '
&lt;form method=&quot;POST&quot;&gt;
&lt;input type=&quot;hidden&quot; name=&quot;node_id&quot; value=&quot;' . $NODE-&gt;{node_id} . '&quot; /&gt;
';
$str .= $opt;
$str .= $query-&gt;submit('fetch','Fetch!') . '
&lt;/form&gt;';

my $selectionTypeID = $VARS-&gt;{ListNodesOfType_Type};
	
#force a 0 or 1 from a CGI parameter
local *cgiBool = sub {
	return ($query-&gt;param($_[0]) eq '1') ? 1 : 0;
};

#mapping of unsafe VARS sort data into safe SQL
my %mapVARStoSQL = (
	'0' =&gt; '',
	'nameA' =&gt; 'title ASC',
	'nameD' =&gt; 'title DESC',
	'authorA' =&gt; 'author_user ASC',
	'authorD' =&gt; 'author_user DESC',
	'createA' =&gt; 'createtime ASC',
	'createD' =&gt; 'createtime DESC',
);
my $sqlSort .= $mapVARStoSQL{$VARS-&gt;{ListNodesOfType_Sort}};


my $filterUserNot = cgiBool('filter_user_not');
my $filterUser = (defined $query-&gt;param('filter_user')) ? $query-&gt;param('filter_user') : undef;
if(defined $filterUser) {
	$filterUser = getNode($filterUser, 'user') || getNode($filterUser, 'usergroup') || undef;
}
my $sqlFilterUser = '';
my $plainTextFilter='';
if(defined $filterUser) {
	$sqlFilterUser = ' AND author_user'.($filterUserNot?'!=':'=').getId($filterUser);
	$plainTextFilter.=($filterUserNot?' not':'').' created by '.linkNode($filterUser,0,{lastnode_id=&gt;0});
}

my $total;
my $sth = $DB-&gt;{dbh}-&gt;prepare(&quot;SELECT COUNT(*) FROM node WHERE type_nodetype='$nodeType'&quot;.$sqlFilterUser);
$sth-&gt;execute();
($total) = $sth-&gt;fetchrow;
$str .= $plainTextFilter if length($plainTextFilter);

my $num = 100;


my $listedItems = '';
my $next = $query-&gt;param('next') || '0';
my $queryText = &quot;SELECT node_id, title, author_user, createtime FROM node WHERE type_nodetype = '$nodeType'&quot;;
$queryText .= $sqlFilterUser if length($sqlFilterUser);
$queryText .= ' ORDER BY '.$sqlSort if length($sqlSort);
$queryText .= &quot; LIMIT $next, $num&quot;;

$sth = $DB-&gt;{dbh}-&gt;prepare($queryText);
$sth-&gt;execute();
my $numCurFound=0;
my $aID; #author ID
while(my $item = $sth-&gt;fetchrow_arrayref) {
	++$numCurFound;
	$listedItems .= '&lt;tr&gt;';
	$aID = $$item[2];

	#show edit link if admin or user viewing page created node
	$listedItems .= '&lt;td&gt;' . linkNode(@$item[0,1],{lastnode_id=&gt;0}) . '&lt;/td&gt;';
	$listedItems .= '&lt;td&gt;'.linkNode($aID,0,{lastnode_id=&gt;0}).'&lt;/td&gt;';
	my $createTime = @$item[3];
	$listedItems .= '&lt;td&gt;' . htmlcode('parsetimestamp',$createTime.',1') . '&lt;/td&gt;&lt;td&gt;' . htmlcode('timesince',$createTime.',1,100') . '&lt;/td&gt;';
	$listedItems .= '&lt;td&gt;' . ( $APP-&gt;isGuest($USER) ? '&amp;nbsp;' :
		'&amp;#91;&amp;nbsp;&lt;a href=&quot;/?displaytype=choosetheme&amp;theme='.$$item[0].'&amp;noscript=1&quot;
 			onfocus=&quot;this.href = this.href.replace( \'&amp;noscript=1\' , \'\' ) ;&quot;&gt;test&lt;/a&gt;&amp;nbsp;]' ) . '&lt;/td&gt;';
	$listedItems .= &quot;&lt;/tr&gt;\n&quot;;
}
$str .= ' (Showing items '.($next+1).' to '.($next+$numCurFound).'.)' if $total;
$str .= '&lt;/p&gt;&lt;p&gt;&lt;table border=&quot;0&quot;&gt;
&lt;tr&gt;&lt;th&gt;title&lt;/th&gt;&lt;th&gt;author&lt;/th&gt;&lt;th&gt;created&lt;/th&gt;&lt;th&gt;age&lt;/th&gt;&lt;th&gt;&amp;nbsp;&lt;/th&gt;&lt;/tr&gt;
'.$listedItems.'
&lt;/table&gt;&lt;/p&gt;
';
return $str if ($total &lt; $num);


local *jumpLinkGen = sub {
	my ($startNum, $disp) = @_;
	my $opts = {
		'node_id'=&gt;$$NODE{node_id},
		'fetch'=&gt;1,
		'next'=&gt;$startNum,
#		'chosen_type'=&gt;$selection,	#stored in VARS now
	};
	if(defined $filterUser) {
		$$opts{filter_user}=$$filterUser{title};
		$$opts{filter_user_not}=$filterUserNot;
	}
	return '&lt;a href='.urlGen($opts).'&gt;'.$disp.'&lt;/a&gt;';
};

my $nextprev='';
my $remainder = $total - ($next + $num);
if($next &gt; 0) {
	$nextprev .= jumpLinkGen($next-$num, 'previous '.$num).&quot;&lt;br /&gt;\n&quot;;
}
if($remainder &lt; $num and $remainder &gt; 0) {
	$nextprev .= jumpLinkGen($next+$num, 'next '.$remainder).&quot;\n&quot;;
} elsif($remainder &gt; 0) {
	$nextprev .= jumpLinkGen($next+$num, 'next '.$num).&quot;&lt;br /&gt;\n&quot;;
}
$str .= qq|&lt;p align=&quot;right&quot;&gt;$nextprev&lt;/p&gt;| if length($nextprev);

return $str;
%]</doctext>
  <title>The Catwalk</title>
</node>
