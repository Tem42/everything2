<node>
  <type_nodetype>14</type_nodetype>
  <doctext>[%

#
#  Again, Gorgonzola takes perfectly good E2 code and twists it
#  to his nefarious purposes
#

my $UID = $$USER{node_id} || 0; 

if (!$UID || ($UID == $HTMLVARS{guest_user}))
{
 return 'You need an account to access this node.&lt;br /&gt;&lt;br /&gt;.'
   . 'Why not '
   . linkNode(getNode('Create a New user', 'superdoc'), 'create one')
   . '?';
} 
my ($name) = @_;
$name ||= &quot;&quot;;
  
my $str = htmlcode('openform');

my $victim = $query-&gt;param('usersearch');
$victim = $$USER{title} unless ($victim);

if (exists $HTMLVARS{'group_gods'}{$UID}) {
    		$str .= $query-&gt;textfield('usersearch', $victim);
	} else { 
		$str .= $query-&gt;hidden('usersearch',$victim);
                $str .= 'For: ' . $$USER{title}; }


#N-Wing converted this from FormMenu to plain old CGI so items could be in a logical order

#this sets the ordering of items in the combo box
my $choices = [
	'title ASC', 'wrtype_writeuptype ASC,title ASC', 'cooled DESC,title ASC', 'cooled DESC,node.reputation DESC,title ASC', 'node.reputation DESC,title ASC'
];

my $labels = {
	'title ASC'=&gt;'Title',
	&quot;wrtype_writeuptype ASC,title ASC&quot;=&gt;&quot;Writeup type, then title&quot;,
        &quot;cooled DESC,title ASC&quot;=&gt;&quot;C!, then title&quot;,
        'cooled DESC,node.reputation DESC,title ASC'=&gt;'C!, then reputation',
        'node.reputation DESC,title ASC'=&gt;'Reputation'
};

my $raw = $query-&gt;param('raw');
$str .= $query-&gt;hidden('filterhidden');

$str .= &quot;Order By:&quot;.$query-&gt;popup_menu('orderby', $choices, 'title ASC', $labels);
$str .= &quot;&lt;br /&gt;&quot;.$query-&gt;checkbox(-name=&gt;'raw', -label=&gt;'Raw Data', -checked=&gt;$raw);
my $fdelim = $query-&gt;param('delimiter');
$fdelim = &quot;_&quot; unless ($fdelim);
$str .= &quot;&amp;nbsp;&amp;nbsp;Delimiter: &quot;.$query-&gt;textfield('delimiter',$fdelim).&quot;&lt;br /&gt;&quot;;
$str .= $query-&gt;submit(&quot;sexisgood&quot;, &quot;submit&quot;) . $query-&gt;end_form;
return $str;

%]

[%

my $UID = $$USER{node_id} || 0; 


if (!$UID || ($UID == $HTMLVARS{guest_user}))
{
 return;
} 


my $isRoot = exists $HTMLVARS{'group_gods'}{$UID};
my $us;
my $israw = $query-&gt;param('raw');

if ($isRoot) { 
    $us = $query-&gt;param('usersearch'); #user's title to find WUs on
   } else {
    $us = $$USER{title};
};
my $orderby = $query-&gt;param('orderby');
my $delim = $query-&gt;param('delimiter');

return '' unless($orderby);
my $orderdata = {
	'title ASC'=&gt;1,                            # Title
	'wrtype_writeuptype ASC,title ASC'=&gt;1,     # Writeup type, then title
        'cooled DESC,title ASC'=&gt;'Number C!',      # Number of C!
        'cooled DESC,node.reputation DESC,title ASC'=&gt;'C! then rep',   # Number of C!, then rep, title
        'node.reputation DESC,title ASC'=&gt;'Reputation'           # Reputation
};
$orderby = '' unless exists $$orderdata{$orderby};

#NOTE:  we must CHECK to make sure orderby is one of 
#our valid options, otherwise a user could potentially
#execute arbitrary SQL -- VERY BAD

$orderby ||= 'title ASC';

if ($israw) {
   return &quot;Delimiter (&quot;.$delim.&quot;) must be exactly one character.&quot; unless (length($delim)==1);
};   

#quit if no user given to get info on
return 'It helps to give a user\'s nick.' unless $us;

#quit if invalid user given
my $user = getNode($us,'user');

my $usEncode = encodeHTML($us);
return &quot;It seems that the user '$usEncode' doesn't exist... how very, very strange... (Did you type their name correctly?)&quot; unless(defined $user);
return 'Are you really looking for almost all the words in the English language?' if $$user{title} eq 'Webster 1913';

#constants setup
my $uid = getId($user) || 0;	#lowercase = user searching on

my $isMe = ($uid == $UID) &amp;&amp; ($uid!=0);
my $rep = $isMe || $isRoot;

my $str = '';

my $isEd = $rep || (exists $HTMLVARS{'group_content editors'}{$UID});

#quit for special bots

return '&lt;p align=&quot;center&quot;&gt;&lt;big&gt;&lt;big&gt;&lt;strong&gt;G r o w l !&lt;/strong&gt;&lt;/big&gt;&lt;/big&gt;' if ($$user{title} eq 'EDB');

return '&lt;p align=&quot;center&quot;&gt;&lt;big&gt;&lt;big&gt;&lt;strong&gt;Um, no.&lt;/strong&gt;&lt;/big&gt;&lt;/big&gt;' if ($$user{title} eq 'Webster 1913');


#load writeup information


#database setup
my $dbh = $DB-&gt;getDatabaseHandle();
return 'Oh, no! Unable to get database handle!' unless $dbh;
my $qh;	#query handle
my $typeID = getId(getType('writeup')) || 0;

#
# total writeup count

#

$qh = $dbh-&gt;prepare('SELECT COUNT(*) FROM node WHERE author_user='.$uid.' AND type_nodetype='.$typeID);

$qh-&gt;execute();
my ($totalWUs) = $qh-&gt;fetchrow();
$qh-&gt;finish();

return linkNode($user) . ' has no writeups'.'.' unless $totalWUs;

#load in only writeups we're currently looking at
$qh = $dbh-&gt;prepare(
	'SELECT parent_e2node, title, cooled, reputation, publishtime'.
	  ', totalvotes'.
        ' FROM node, writeup WHERE node.author_user='.$uid.
	' AND node.type_nodetype='.$typeID.
	' AND writeup.writeup_id=node.node_id'.
	' ORDER BY ' .$orderby
#	' LIMIT 1,50'  #comment this out after debug
);
$qh-&gt;execute();	#gets current WUs and their info
my @allWUInfo;
while(my $r=$qh-&gt;fetchrow_hashref) {
	push(@allWUInfo, $r);
}
$qh-&gt;finish();

#done with getting writeup info, the rest is just display

$str .= ($totalWUs==1 ? 'This writeup was' : 'These '.$totalWUs.' writeups were all') . ' written by ' . linkNode($user, ($isMe?'you':0), {lastnode_id=&gt;0}) . 

&quot;:&lt;/p&gt;\n&quot;;

#prepare for loop
my $drn=0;	#display row number - for row coloring
my $wuid;	#current WU's ID

#loop through WUs, and show their info
if ($israw) {
        $str.=&quot;&lt;pre&gt;&quot;;
	foreach my $wu (@allWUInfo) {

		$wuid = getId($wu);

		$str .= $$wu{title}.$delim;

                if ($$wu{cooled}) {
                   $str .= &quot;$$wu{cooled}C!&quot;.$delim;
                   } else {
                   $str .= &quot; &quot;.$delim;
                };

		if($rep) {
                        $str .= $$wu{reputation}.$delim;

			my $votescast = $$wu{totalvotes};
                
			$str .= $votescast .$delim;
		}

		$str .= htmlcode('parsetimestamp', &quot;$$wu{publishtime}&quot;).&quot;\n&quot;;
	}
        $str .= &quot;&lt;/pre&gt;&quot;;

} else { 

#header

	$str .= '&lt;table border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;0&quot;&gt;'.&quot;\n&quot;.
		'&lt;tr&gt;&lt;th align=&quot;left&quot;&gt;Writeup Title (type)&lt;/th&gt;&lt;th&gt;C!&lt;/th&gt;';
	$str .= '&lt;th colspan=&quot;2&quot; align=&quot;center&quot;&gt;Rep&lt;/th&gt;' if $rep;
	$str .= '&lt;th align=&quot;center&quot;&gt;Published&lt;/th&gt;';
	$str .= &quot;&lt;/tr&gt;\n&quot;;
	foreach my $wu (@allWUInfo) {

		$wuid = getId($wu);

		$str .= '&lt;tr';
		$str .= ' class=&quot;oddrow&quot; bgcolor=&quot;#bbbbff&quot;' unless ($drn%2);
		$str .= '&gt;';

		$str .= '&lt;td nowrap&gt;'. linkNode($$wu{parent_e2node}, $$wu{title}, {lastnode_id=&gt;0}).'&lt;/td&gt;&lt;td&gt;';
		$str .= &quot; &lt;strong&gt;$$wu{cooled}C!&lt;/strong&gt;&amp;nbsp;&quot; if $$wu{cooled};
		$str .= '&lt;/td&gt;';

		if($rep) {
			my $r = $$wu{reputation} || 0;

			my $votescast = $$wu{totalvotes};
			my $p = ($votescast + $r)/2;
			my $m = ($votescast - $r)/2;
			$str .= '&lt;td&gt;'.$r.'&lt;/td&gt;&lt;td&gt;&lt;small&gt;+'.$p.'/-'.$m.'&lt;/small&gt;&lt;/td&gt;';
		}

		$str .= '&lt;td nowrap align=&quot;right&quot;&gt;&lt;small&gt;'.htmlcode('parsetimestamp', &quot;$$wu{publishtime}&quot;)
        	       .&quot;&lt;/small&gt;&lt;/td&gt;&lt;/tr&gt;\n&quot;;

		++$drn;
	}
        $str .= &quot;&lt;/table&gt;\n&quot;;
}




$str;
%]
</doctext>
  <node_id>1490171</node_id>
  <title>My Big Writeup List</title>
</node>
