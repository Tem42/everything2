<node>
  <doctext>[%
return 'You\'ve got other things to snoop on, don\'t ya.' unless $APP-&gt;isEditor($USER);

my $str = 'A smarter nodeshell deletion implementation
	&lt;br&gt;&lt;br&gt;Copy and paste off of the nodeshells marked for destructions lists.  
	DO NOT separate them by pipes anymore.
	&lt;b&gt;This is slow to execute&lt;/b&gt;, but is worth it.&lt;br&gt;&lt;br&gt;
	&lt;ul&gt;This does the following things:
		&lt;li&gt;Checks to see if it\'s an E2node 
		&lt;li&gt;Checks to see whether it is empty
		&lt;li&gt;Checks for firmlinks
		&lt;li&gt;Deletes the nodeshell
	&lt;/ul&gt;
	&lt;br&gt;&lt;br&gt;This is stable, except the recurring server error.&lt;br&gt;&lt;br&gt;';

my @nodeshellgroup;
my $nodeshell;

  $str .= '&lt;ul&gt;';

if(defined $query-&gt;param('nodeshells'))
	{
	my $shells = $query-&gt;param('nodeshells');
	
	$shells =~ s/\s+\n/\n/g;
	$shells =~ s/\r/\n/g;
	$shells =~ s/\[//g;
	$shells =~ s/\]//g;
	
	
	my @nodeshellgroup = split('\n', $shells);
	
	# jay: this is wharfcode. 
	my %exempt = ( 9651 =&gt; 1, 631430 =&gt; 1, 3146 =&gt; 1, 9147 =&gt; 1, 406468 =&gt; 1, 331 =&gt; 1
	, 614583 =&gt; 1, 1019934 =&gt; 1, 893653 =&gt; 1, 448206 =&gt; 1, 470183 =&gt; 1, 488505 =&gt; 1
	, 898636 =&gt; 1, 650043 =&gt; 1 );
	
	foreach my $nshell (@nodeshellgroup)
		{ 
		$nodeshell = getNode($nshell, 'e2node');
		
		if(defined $nodeshell)
			{
			$str .= '&lt;li&gt;'.$$nodeshell{title}.' - exists';
			
			unless($DB-&gt;sqlSelect(
				&quot;to_node&quot;
				, &quot;links&quot;
				, &quot;linktype=1150375 
				AND from_node=$$nodeshell{node_id}&quot;)
				)
				{
				
				unless($$nodeshell{group})
					{
					$str .= ' - empty - nuking';
					
					#it's safe to go on
					#I stole this from op=nuke
					
					# jay: this unless( ) is wharfcode. 
					#unless ( $exempt{ $$nodeshell{ author_user } } ) {
						#my %N = %{ $nodeshell };  #create a copy of the node hash;
						#my %data = %N;
						#$N{killa_user} = $DB-&gt;getId($USER);
						#my @fields = $DB-&gt;getFields('tomb');
						#foreach (@fields) 
							#{ delete $data{$_} if exists $data{$_} }
						#foreach (keys %data) 
							#{ delete $N{$_}; }
					#delete $data{type};
					#use Data::Dumper;
					#$N{data} = Data::Dumper-&gt;Dump([\%data]);
					#$DB-&gt;sqlInsert(&quot;tomb&quot;, \%N);
					nukeNode($nodeshell, $USER);
					#}
					
					$str .= ' - &lt;font color=red&gt;&lt;b&gt;DELETED&lt;/b&gt;&lt;/font&gt;';
					}
				else
					{
					$str .= ' - not empty, can\'t delete.';
					} #unless isn't empty
				
				}
			else
				{
				$str .= ' - Part of a firmlink, can\'t delete';
				} #firmlink check
			
			}
		else
			{
			$str .= '&lt;li&gt;&quot;'.$nshell.'&quot; doesn\'t exist as an e2node.';
			}#if(defined $nodeshell)
		
		
		} 
	}
	
$str .= '&lt;/ul&gt;';
	
$str .= '&lt;form method=&quot;post&quot;&gt;
	&lt;input type=&quot;hidden&quot; name=&quot;node_id&quot; value=&quot;1140925&quot;&gt;
	&lt;textarea name=&quot;nodeshells&quot; rows=&quot;20&quot; cols=&quot;60&quot; &gt;&lt;/textarea&gt;
	&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; value=&quot;Whack em all!&quot;&gt;
	&lt;/form&gt;
	&lt;br&gt;&lt;br&gt;';

return $str;
%]</doctext>
  <title>The Nodeshell Hopper</title>
  <node_id>1140925</node_id>
  <type_nodetype>14</type_nodetype>
</node>
