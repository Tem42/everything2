<node>
  <type_nodetype>14</type_nodetype>
  <doctext>&lt;p&gt;&lt;b&gt;&lt;big&gt;[Everything2 Help] &amp;gt; [Everything2 Categories]&lt;/big&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;A [category] is a way to group a list of related nodes. You can create a category that only you can edit, a category that anyone can edit, or a category that can be maintained by any [Everything2 Usergroups|usergroup] you are a member of.&lt;/p&gt;

&lt;p&gt;The scope of categories is limitless. Some examples might include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[%$$USER{title}%]'s Favorite Movies&lt;/li&gt;
&lt;li&gt;The Definitive Guide To Star Trek&lt;/li&gt;
&lt;li&gt;Everything2 Memes&lt;/li&gt;
&lt;li&gt;Funny Node Titles&lt;/li&gt;
&lt;li&gt;The Best Books of All Time&lt;/li&gt;
&lt;li&gt;Albums [%$$USER{title}%] Owns&lt;/li&gt;
&lt;li&gt;Writeups About Love&lt;/li&gt;
&lt;li&gt;Angsty Poetry&lt;/li&gt;
&lt;li&gt;Human Diseases&lt;/li&gt;
&lt;li&gt;... the list could go on and on&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Before you create your own category you might want to visit the [Display Categories|category display page] to see if you can contribute to an existing category.&lt;/p&gt;

[%

my $str;
my $guestUser = $Everything::CONF-&gt;{system}-&gt;{guest_user};
#
# Filter people out who can't create categories
#
if ( $APP-&gt;isGuest($USER) )
{
   return 'You must be [login|logged in] to create a category.';
}
if ( $APP-&gt;getLevel($USER) &lt;= 1 )
{
   $str.='Note that until you are at least Level 2, you can only add your own writeups to categories.';
}
# this check may or may not be needed/wanted
my $userlock = $DB-&gt;sqlSelectHashref('*', 'nodelock', &quot;nodelock_node=$$USER{user_id}&quot;);
if ($userlock)
{
   return 'You are forbidden from creating categories.';
}

#
# Output Form
#

$str .= $query-&gt;startform;
$query-&gt;param(&quot;node&quot;, &quot;&quot;);
$str .= '&lt;p&gt;&lt;b&gt;Category Name:&lt;/b&gt;&lt;br /&gt;';
$str .= $query-&gt;textfield(-name =&gt; &quot;node&quot;,
                          -default =&gt; &quot;&quot;,
                          -size =&gt; 50,
                          -maxlength =&gt; 255);
$str .= '&lt;/p&gt;
         &lt;p&gt;&lt;b&gt;Maintainer:&lt;/b&gt;&lt;br /&gt;';

# Get usergroups current user is a member of
my $sql = &quot;SELECT DISTINCT ug.node_id,ug.title 
           FROM node ug,nodegroup ng 
           WHERE ng.nodegroup_id=ug.node_id AND ng.node_id=$$USER{user_id} 
           ORDER BY ug.title&quot;;
my $ds = $DB-&gt;{dbh}-&gt;prepare($sql);
$ds-&gt;execute() or return $ds-&gt;errstr;
my $catType = getId(getType('category'));
my @vals;
my %txts;
# current user
$txts{$$USER{user_id}} = &quot;Me ($$USER{title})&quot;;
push @vals, $$USER{user_id};
# guest user will be used for &quot;Any Noder&quot;
$txts{$guestUser} = &quot;Any Noder&quot;;
push @vals, $guestUser;
while(my $ug = $ds-&gt;fetchrow_hashref)
{ 
   $txts{$$ug{node_id}} = $$ug{title} . &quot; (usergroup)&quot;;
   push @vals, $$ug{node_id};
}
$str .= $query-&gt;popup_menu(&quot;maintainer&quot;, \@vals, &quot;&quot;, \%txts );

my @customDimensions = htmlcode('customtextarea');

# clear op which is set to &quot;&quot; on page load
# also clear 'type' which may have been set to navigate to this page
$query-&gt;delete('op', 'type');

$str .= '&lt;/p&gt;'
     . '&lt;fieldset&gt;&lt;legend&gt;Category Description&lt;/legend&gt;'
     . $query-&gt;textarea(
         -name =&gt; &quot;category_doctext&quot;
         , -id =&gt; &quot;category_doctext&quot;
         , -class =&gt; &quot;formattable&quot;
         , @customDimensions
         )
     . '&lt;/fieldset&gt;'
     . $query-&gt;hidden(-name =&gt; &quot;op&quot;, -value =&gt; &quot;new&quot;)
     . $query-&gt;hidden(-name =&gt; &quot;type&quot;, -value =&gt; $catType)
     ;
$str .= $query-&gt;submit(&quot;createit&quot;, &quot;Create It!&quot;);
$str .= $query-&gt;endform;

%]
</doctext>
  <node_id>1935419</node_id>
  <title>Create Category</title>
</node>
