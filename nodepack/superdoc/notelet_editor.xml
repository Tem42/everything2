<node>
  <doctext>&lt;h3&gt;Notelet Castrator&lt;/h3&gt;

&lt;p&gt;This is the Notelet Castrator.  Its purpose is to neuter your Notelet by
        adding // to the front of every line, commenting out all Javascript.
        Use this tool when your Nodelet is causing problems and there is no other way to fix them.&lt;/p&gt;

[% ## Note: castrator is above the editor so changes will be displayed immediately.

my $str = htmlcode('openform');
my $feedback = &quot;Click submit to castrate your Notelet Nodelet.&lt;br&gt;&quot;;

if ($query-&gt;param('YesReallyCastrate')) { 
     $$VARS{'noteletRaw'} =~ s,\n,\n//,g; 
     $$VARS{'noteletRaw'} = '// '.$$VARS{'noteletRaw'};
     $$VARS{'noteletScreened'} = &quot;&quot;; 
     $feedback = &quot;&lt;/p&gt;\n&lt;p&gt;&lt;b&gt;Notelet Castrated!&lt;/b&gt;&lt;br&gt;&quot;; }

my $charcount = length($$VARS{'noteletRaw'});

$str .= &quot;\n&lt;input type='hidden' name='YesReallyCastrate' value='1'&gt;&quot;;
$str .= &quot;&lt;p&gt;Your notelet contains $charcount characters.  &quot;;
$str .= $feedback . &quot;\n&quot;;
$str .= htmlcode('closeform') . &quot;&lt;/p&gt;&quot;;

return $str;
%]

&lt;hr width=&quot;75%&quot;&gt;&lt;hr width=&quot;50%&quot;&gt;&lt;hr width=&quot;75%&quot;&gt;

&lt;h3&gt;Notelet Editor&lt;/h3&gt;

&lt;p&gt;This &lt;strong&gt;Notelet Editor&lt;/strong&gt; lets you edit your Notelet. No, not your nodelet, your notelet (your notelet nodelet). [%


##########################################################################
#
# NOTE: this is not editing your Notelet, this is editing the code that
# lets you edit your Notelet
#
# DO NOT CHANGE THIS UNLESS YOU ARE A CODER HERE
#
##########################################################################



return 'Only logged in users can use this.' if $APP-&gt;isGuest($USER);
return ' (Note: you currently don\'t have your Notelet on, so changing things here is rather pointless. You can turn on the Notelet nodelet by visiting your [user settings].)' unless $VARS-&gt;{nodelets} =~ /1290534/;	#kind of a hack, but it is quick
#FIXME getId(getNode('Notelet','nodelet','light'))
'';
%] What is the notelet? It lets you put notes (or anything, really) into a nodelet. (Other nodelet settings are available at [Nodelet Settings].)&lt;/p&gt;

[%
#return 'still in beta' unless $query-&gt;param('isbetatester');
return unless $query-&gt;param('makethechange');
return '' if $APP-&gt;isGuest($USER);

# Ascorbic's Security checking
use Digest::MD5 qw(md5_hex);
my $test = md5_hex($$USER{passwd} . ' ' . $$USER{email} . $query-&gt;param('seed'));
return '&lt;h2 class=&quot;error&quot;&gt;Security error&lt;/h2&gt;&lt;p&gt;Invalid attempt made to edit notelet.&lt;/p&gt;' unless htmlcode('verifyRequest','noteletedit');

my $rawraw = $query-&gt;param('notelet_source');
$VARS-&gt;{noteletRaw}=$VARS-&gt;{personalRaw} if exists $VARS-&gt;{personalRaw};
delete $VARS-&gt;{'personalRaw'};	#old way

if((!defined $rawraw) || !length($rawraw)) {
	delete $VARS-&gt;{'noteletRaw'};
} else {
	my $MAXRAW = 32768;
	if(length($rawraw)&gt;$MAXRAW) {
		$rawraw=substr($rawraw,0,$MAXRAW);
		$query-&gt;param('notelet_source',$rawraw);
	}
	$VARS-&gt;{'noteletRaw'} = $rawraw;
}
htmlcode('screenNotelet','');
%]

&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
[%
#&lt;li&gt;Besides the [E2 FAQ: HTML|normal allowed HTML tags], you may also use &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt;. But beware! If you don't use these table tags properly, your display could become very messed up. (There is a possibility that &lt;em&gt;all&lt;/em&gt; tags will be allowed, so this comment would have to be changed then.)&lt;/li&gt;
'';
%]
&lt;li&gt;&lt;code&gt;&amp;lt;!--&lt;/code&gt; You may enter comments here. Why would you want comments? Scripting! (But be sure to uncheck &quot;Remove comments&quot;.) &lt;code&gt;--&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The raw text you enter here is limited to 1000 characters. Anything longer than that will be lost. This raw text will not be changed in any way. As a slight reward for gaining levels, the higher your level, the more of your raw text is used. [%
my $curLevel = $APP-&gt;getLevel($USER) || 0;

my $maxLen = $curLevel * 100;
if($maxLen&gt;1000) { $maxLen=1000; } elsif($maxLen&lt;500) { $maxLen=500; }

#power has its privileges
#this is in [Notelet Editor] (superdoc) and [screenNotelet] (htmlcode)
if( $APP-&gt;isAdmin($USER) ) {
	$maxLen = 32768;
} elsif( $APP-&gt;isEditor($USER) ) {
	$maxLen += 100;
} elsif( $APP-&gt;isDeveloper($USER) ) {
	$maxLen = 16384; #16k ought to be enough for everyone. --[Swap]
}

#actually, this doesn't take into account edev/editors; lets call that a pleasant surprise
return 'You are level '.$curLevel.', so your maximum used length is &lt;strong&gt;'.$maxLen.'&lt;/strong&gt; characters. This means that the first '.$maxLen.' characters of your raw text (' . ($VARS-&gt;{nodeletKeepComments} ? '' : 'not ') . 'including comments) will be used for your notelet text. ';
%]&lt;/small&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Preview&lt;/strong&gt;:&lt;br /&gt;

[%
return '&lt;em&gt;No text entered for the Notelet nodelet.&lt;/em&gt;' unless (exists $VARS-&gt;{noteletScreened}) || (exists $VARS-&gt;{personalScreened});
if($query-&gt;param('oops')) {
$query-&gt;delete('oops');
return 'Oops. Since your Notelet text messed things up, the preview is hidden. Fix it then resubmit.';
}
my $curLen = length($VARS-&gt;{noteletScreened} || $VARS-&gt;{personalScreened});
my $s = '';

$s .= '(If you missed a closing tag somewhere, and the bottom part of this page is all messed up, follow this &lt;big&gt;&lt;strong&gt;&lt;a href=' . urlGen({'node_id'=&gt;$$NODE{node_id},'oops'=&gt;int(rand(99999))}) . '&gt;Oops!&lt;/a&gt;&lt;/strong&gt;&lt;/big&gt; link to hide the preview.)&lt;br /&gt;
';

if ($query-&gt;param('YesReallyCastrate') )
     {
     $s .= &quot;\n(&lt;b&gt;Note:&lt;/b&gt; your preview will be empty if you've just castrated the notelet)&lt;br&gt;&quot;;
     }

$s .= 'Your filtered length is currently '.$curLen.' character'.($curLen==1?'':'s') . '.
&lt;table border=&quot;1&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot;&gt;&lt;tr&gt;&lt;td&gt;' . ($VARS-&gt;{noteletScreened} || $VARS-&gt;{personalScreened}) . '
&lt;!--
this comment saves the user from old notelet text
with no closing comment mark; that is,
LEAVE THIS HERE
--&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;';
$s;
%]
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Edit&lt;/strong&gt;:&lt;br /&gt;
Your raw text is [%
my $l=length($VARS-&gt;{noteletRaw} || '');
return $l.' character'.($l==1?'':'s');
%].
&lt;br /&gt;
[{openform2:notelet_form}]
[{varcheckboxinverse:noteletKeepComments,Remove comments}] (Keep comments in if you're using scripting; otherwise, let them be removed. In either case, any comments in your source area, below, are not changed.)&lt;br /&gt;
&lt;textarea name=&quot;notelet_source&quot; rows=&quot;25&quot; cols=&quot;65 wrap=&quot;virtual&quot; onkeypress=&quot;var mylen = new String(document.notelet_form.notelet_source.value); if(mylen.length &gt; 32768) alert('You can only have up to 32768 characters in this nodelet. You currently have '+ String(mylen.length) + '.  Anything typed past this point will be irretrievably removed, never to be seen again.');&quot;&gt;[%
#could use [{customtextarea:1}] instead of rows and cols, but it is a bit big
encodeHTML(($VARS-&gt;{noteletRaw} || $VARS-&gt;{personalRaw}),1);
%]&lt;/textarea&gt;
&lt;br /&gt;
[%
#return 'still in beta' unless $query-&gt;param('isbetatester');
my @btns = ('submit','sumbit','button','notelet','noteletting','Notelet nodelet');

$query-&gt;hidden('sexisgood',1) .
$query-&gt;submit('makethechange',$btns[rand(int(@btns))]) .
htmlcode('verifyRequestForm', 'noteletedit');
%]
&lt;/form&gt;
&lt;/p&gt;

[%
delete $VARS-&gt;{'noteletScreened'}; #FIXME FIXME FIXME hack
return ''; #TODO
return unless $APP-&gt;isAdmin($USER);
#lets admins lock a user's Notelet for displaying
#this should only be used for extreme circumstances

if($query-&gt;param('unlock') || $query-&gt;param('lock')) {
#TODO: ensure valid user
}
if($query-&gt;param('unlock')) {
#TODO: unlocking stuff
} elsif($query-&gt;param('lock')) {
#TODO: locking stuff
}

my $str = htmlcode('openform','');

#TODO: textfield of user
#TODO: textfield of reason

$str .= '&lt;br /&gt;';
$str .= $query-&gt;submit('lock','Lock (need user name and reason)');
$str .= $query-&gt;submit('unlock','Unlock (need user name)');
$str .= '&lt;/form&gt;';

return '&lt;p&gt;&lt;br /&gt;&lt;br /&gt;Locking ain\'t working yet.&lt;br /&gt;' . $str;
%]
</doctext>
  <type_nodetype>14</type_nodetype>
  <title>Notelet Editor</title>
  <node_id>1291365</node_id>
</node>
