<node>
  <type_nodetype>14</type_nodetype>
  <doctext>[% return &quot;Hello there. This is a quick testing/debugging ground for me. Do not delete me, it is not worth the time&quot;; %]
&lt;br /&gt;&lt;br /&gt;
[%
  return &quot;&quot;;
  return unless $USER-&gt;{title} eq &quot;jaybonci&quot;;
  my $str = '';

  my ($GNL) = getNode('Gigantic Node Lister', getType('restricted_superdoc'));
  $str .= '&lt;li&gt;' .  linkNode ($GNL, undef, {lastnode_id =&gt; undef}) . '&lt;/li&gt;' if canReadNode ($USER, $GNL) ;
;
  my ($GCL) = getNode('Gigantic Code Lister', getType('restricted_superdoc'));
  $str .= '&lt;li&gt;' .  linkNode ($GCL, undef, {lastnode_id =&gt; undef}) . '&lt;/li&gt;' if canReadNode ($USER, $GCL) ;

  return '&lt;ul id=&quot;metalinks&quot;&gt;'.$str.'&lt;/ul&gt;' if $str
%]

[%
  return &quot;&quot;;
  return &quot;&quot; unless $APP-&gt;isEditor($USER);
  return &quot;squeeze&quot; if $^V eq &quot;v5.10.1&quot;;
  return &quot;wheezy&quot;;
%]

[%
  return &quot;&quot; unless $USER-&gt;{title} eq &quot;jaybonci&quot; or $USER-&gt;{title} eq &quot;root&quot;;
  my $count = 0;
  my $str = &quot;&lt;ul&gt;&quot;;
  my $list = [$DB-&gt;getNodeWhere({}, getType(&quot;opcode&quot;))];

  foreach my $n (@$list)
  {
    my $delegation_name = $n-&gt;{title};
    $delegation_name =~ s/[\s\-]/_/g;
    $count++;
    next if $n-&gt;{delegated}; 
      #!Everything::Delegation::htmlcode-&gt;can($delegation_name);
    $str .= &quot;&lt;li&gt;&quot;.$n-&gt;{title}.&quot;&lt;/li&gt;&quot;; #.&quot; - &quot;.(Everything::Delegation::htmlcode-&gt;can($delegation_name)?(&quot; Resolves &quot;):(&quot; DOES NOT RESOLVE &quot;)).&quot;&lt;/li&gt;&quot;;
  }
  $str .= &quot;&lt;/ul&gt;&quot;;
  return &quot;$count to go: &lt;br/&gt;$str&quot;;
%]</doctext>
  <node_id>1146920</node_id>
  <title>jaybonci's sandbox</title>
</node>
