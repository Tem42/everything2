<node>
  <doctext>[%
# how many minutes should a password reset link be valid for?
my $validForMinutes = 20;

my ($prompt, $user) = ('', '');
my $pass = $query -&gt; param('duck');
my $who = $query -&gt; param('who');

if (!$query -&gt; param('sockItToMe')){
	$prompt = 'Forgotten your password? Fill in your user name or email address here and choose
		a new password, and we will send you an email containing a link to reset it';

}elsif($pass ne $query -&gt; param('swan')){
	$prompt = &quot;Passwords don't match&quot;;

}elsif(!$pass || !$who){
	$prompt = 'Fill in all fields';

}else{
	$user = getNode($who, 'user');
	($user) = $DB -&gt; getNodeWhere({email =&gt; $who}, 'user')
		unless $user || $who !~ /^(\S+\@\S+\.\S+)$/;

	$prompt = 'Unknown user or email' unless $user;
}

$query -&gt; delete('duck', 'swan');

return htmlcode('openform')
	.$query -&gt; fieldset({style =&gt; 'width: 35em; max-width: 100%; margin: 3em auto 0'},
		$query -&gt; legend('Choose new password')
		.$query -&gt; p($prompt.':')
		.$query -&gt; p({style =&gt; 'text-align: right'},
			$query -&gt; label('Username or email address:'
				.$query -&gt; textfield('who', '', 30, 240))
			.'&lt;br&gt;'
			.$query -&gt; label('New password:'
				.$query -&gt; password_field('duck', '', 30, 240))
			.'&lt;br&gt;'
			.$query -&gt; label('Repeat new password:'
				.$query -&gt; password_field('swan', '', 30, 240))
			.'&lt;br&gt;'
			.$query -&gt; submit('sockItToMe', 'Submit')
		)
	)
.'&lt;/form&gt;' if $prompt;

# make sure they have a salt
$APP -&gt; updatePassword($user, $user -&gt; {passwd}) unless $user -&gt; {salt};

my ($action, $expiry, $mail, $blurb);

# if they've never logged on we resend them the activate email
if ($user -&gt; {lasttime}){
	$action = 'reset';
	$expiry = time() + $validForMinutes * 60;
	$mail = 'Everything2 password reset';
	$blurb = 'Your password reset link is on its way.';
}else{
	$action = 'activate';
	($mail, $expiry) = split /\|/, $user -&gt; {passwd};
	$mail = 'Welcome to Everything2';
	$blurb = 'You have been sent a new account activation link.';
}

# create link
my $params = $APP -&gt; getTokenLinkParameters($user, $pass, $action, $expiry);
my $link = urlGen($params, 'no quotes', getNode('Confirm password', 'superdoc'));

# send email
my %mail = %{getNode($mail , 'mail')};

my $name = $user -&gt; {realname} || $user -&gt; {title};
$mail{doctext} =~ s/&#171;name&#187;/$name/;
$mail{doctext} =~ s/&#171;link&#187;/$link/g;
$mail{doctext} =~ s/&#171;servername&#187;/$ENV{SERVER_NAME}/g;

$APP -&gt; node2mail($user -&gt; {email}, \%mail, 1);

$APP-&gt;securityLog($NODE, $USER, &quot;$action link requested for [$$user{title}\[user]] ($$user{email})&quot;);

return $query -&gt; p($blurb);

%]
</doctext>
  <title>Reset password</title>
  <node_id>2072175</node_id>
  <type_nodetype>14</type_nodetype>
</node>
