<node>
  <type_nodetype>14</type_nodetype>
  <title>Websterbless</title>
  <doctext>&lt;!-- A simple tool made by Lord Brawl --&gt;

&lt;P&gt;
A simple tool used to reward users who suggest writeup corrections to [Webster 1913].
&lt;/P&gt;

[%
return unless $APP-&gt;isEditor($USER);

# Display explanatory text to the gods group and designated Webby secretaries.
my $notestr = 'Users are blessed with 3 GP and receive an automated thank-you note from Webster 1913:&lt;br /&gt;&lt;br /&gt;';
$notestr .= '&lt;blockquote&gt;&lt;em&gt;[Webster 1913] says re [Writeup name]: Thank you! My servants have attended to any errors.&lt;/em&gt;&lt;/blockquote&gt;&lt;br /&gt;';
$notestr .= 'Writeup name is optional (this parameter is pure text, it is not checked in any way).&lt;br /&gt;&lt;br /&gt;';

# Display a count of Webby's messages, if non-zero. This count links to Webby's mailbox. The link currently works only for gods.
# TODO: Make mailbox link work for Webby secretaries.
# (The following is adapted from showmessages)
# ... make SQl query text for Webster 1913's messages
my $limits = 'for_user='.getId(getNode('Webster 1913', 'user'));
# ... total messages for user, archived and not, group and not, from all users
my $totalMsg = $DB-&gt;sqlSelect('COUNT(*)','message',$limits); 
# ... display the number of messages in Webster 1913's Message Inbox.
my $moreMsgStr = '';
if($totalMsg) {
   $moreMsgStr .= '&lt;a href='.urlGen({node=&gt;'Message Inbox', type=&gt;'superdoc',spy_user=&gt;'Webster 1913'}).'&gt;'.$totalMsg.'&lt;/a&gt; messages total';
}
# Display the number of messages Webster has, and link to Message Inbox
my $str2 = '';
$str2 .= '&lt;br /&gt;Webster 1913 has ' . $moreMsgStr . '&lt;br /&gt;&lt;br /&gt;' if length($moreMsgStr);
# Display the note text and the message text (if any).
$notestr .= $str2;
%]

[%
return unless $APP-&gt;isEditor($USER);

#Adapted from superbless
my @params = $query-&gt;param;
my $str = '';

# Get the list of users to be thanked.
my (@users, @thenodes);
foreach (@params) {
  if(/^webbyblessUser(\d+)$/) {
    $users[$1] = $query-&gt;param($_);
  }
  if(/^webbyblessNode(\d+)$/) {
    $thenodes[$1] = $query-&gt;param($_);
  }
}

# For this purpose the bless is fixed at 3 GP.
my $curGP = 3;

# Loop through, apply the bless, report the results
for(my $count=0; $count &lt; @users; $count++) {
  next unless $users[$count];

  my ($U) = getNode ($users[$count], 'user');
  if (not $U) {
    $str.=&quot;couldn't find user $users[$count]&lt;br /&gt;&quot;;
    next;
  }

  # Send an automated thank-you.
  htmlcode('sendPrivateMessage',{
    'recipient_id'=&gt;getId($U),
    'message'=&gt;'Thank you! My servants have attended to any errors.',
    'author'=&gt;'Webster 1913',
    'renode'=&gt;$thenodes[$count],
  });

  $str .= &quot;User $$U{title} was given $curGP GP&quot;;
  $$U{karma}+=1;
  updateNode($U, -1);
  htmlcode('achievementsByType','karma');
  $APP-&gt;securityLog(getNode('Superbless', 'superdoc'), $USER, &quot;$$USER{title} [Websterbless|Websterblessed] $$U{title} with $curGP GP.&quot;);
  $APP-&gt;adjustGP($U, $curGP);
  $str .= &quot;&lt;br /&gt;\n&quot;;
}
$str;

%]

[{openform}]
&lt;table border=&quot;1&quot;&gt;
[%
return unless $APP-&gt;isEditor($USER);

# Build the table rows for inputting user names
my $count = 5;
my $str;

#$str.=&quot;&lt;INPUT type=hidden name=op value=webbybless&gt;&quot;;

$str.=&quot;&lt;tr&gt;&lt;th&gt;Thank these users&lt;/th&gt;&lt;th&gt;Writeup name&lt;/th&gt;&lt;/tr&gt; &quot;;

for (my $i = 0; $i &lt; $count; $i++) {
  $query-&gt;param(&quot;webbyblessUser$i&quot;, '');
  $query-&gt;param(&quot;webbyblessNode$i&quot;, '');
  $str.=&quot;&lt;tr&gt;&lt;td&gt;&quot;;
  $str.=$query-&gt;textfield(&quot;webbyblessUser$i&quot;, '', 40, 80);
  $str.=&quot;&lt;/td&gt;&lt;td&gt;&quot;;
  $str.=$query-&gt;textfield(&quot;webbyblessNode$i&quot;, '', 40, 80);
  $str.=&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;
}

$str;


%]
&lt;/table&gt;
[{closeform}]</doctext>
  <node_id>1526847</node_id>
</node>
