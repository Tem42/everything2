<node>
  <type_nodetype>14</type_nodetype>
  <doctext>&lt;h4&gt;What It Does&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Takes the idea of [Do you C! what I C?] but pulls the user's bookmarks rather than C!s, so it's accessible to everyone.&lt;/li&gt;
&lt;li&gt;Picks up to 100 things you've bookmarked.&lt;/li&gt;
&lt;li&gt;Finds everyone else who has cooled those things, then uses the top 20 of those (your &quot;best friends.&quot;)&lt;/li&gt;
&lt;li&gt;Finds the writeups that have been cooled by your &quot;best friends&quot; the most.&lt;/li&gt;
&lt;li&gt;Shows you the top 10 from that list that you haven't voted on and have less than 10C!s.&lt;/li&gt;
&lt;/ul&gt;


[%
my $str;
$str.=htmlcode('openform');
$str.='&lt;p&gt;Or you can enter a user name to see what we think &lt;em&gt;they&lt;/em&gt; would like:'.$query-&gt;textfield('cooluser', '', 15,30);
$str.=htmlcode('closeform').'&lt;/p&gt;';


my $user_id = $$USER{user_id};

my $user = $query-&gt;param('cooluser');
my $pronoun = 'You';
if($user) {
	my $U = getNode($user, 'user');
	return $str . '&lt;br /&gt;Sorry, no &quot;'.encodeHTML($user).'&quot; is found on the system!' unless $U;
        $user_id=$$U{user_id};
        $pronoun='They';
}
my $numCools = 100;
my $numFriends = 20;
my $numWriteups = 10;
my $maxCools = $query-&gt;param('maxcools') || 10;

#my $coolList = $DB-&gt;sqlSelectMany(&quot;coolwriteups_id&quot;,&quot;coolwriteups&quot;,&quot;cooledby_user=$user_id order by rand() limit $numCools&quot;);

my $linktype=getId(getNode('bookmark', 'linktype'));
my $sqlstring = &quot;links.from_node=$user_id AND links.linktype=$linktype order by rand() limit $numCools&quot;;
my $coolList = $DB-&gt;sqlSelectMany(&quot;writeup.writeup_id&quot;, &quot;links INNER JOIN writeup ON writeup.parent_e2node = links.to_node OR writeup.writeup_id = links.to_node&quot;, $sqlstring);

return $str.&quot;$pronoun haven't bookmarked anything cool yet. Sorry&quot; unless $coolList-&gt;rows;
my @coolStr;

while (my $c = $coolList-&gt;fetchrow_hashref) {
    push (@coolStr, $$c{writeup_id});
    #$str.=&quot;One thing pushed. &quot;;
}

my $coolStr = join(',',@coolStr);
#$str.=&quot;&lt;code&gt;coolwriteups_id&lt;/code&gt;s: &quot;.$coolStr;
#return $str;

my $userList = $DB-&gt;sqlSelectMany(&quot;count(cooledby_user) as ucount, cooledby_user&quot;,&quot;coolwriteups&quot;,&quot;coolwriteups_id in ($coolStr) and cooledby_user!=$user_id group by cooledby_user order by ucount desc limit $numFriends&quot;);

#my $userList = $DB-&gt;sqlSelectMany(&quot;count(cooledby_user) as ucount, cooledby_user&quot;,&quot;coolwriteups INNER JOIN links ON links.from_node = $user_id AND links.linktype = $linktype INNER JOIN writeup ON writeup.parent_e2node = links.to_node OR writeup.writeup_id = links.to_node&quot;,&quot;coolwriteups_id in ($coolStr) and cooledby_user!=$user_id group by cooledby_user order by ucount desc limit $numFriends&quot;);

my @userSet;

return &quot;$pronoun don't have any 'best friends' yet. Sorry.&quot; unless $userList-&gt;rows;


while (my $u = $userList-&gt;fetchrow_hashref) {
push (@userSet, $$u{cooledby_user});
#$str.=&quot;ID: &quot;.$$u{cooledby_user};
}
#return $str;
my $userStr = join(',',@userSet);


my $recSet = $DB-&gt;sqlSelectMany(&quot;count(coolwriteups_id) as coolcount, coolwriteups_id&quot;, &quot;coolwriteups&quot;, &quot;(select count(*) from coolwriteups as c1 where c1.coolwriteups_id = coolwriteups.coolwriteups_id and c1.cooledby_user=$user_id)=0 and (select author_user from node where node_id=coolwriteups_id)!=$user_id and cooledby_user in (&quot;.$userStr.&quot;) group by coolwriteups_id having coolcount&gt;1 order by coolcount desc limit 100&quot;);

my $count;

while (my $r = $recSet-&gt;fetchrow_hashref) {
my $n = getNode($$r{coolwriteups_id});
next if hasVoted($n, $USER);
next if $$n{cooled} &gt; $maxCools;
next unless $n;
$count++;
$str .= linkNode($n).&quot;&lt;br /&gt;&quot;;
last if ($count == $numWriteups);
}

return $str;

%]



</doctext>
  <node_id>1957344</node_id>
  <title>The Recommender</title>
</node>
