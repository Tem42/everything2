<node>
  <type_nodetype>14</type_nodetype>
  <doctext>&lt;style type=&quot;text/css&quot;&gt;
&lt;!--
th {
	text-align: left;
}
--&gt;
&lt;/style&gt;


&lt;p&gt;
[% 
my $UID = getId($USER);

return '&lt;p&gt;Please log in first.&lt;/p&gt;' if $APP-&gt;isGuest($USER);

my $isRoot = exists $HTMLVARS{group_gods}{$UID};
my $isCE = $APP-&gt;isEditor($USER);
my $isEDev = exists $HTMLVARS{group_edev}{$UID};

my $showLinkViewcode = $isEDev || $isRoot;
my $showNodeId = $isEDev || $isRoot;

my @types = ();
my $filteredType;
my $testvar;
my $pushit;

if ($query-&gt;param('filter_nodetype')) {
	$filteredType=$query-&gt;param('filter_nodetype');
	$pushit = 1;
	if ((!$isCE) &amp;&amp; ($filteredType eq 'oppressor_superdoc')) {
		$pushit=0;
	}
	elsif ((!$isRoot) &amp;&amp; ($filteredType eq 'restricted_superdoc')) {
		$pushit=0;
	}
	elsif ((!$isEDev) &amp;&amp; ($filteredType eq 'EDevdoc')) {
		$pushit=0;
	}
	if ($pushit) {
		push(@types, $filteredType);
	}
}
else {
	@types = qw(superdoc document superdocnolinks);
	push(@types, 'oppressor_superdoc') if $isCE;
	push(@types, 'restricted_superdoc') if $isRoot;
	push(@types, 'restricted_testdoc') if $isRoot;
	push(@types, 'Edevdoc') if $isEDev;
}
foreach(@types) {
		$_ = getId(getType($_));
}

#TODO checkboxes to NOT show things

my %ids = ($$USER{node_id}=&gt;$USER, $$NODE{node_id}=&gt;$NODE);
local *getNodeFromID = sub {
	my $nid = $_[0];
	return undef unless (defined $nid) &amp;&amp; ($nid=~/^\d+$/);

	#already known, return it
	return $ids{$nid} if exists $ids{$nid};

	#unknown, find that (we also cache a mis-hit, so we don't try to get it again later)
	my $N = getNodeById($nid);
	return $ids{$nid}=$N;
};

my $opt;
my $str = '';

my $choicelist = [
	'0','whatever the database feels like',
	'idA','node_id, ascending (lowest first)',
	'idD','node_id, descending (highest first)',
	'nameA','title, ascending (ABC)',
	'nameD','title, descending (ZYX)',
	'authorA','author\'s ID, ascending (lowest ID first)',
	'authorD','author\'s ID, descending (highest ID first)',
	'createA','create time, ascending (oldest first)',
	'createD','create time, descending (newest first)',

];
$opt .= 'sort order: ' . htmlcode('varsComboBox','EDD_Sort', 0, @$choicelist) . &quot;&lt;br /&gt;\n&quot;;

#$opt .= $query-&gt;checkbox('sort_node_id',0,1,'sort by node_id').$query-&gt;checkbox('sort_reverse',0,1,'backwards (highest first)').&quot;&lt;br /&gt;\n&quot;;

$opt .= 'only show things';
#$opt.=' (' . $query-&gt;checkbox('filter_user_not',0,1,'not') . ')';
$opt.=' written by ' . $query-&gt;textfield('filter_user') . '&lt;br /&gt;
';
$opt .= 'only show nodes of type' . $query-&gt;textfield('filter_nodetype') . '&lt;br /&gt;
';

$str .=&lt;&lt;HTML;
Choose your poison, sir:
&lt;form method=&quot;POST&quot;&gt;
&lt;input type=&quot;hidden&quot; name=&quot;node_id&quot; value=&quot;$NODE-&gt;{node_id}&quot;&gt;
$opt
&lt;input type=&quot;submit&quot; value=&quot;Fetch!&quot;&gt;
&lt;/form&gt;
HTML


#local *cgiBool = sub {
#	return ($query-&gt;param($_[0]) eq '1') ? 1 : 0;
#};

#my $filterUserNot = cgiBool('filter_user_not');

my $filterUser = (defined $query-&gt;param('filter_user')) ? $query-&gt;param('filter_user') : undef;
if(defined $filterUser) {
	$filterUser = getNode($filterUser, 'user') || getNode($filterUser, 'usergroup') || undef;
}
if(defined $filterUser) {
	$filterUser = getId($filterUser);
}

#mapping of unsafe VARS sort data into safe SQL
my %mapVARStoSQL = (
	'0' =&gt; '',
	'idA' =&gt; 'node_id ASC',
	'idD' =&gt; 'node_id DESC',
	'nameA' =&gt; 'title ASC',
	'nameD' =&gt; 'title DESC',
	'authorA' =&gt; 'author_user ASC',
	'authorD' =&gt; 'author_user DESC',
	'createA' =&gt; 'createtime ASC',
	'createD' =&gt; 'createtime DESC',
);
my $sqlSort = '';
if( (exists $VARS-&gt;{EDD_Sort}) &amp;&amp; (defined $VARS-&gt;{EDD_Sort}) ) {
	if(exists $mapVARStoSQL{$VARS-&gt;{EDD_Sort}}) {
		$sqlSort = $mapVARStoSQL{$VARS-&gt;{EDD_Sort}};
	}
}

$str.='&lt;table&gt;
&lt;tr bgcolor=&quot;#dddddd&quot;&gt;';
$str .= '&lt;th class=&quot;oddrow&quot;&gt;&lt;small&gt;&lt;small&gt;viewcode&lt;/small&gt;&lt;/small&gt;&lt;/th&gt;' if $showLinkViewcode;
$str .= '&lt;th class=&quot;oddrow&quot;&gt;title&lt;/th&gt;&lt;th class=&quot;oddrow&quot;&gt;author&lt;/th&gt;&lt;th class=&quot;oddrow&quot;&gt;type&lt;/th&gt;&lt;th class=&quot;oddrow&quot;&gt;created&lt;/th&gt;';
$str .= '&lt;th class=&quot;oddrow&quot;&gt;node_id&lt;/th&gt;' if $showNodeId;
$str .= '&lt;/tr&gt;
';


my @nodes = getNodeWhere({type_nodetype =&gt; \@types, author_user =&gt; $filterUser},'',$sqlSort);
my $shown = 0;
my $limit = $query-&gt;param('edd_limit') || 0;
if($limit =~ /^(\d+)$/) { $limit = $1 || 0; } else { $limit = 0; }
unless($limit) {
	#default to a reasonable limit if don't specify limit
	$limit = 60;
	$limit += 10 if $isEDev;
	$limit += 10 if $isCE;
	$limit += 10 if $isRoot;
}
foreach my $n (@nodes) {
#	next if $$n{type}{title} eq 'restricted_superdoc' and not $isRoot;
	last if $shown &gt;= $limit;
	++$shown;
	my $user = getNodeFromID($$n{author_user});

	$str .= '&lt;tr&gt;&lt;td&gt;';

	#FIXME don't show viewcode link on nodetypes that don't have viewcode
	$str .= '&lt;a href='.urlGen({'node_id'=&gt;$$n{node_id},'displaytype'=&gt;'viewcode'}).'&gt;vc&lt;/a&gt;&lt;/td&gt;&lt;td&gt;' if $showLinkViewcode;

	$str .= linkNode($n, 0, {lastnode_id=&gt;0}) .

		'&lt;/td&gt;&lt;td&gt;' .
		$$user{title} .
		'&lt;/td&gt;&lt;td&gt;&lt;small&gt;' .
		$$n{type}{title} .
		'&lt;/small&gt;&lt;/td&gt;&lt;td&gt;&lt;small&gt;' .
		htmlcode('parsetimestamp',$$n{createtime}.',1') .
		'&lt;/small&gt;&lt;/td&gt;'
	;
	if($showNodeId) {
		$str .= '&lt;td&gt;' . $$n{node_id} . '&lt;/td&gt;';
	}
	$str .= '&lt;/tr&gt;
'
	;
}

$str = (($shown != scalar(@nodes)) ? linkNode($NODE,scalar(@nodes),{edd_limit=&gt;scalar(@nodes), lastnode_id=&gt;0}) : $shown) .
' found, ' . $shown . ' most recent shown.&lt;br /&gt;' . $str . '&lt;/table&gt;';

#$str = 'Warning: viewcode link does not work on some things like &quot;document&quot;s. Some [N-Wing|lazy guy] should suppress the link display for those cases.&lt;/p&gt;&lt;p&gt;' . $str if $showLinkViewcode;

$str = 'Lucky you; you also can use &lt;a href='.urlGen({'node'=&gt;'List Nodes of Type','type'=&gt;'superdoc'}).'&gt;List Nodes of Type&lt;/a&gt;,&lt;/p&gt;&lt;p&gt;' . $str if ($isEDev || $isCE);

return $str; # added 7/6/2006 by Gorgonzola 
%]
&lt;/p&gt;
</doctext>
  <node_id>1009343</node_id>
  <title>Everything Document Directory</title>
</node>
